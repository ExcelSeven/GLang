Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CREATE
    CTE_CHAR
    E
    FALSE
    PI
    QUOTE
    RETURN
    TRUE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
Rule 2     end_quad -> <empty>
Rule 3     add_count -> <empty>
Rule 4     addfunction -> <empty>
Rule 5     quad_main -> <empty>
Rule 6     PROGRAMA_A -> MODULO PROGRAMA_A
Rule 7     PROGRAMA_A -> EMPTY
Rule 8     VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A
Rule 9     VARS_A -> TIPO_P VARS_B
Rule 10    VARS_A -> TIPO_S VARS_B
Rule 11    VARS_B -> ID add_variable VARS_E VARS_C
Rule 12    add_variable -> <empty>
Rule 13    VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F
Rule 14    VARS_E -> EMPTY
Rule 15    VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C
Rule 16    VARS_F -> VARS_C
Rule 17    VARS_C -> SEMICOLON VARS_D
Rule 18    VARS_C -> COMMA VARS_B
Rule 19    VARS_D -> CLOSE_BRACKET
Rule 20    VARS_D -> VARS_A
Rule 21    BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET
Rule 22    ESTATUTO_A -> ESTATUTO ESTATUTO_A
Rule 23    ESTATUTO_A -> EMPTY
Rule 24    ESTATUTO -> ASIGNACION
Rule 25    ESTATUTO -> CONDICION
Rule 26    ESTATUTO -> NOMBRAR
Rule 27    ESTATUTO -> FOR
Rule 28    ESTATUTO -> WHILE
Rule 29    ESTATUTO -> PRINT
Rule 30    ESTATUTO -> PLOT
Rule 31    ESTATUTO -> LLAMADAMODULO
Rule 32    ESTATUTO -> INPUT
Rule 33    ESTATUTO -> COLOR
Rule 34    TIPO_P -> INT
Rule 35    TIPO_P -> FLOAT
Rule 36    TIPO_P -> BOOL
Rule 37    TIPO_P -> CHAR
Rule 38    TIPO_S -> TYPE_GRAPH
Rule 39    TIPO_S -> TYPE_PIECHART
Rule 40    TIPO_S -> TYPE_BARCHART
Rule 41    TIPO_S -> TYPE_HORBARCHART
Rule 42    TIPO_S -> TYPE_DONUTGRAPH
Rule 43    TIPO_S -> TYPE_NETWORK
Rule 44    TIPO_S -> TYPE_VENN
Rule 45    TIPO_S -> TYPE_RADARCHART
Rule 46    MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto
Rule 47    release_vars -> <empty>
Rule 48    returnto -> <empty>
Rule 49    change_scope -> <empty>
Rule 50    add_functionr -> <empty>
Rule 51    MODULO_A -> VOID
Rule 52    MODULO_A -> TIPO_P
Rule 53    MODULO_B -> COMMA MODULO_C
Rule 54    MODULO_B -> EMPTY
Rule 55    MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D
Rule 56    add_variable_m -> <empty>
Rule 57    MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET
Rule 58    MODULO_D -> EMPTY
Rule 59    add_start -> <empty>
Rule 60    param_table -> <empty>
Rule 61    LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
Rule 62    gosub -> <empty>
Rule 63    era -> <empty>
Rule 64    LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C
Rule 65    LLAMADAMODULO_A -> EMPTY
Rule 66    incK -> <empty>
Rule 67    LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
Rule 68    check_types -> <empty>
Rule 69    LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON
Rule 70    LLAMADAMODULO_D -> EMPTY
Rule 71    NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 72    NOMBRAR_A -> NAME
Rule 73    NOMBRAR_A -> NAMEX
Rule 74    NOMBRAR_A -> NAMEY
Rule 75    ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
Rule 76    quad -> <empty>
Rule 77    addStackO -> <empty>
Rule 78    ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
Rule 79    ASIGNACION_A -> EMPTY
Rule 80    ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 81    ASIGNACION_B -> EMPTY
Rule 82    ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS
Rule 83    ASIGNACION_C -> EQUAL CTE_STRING
Rule 84    add_equal -> <empty>
Rule 85    CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
Rule 86    fill_end -> <empty>
Rule 87    check_bool -> <empty>
Rule 88    CONDICION_A -> gotoElse ELSE BLOQUE
Rule 89    CONDICION_A -> EMPTY
Rule 90    gotoElse -> <empty>
Rule 91    FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
Rule 92    repeat_for -> <empty>
Rule 93    bool_for -> <empty>
Rule 94    WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
Rule 95    goto_while -> <empty>
Rule 96    bool_while -> <empty>
Rule 97    EXP -> TERMINO pop_exp EXP_A
Rule 98    pop_exp -> <empty>
Rule 99    EXP_A -> PLUS append_operator EXP
Rule 100   EXP_A -> MINS append_operator EXP
Rule 101   EXP_A -> EMPTY
Rule 102   append_operator -> <empty>
Rule 103   TERMINO -> FACTOR pop_term TERMINO_A
Rule 104   pop_term -> <empty>
Rule 105   TERMINO_A -> TIMES add_operator TERMINO
Rule 106   TERMINO_A -> DIVIDE add_operator TERMINO
Rule 107   TERMINO_A -> EMPTY
Rule 108   add_operator -> <empty>
Rule 109   COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
Rule 110   COLOR_A -> COLOR_RED
Rule 111   COLOR_A -> COLOR_BLACK
Rule 112   COLOR_A -> COLOR_BLUE
Rule 113   COLOR_A -> COLOR_PURPLE
Rule 114   COLOR_A -> COLOR_GREEN
Rule 115   COLOR_A -> COLOR_ORANGE
Rule 116   FACTOR -> FACTOR_A
Rule 117   FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
Rule 118   FACTOR_A -> PLUS FACTOR_C
Rule 119   FACTOR_A -> MINS FACTOR_C
Rule 120   FACTOR_A -> FACTOR_C
Rule 121   FACTOR_A -> EMPTY
Rule 122   FACTOR_B -> EXPRESIONESVARIAS FACTOR_C
Rule 123   FACTOR_C -> VARS_CTE
Rule 124   VARS_CTE -> CTE_INTEGER
Rule 125   VARS_CTE -> CTE_FLOAT
Rule 126   VARS_CTE -> BOOLEAN
Rule 127   VARS_CTE -> ID VARS_CTE_A
Rule 128   VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B
Rule 129   VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
Rule 130   VARS_CTE_A -> EMPTY
Rule 131   VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS
Rule 132   VARS_CTE_C -> COMMA VARS_CTE_B
Rule 133   VARS_CTE_C -> EMPTY
Rule 134   VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 135   VARS_CTE_D -> EMPTY
Rule 136   INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
Rule 137   add_inputid -> <empty>
Rule 138   quad_input -> <empty>
Rule 139   INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
Rule 140   INPUT_A -> EMPTY
Rule 141   INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 142   PLOT -> PGraph
Rule 143   PLOT -> PPie
Rule 144   PLOT -> PGBarras
Rule 145   PLOT -> PGBarrasHor
Rule 146   PLOT -> PDona
Rule 147   PLOT -> PRadar
Rule 148   PLOT -> PVenn
Rule 149   PLOT -> PLOT_B
Rule 150   PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
Rule 151   PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
Rule 152   PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
Rule 153   PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
Rule 154   PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E
Rule 155   PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E
Rule 156   PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 157   PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
Rule 158   PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON
Rule 159   PLOT_I -> CTE_INTEGER PLOT_D
Rule 160   PLOT_I -> CTE_FLOAT PLOT_D
Rule 161   PLOT_D -> COMMA PLOT_I
Rule 162   PLOT_D -> EMPTY
Rule 163   PLOT_E -> PLOT_F SEMICOLON PLOT_G
Rule 164   PLOT_F -> CTE_INTEGER PLOT_J
Rule 165   PLOT_F -> CTE_FLOAT PLOT_J
Rule 166   PLOT_J -> COMMA PLOT_F
Rule 167   PLOT_J -> EMPTY
Rule 168   PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON
Rule 169   PLOT_K -> CTE_STRING PLOT_H
Rule 170   PLOT_H -> COMMA PLOT_K
Rule 171   PLOT_H -> EMPTY
Rule 172   PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
Rule 173   PLOT_N -> CTE_STRING PLOT_O
Rule 174   PLOT_O -> COMMA PLOT_N
Rule 175   PLOT_O -> EMPTY
Rule 176   PLOT_P -> CTE_STRING PLOT_Q
Rule 177   PLOT_Q -> COMMA PLOT_P
Rule 178   PLOT_Q -> EMPTY
Rule 179   PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
Rule 180   PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON
Rule 181   PRINT_B -> CTE_STRING print_string PRINT_C
Rule 182   PRINT_B -> EXPRESIONESVARIAS print_id
Rule 183   print_string -> <empty>
Rule 184   print_id -> <empty>
Rule 185   PRINT_C -> PLUS PRINT_B
Rule 186   PRINT_C -> EMPTY
Rule 187   EXPRESIONESVARIAS -> NOT EV_C
Rule 188   EXPRESIONESVARIAS -> EV_C
Rule 189   EV_C -> EXP_RELOP EV_B
Rule 190   EV_B -> AND add_ev EV_C
Rule 191   EV_B -> OR add_ev EV_C
Rule 192   EV_B -> EMPTY
Rule 193   add_ev -> <empty>
Rule 194   EXP_RELOP -> EXP EXP_RELOP_A
Rule 195   EXP_RELOP -> EMPTY
Rule 196   EXP_RELOP_A -> RELOP add_relop EXP
Rule 197   EXP_RELOP_A -> EMPTY
Rule 198   add_relop -> <empty>
Rule 199   EMPTY -> <empty>

Terminals, with rules where they appear

AND                  : 190
BOOL                 : 36
BOOLEAN              : 126
CHAR                 : 37
CLOSE_BRACKET        : 1 19 21 57
CLOSE_PARENTHESIS    : 57 69 71 85 91 94 109 117 131 156 158 168 172 180
CLOSE_SQUARE_BRACKET : 13 15 78 80 129 134 139 141 172 172
COLOR_BLACK          : 111
COLOR_BLUE           : 112
COLOR_GREEN          : 114
COLOR_KEYWORD        : 109
COLOR_ORANGE         : 115
COLOR_PURPLE         : 113
COLOR_RED            : 110
COMMA                : 18 53 64 132 156 156 156 161 166 170 174 177
CREATE               : 
CREATED              : 154
CREATEG              : 150
CREATEGB             : 152
CREATEGBH            : 153
CREATEN              : 157
CREATEPC             : 151
CREATER              : 155
CREATEV              : 156
CTE_CHAR             : 
CTE_FLOAT            : 125 160 165
CTE_INTEGER          : 13 15 124 156 156 156 159 164
CTE_STRING           : 71 83 156 156 169 173 176 181
DIVIDE               : 106
E                    : 
ELSE                 : 88
EQUAL                : 82 83
FALSE                : 
FLOAT                : 35
FOR_KEYWORD          : 91
ID                   : 1 11 46 55 61 71 75 109 127 136 150 151 152 153 154 155 156 157
IF                   : 85
INPUTSYMBOL          : 136
INPUT_KEYWORD        : 136
INT                  : 34
MAIN                 : 1
MINS                 : 100 119
MODULE               : 46
NAME                 : 72
NAMEX                : 73
NAMEY                : 74
NOT                  : 187
OPEN_BRACKET         : 1 8 21 57
OPEN_PARENTHESIS     : 46 61 71 85 91 94 109 117 128 150 151 152 153 154 155 156 157 179
OPEN_SQUARE_BRACKET  : 13 15 78 80 129 134 139 141 157 172
OR                   : 191
PI                   : 
PLUS                 : 99 118 185
POINT                : 71 109 150 151 152 153 154 155 156 157
PRINT_KEYWORD        : 179
PROGRAM              : 1
QUOTE                : 
RELOP                : 196
RETURN               : 
SEMICOLON            : 17 69 71 75 91 109 136 156 156 158 163 168 172 172 180
TIMES                : 105
TRUE                 : 
TYPE_BARCHART        : 40
TYPE_DONUTGRAPH      : 42
TYPE_GRAPH           : 38
TYPE_HORBARCHART     : 41
TYPE_NETWORK         : 43
TYPE_PIECHART        : 39
TYPE_RADARCHART      : 45
TYPE_VENN            : 44
VARS_KEYWORD         : 8
VOID                 : 51
WHILE_KEYWORD        : 94
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 24 91 91
ASIGNACION_A         : 75
ASIGNACION_B         : 78
ASIGNACION_C         : 75
BLOQUE               : 1 57 85 88 91 94
COLOR                : 33
COLOR_A              : 109
CONDICION            : 25
CONDICION_A          : 85
EMPTY                : 7 14 23 54 58 65 70 79 81 89 101 107 121 130 133 135 140 162 167 171 175 178 186 192 195 197
ESTATUTO             : 22
ESTATUTO_A           : 21 22
EV_B                 : 189
EV_C                 : 187 188 190 191
EXP                  : 67 78 80 99 100 129 131 134 139 141 194 196
EXPRESIONESVARIAS    : 82 85 91 94 122 182
EXP_A                : 97
EXP_RELOP            : 189
EXP_RELOP_A          : 194
FACTOR               : 103
FACTOR_A             : 116
FACTOR_B             : 117
FACTOR_C             : 118 119 120 122
FOR                  : 27
INPUT                : 32
INPUT_A              : 136
INPUT_B              : 139
LLAMADAMODULO        : 31
LLAMADAMODULO_A      : 67
LLAMADAMODULO_C      : 61 64
LLAMADAMODULO_D      : 67
MODULO               : 6
MODULO_A             : 46
MODULO_B             : 55
MODULO_C             : 46 53
MODULO_D             : 55
NOMBRAR              : 26
NOMBRAR_A            : 71
PDona                : 146
PGBarras             : 144
PGBarrasHor          : 145
PGraph               : 142
PLOT                 : 30
PLOT_B               : 149
PLOT_C               : 150
PLOT_D               : 159 160
PLOT_E               : 151 152 153 154 155
PLOT_F               : 163 166
PLOT_G               : 163
PLOT_H               : 169
PLOT_I               : 158 161
PLOT_J               : 164 165
PLOT_K               : 168 170
PLOT_M               : 157
PLOT_N               : 172 174
PLOT_O               : 173
PLOT_P               : 172 177
PLOT_Q               : 176
PPie                 : 143
PRINT                : 29
PRINT_A              : 179
PRINT_B              : 180 185
PRINT_C              : 181
PROGRAMA             : 0
PROGRAMA_A           : 1 6
PRadar               : 147
PVenn                : 148
TERMINO              : 97 105 106
TERMINO_A            : 103
TIPO_P               : 9 52 55
TIPO_S               : 10
VARS                 : 1 57
VARS_A               : 8 20
VARS_B               : 9 10 18
VARS_C               : 11 15 16
VARS_CTE             : 123
VARS_CTE_A           : 127
VARS_CTE_B           : 128 132
VARS_CTE_C           : 131
VARS_CTE_D           : 129
VARS_D               : 17
VARS_E               : 11
VARS_F               : 13
WHILE                : 28
addStackO            : 75
add_count            : 1 57
add_equal            : 82
add_ev               : 190 191
add_functionr        : 46
add_inputid          : 136
add_operator         : 105 106
add_relop            : 196
add_start            : 57
add_variable         : 11
add_variable_m       : 55
addfunction          : 1
append_operator      : 99 100
bool_for             : 91
bool_while           : 94
change_scope         : 46
check_bool           : 85
check_types          : 67
end_quad             : 1
era                  : 61
fill_end             : 85
gosub                : 61
gotoElse             : 88
goto_while           : 94
incK                 : 64
param_table          : 57
pop_exp              : 97
pop_term             : 103
print_id             : 182
print_string         : 181
quad                 : 75
quad_input           : 136
quad_main            : 1
release_vars         : 46
repeat_for           : 91
returnto             : 46

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (4) addfunction -> .

    OPEN_BRACKET    reduce using rule 4 (addfunction -> .)

    addfunction                    shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addfunction . OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    OPEN_BRACKET    shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET . VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 6

state 6

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS . add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (3) add_count -> .

    MODULE          reduce using rule 3 (add_count -> .)
    MAIN            reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 8

state 7

    (8) VARS -> VARS_KEYWORD . OPEN_BRACKET VARS_A

    OPEN_BRACKET    shift and go to state 9


state 8

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count . PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (46) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto
    (199) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 199 (EMPTY -> .)

    PROGRAMA_A                     shift and go to state 10
    MODULO                         shift and go to state 11
    EMPTY                          shift and go to state 12

state 9

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (34) TIPO_P -> . INT
    (35) TIPO_P -> . FLOAT
    (36) TIPO_P -> . BOOL
    (37) TIPO_P -> . CHAR
    (38) TIPO_S -> . TYPE_GRAPH
    (39) TIPO_S -> . TYPE_PIECHART
    (40) TIPO_S -> . TYPE_BARCHART
    (41) TIPO_S -> . TYPE_HORBARCHART
    (42) TIPO_S -> . TYPE_DONUTGRAPH
    (43) TIPO_S -> . TYPE_NETWORK
    (44) TIPO_S -> . TYPE_VENN
    (45) TIPO_S -> . TYPE_RADARCHART

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_A                         shift and go to state 14
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 10

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A . MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    MAIN            shift and go to state 29


state 11

    (6) PROGRAMA_A -> MODULO . PROGRAMA_A
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (46) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto
    (199) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 199 (EMPTY -> .)

    MODULO                         shift and go to state 11
    PROGRAMA_A                     shift and go to state 30
    EMPTY                          shift and go to state 12

state 12

    (7) PROGRAMA_A -> EMPTY .

    MAIN            reduce using rule 7 (PROGRAMA_A -> EMPTY .)


state 13

    (46) MODULO -> MODULE . MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto
    (51) MODULO_A -> . VOID
    (52) MODULO_A -> . TIPO_P
    (34) TIPO_P -> . INT
    (35) TIPO_P -> . FLOAT
    (36) TIPO_P -> . BOOL
    (37) TIPO_P -> . CHAR

    VOID            shift and go to state 32
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_A                       shift and go to state 31
    TIPO_P                         shift and go to state 33

state 14

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .

    MODULE          reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    MAIN            reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    OPEN_BRACKET    reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)


state 15

    (9) VARS_A -> TIPO_P . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 34

state 16

    (10) VARS_A -> TIPO_S . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 36

state 17

    (34) TIPO_P -> INT .

    ID              reduce using rule 34 (TIPO_P -> INT .)


state 18

    (35) TIPO_P -> FLOAT .

    ID              reduce using rule 35 (TIPO_P -> FLOAT .)


state 19

    (36) TIPO_P -> BOOL .

    ID              reduce using rule 36 (TIPO_P -> BOOL .)


state 20

    (37) TIPO_P -> CHAR .

    ID              reduce using rule 37 (TIPO_P -> CHAR .)


state 21

    (38) TIPO_S -> TYPE_GRAPH .

    ID              reduce using rule 38 (TIPO_S -> TYPE_GRAPH .)


state 22

    (39) TIPO_S -> TYPE_PIECHART .

    ID              reduce using rule 39 (TIPO_S -> TYPE_PIECHART .)


state 23

    (40) TIPO_S -> TYPE_BARCHART .

    ID              reduce using rule 40 (TIPO_S -> TYPE_BARCHART .)


state 24

    (41) TIPO_S -> TYPE_HORBARCHART .

    ID              reduce using rule 41 (TIPO_S -> TYPE_HORBARCHART .)


state 25

    (42) TIPO_S -> TYPE_DONUTGRAPH .

    ID              reduce using rule 42 (TIPO_S -> TYPE_DONUTGRAPH .)


state 26

    (43) TIPO_S -> TYPE_NETWORK .

    ID              reduce using rule 43 (TIPO_S -> TYPE_NETWORK .)


state 27

    (44) TIPO_S -> TYPE_VENN .

    ID              reduce using rule 44 (TIPO_S -> TYPE_VENN .)


state 28

    (45) TIPO_S -> TYPE_RADARCHART .

    ID              reduce using rule 45 (TIPO_S -> TYPE_RADARCHART .)


state 29

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN . quad_main BLOQUE CLOSE_BRACKET end_quad
    (5) quad_main -> .

    OPEN_BRACKET    reduce using rule 5 (quad_main -> .)

    quad_main                      shift and go to state 37

state 30

    (6) PROGRAMA_A -> MODULO PROGRAMA_A .

    MAIN            reduce using rule 6 (PROGRAMA_A -> MODULO PROGRAMA_A .)


state 31

    (46) MODULO -> MODULE MODULO_A . ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto

    ID              shift and go to state 38


state 32

    (51) MODULO_A -> VOID .

    ID              reduce using rule 51 (MODULO_A -> VOID .)


state 33

    (52) MODULO_A -> TIPO_P .

    ID              reduce using rule 52 (MODULO_A -> TIPO_P .)


state 34

    (9) VARS_A -> TIPO_P VARS_B .

    MODULE          reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    MAIN            reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    OPEN_BRACKET    reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    SEMICOLON       reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    COMMA           reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)


state 35

    (11) VARS_B -> ID . add_variable VARS_E VARS_C
    (12) add_variable -> .

    OPEN_SQUARE_BRACKET reduce using rule 12 (add_variable -> .)
    SEMICOLON       reduce using rule 12 (add_variable -> .)
    COMMA           reduce using rule 12 (add_variable -> .)

    add_variable                   shift and go to state 39

state 36

    (10) VARS_A -> TIPO_S VARS_B .

    MODULE          reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    MAIN            reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    OPEN_BRACKET    reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    SEMICOLON       reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    COMMA           reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)


state 37

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main . BLOQUE CLOSE_BRACKET end_quad
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 41

state 38

    (46) MODULO -> MODULE MODULO_A ID . add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto
    (50) add_functionr -> .

    OPEN_PARENTHESIS reduce using rule 50 (add_functionr -> .)

    add_functionr                  shift and go to state 42

state 39

    (11) VARS_B -> ID add_variable . VARS_E VARS_C
    (13) VARS_E -> . OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F
    (14) VARS_E -> . EMPTY
    (199) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 44
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)

    VARS_E                         shift and go to state 43
    EMPTY                          shift and go to state 45

state 40

    (21) BLOQUE -> OPEN_BRACKET . ESTATUTO_A CLOSE_BRACKET
    (22) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (23) ESTATUTO_A -> . EMPTY
    (24) ESTATUTO -> . ASIGNACION
    (25) ESTATUTO -> . CONDICION
    (26) ESTATUTO -> . NOMBRAR
    (27) ESTATUTO -> . FOR
    (28) ESTATUTO -> . WHILE
    (29) ESTATUTO -> . PRINT
    (30) ESTATUTO -> . PLOT
    (31) ESTATUTO -> . LLAMADAMODULO
    (32) ESTATUTO -> . INPUT
    (33) ESTATUTO -> . COLOR
    (199) EMPTY -> .
    (75) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (85) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (71) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (91) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (94) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (179) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (142) PLOT -> . PGraph
    (143) PLOT -> . PPie
    (144) PLOT -> . PGBarras
    (145) PLOT -> . PGBarrasHor
    (146) PLOT -> . PDona
    (147) PLOT -> . PRadar
    (148) PLOT -> . PVenn
    (149) PLOT -> . PLOT_B
    (61) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (136) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (109) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (150) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (151) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (152) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (153) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (154) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (155) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (156) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (157) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    ID              shift and go to state 59
    IF              shift and go to state 60
    FOR_KEYWORD     shift and go to state 61
    WHILE_KEYWORD   shift and go to state 62
    PRINT_KEYWORD   shift and go to state 63
    INPUT_KEYWORD   shift and go to state 72

    ESTATUTO_A                     shift and go to state 46
    ESTATUTO                       shift and go to state 47
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    PGraph                         shift and go to state 64
    PPie                           shift and go to state 65
    PGBarras                       shift and go to state 66
    PGBarrasHor                    shift and go to state 67
    PDona                          shift and go to state 68
    PRadar                         shift and go to state 69
    PVenn                          shift and go to state 70
    PLOT_B                         shift and go to state 71

state 41

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE . CLOSE_BRACKET end_quad

    CLOSE_BRACKET   shift and go to state 73


state 42

    (46) MODULO -> MODULE MODULO_A ID add_functionr . OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto

    OPEN_PARENTHESIS shift and go to state 74


state 43

    (11) VARS_B -> ID add_variable VARS_E . VARS_C
    (17) VARS_C -> . SEMICOLON VARS_D
    (18) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 76
    COMMA           shift and go to state 77

    VARS_C                         shift and go to state 75

state 44

    (13) VARS_E -> OPEN_SQUARE_BRACKET . CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F

    CTE_INTEGER     shift and go to state 78


state 45

    (14) VARS_E -> EMPTY .

    SEMICOLON       reduce using rule 14 (VARS_E -> EMPTY .)
    COMMA           reduce using rule 14 (VARS_E -> EMPTY .)


state 46

    (21) BLOQUE -> OPEN_BRACKET ESTATUTO_A . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 79


state 47

    (22) ESTATUTO_A -> ESTATUTO . ESTATUTO_A
    (22) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (23) ESTATUTO_A -> . EMPTY
    (24) ESTATUTO -> . ASIGNACION
    (25) ESTATUTO -> . CONDICION
    (26) ESTATUTO -> . NOMBRAR
    (27) ESTATUTO -> . FOR
    (28) ESTATUTO -> . WHILE
    (29) ESTATUTO -> . PRINT
    (30) ESTATUTO -> . PLOT
    (31) ESTATUTO -> . LLAMADAMODULO
    (32) ESTATUTO -> . INPUT
    (33) ESTATUTO -> . COLOR
    (199) EMPTY -> .
    (75) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (85) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (71) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (91) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (94) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (179) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (142) PLOT -> . PGraph
    (143) PLOT -> . PPie
    (144) PLOT -> . PGBarras
    (145) PLOT -> . PGBarrasHor
    (146) PLOT -> . PDona
    (147) PLOT -> . PRadar
    (148) PLOT -> . PVenn
    (149) PLOT -> . PLOT_B
    (61) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (136) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (109) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (150) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (151) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (152) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (153) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (154) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (155) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (156) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (157) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    ID              shift and go to state 59
    IF              shift and go to state 60
    FOR_KEYWORD     shift and go to state 61
    WHILE_KEYWORD   shift and go to state 62
    PRINT_KEYWORD   shift and go to state 63
    INPUT_KEYWORD   shift and go to state 72

    ESTATUTO                       shift and go to state 47
    ESTATUTO_A                     shift and go to state 80
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    PGraph                         shift and go to state 64
    PPie                           shift and go to state 65
    PGBarras                       shift and go to state 66
    PGBarrasHor                    shift and go to state 67
    PDona                          shift and go to state 68
    PRadar                         shift and go to state 69
    PVenn                          shift and go to state 70
    PLOT_B                         shift and go to state 71

state 48

    (23) ESTATUTO_A -> EMPTY .

    CLOSE_BRACKET   reduce using rule 23 (ESTATUTO_A -> EMPTY .)


state 49

    (24) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    FOR_KEYWORD     reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    WHILE_KEYWORD   reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    PRINT_KEYWORD   reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    INPUT_KEYWORD   reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    CLOSE_BRACKET   reduce using rule 24 (ESTATUTO -> ASIGNACION .)


state 50

    (25) ESTATUTO -> CONDICION .

    ID              reduce using rule 25 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 25 (ESTATUTO -> CONDICION .)
    FOR_KEYWORD     reduce using rule 25 (ESTATUTO -> CONDICION .)
    WHILE_KEYWORD   reduce using rule 25 (ESTATUTO -> CONDICION .)
    PRINT_KEYWORD   reduce using rule 25 (ESTATUTO -> CONDICION .)
    INPUT_KEYWORD   reduce using rule 25 (ESTATUTO -> CONDICION .)
    CLOSE_BRACKET   reduce using rule 25 (ESTATUTO -> CONDICION .)


state 51

    (26) ESTATUTO -> NOMBRAR .

    ID              reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    IF              reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    FOR_KEYWORD     reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    WHILE_KEYWORD   reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    PRINT_KEYWORD   reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    INPUT_KEYWORD   reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    CLOSE_BRACKET   reduce using rule 26 (ESTATUTO -> NOMBRAR .)


state 52

    (27) ESTATUTO -> FOR .

    ID              reduce using rule 27 (ESTATUTO -> FOR .)
    IF              reduce using rule 27 (ESTATUTO -> FOR .)
    FOR_KEYWORD     reduce using rule 27 (ESTATUTO -> FOR .)
    WHILE_KEYWORD   reduce using rule 27 (ESTATUTO -> FOR .)
    PRINT_KEYWORD   reduce using rule 27 (ESTATUTO -> FOR .)
    INPUT_KEYWORD   reduce using rule 27 (ESTATUTO -> FOR .)
    CLOSE_BRACKET   reduce using rule 27 (ESTATUTO -> FOR .)


state 53

    (28) ESTATUTO -> WHILE .

    ID              reduce using rule 28 (ESTATUTO -> WHILE .)
    IF              reduce using rule 28 (ESTATUTO -> WHILE .)
    FOR_KEYWORD     reduce using rule 28 (ESTATUTO -> WHILE .)
    WHILE_KEYWORD   reduce using rule 28 (ESTATUTO -> WHILE .)
    PRINT_KEYWORD   reduce using rule 28 (ESTATUTO -> WHILE .)
    INPUT_KEYWORD   reduce using rule 28 (ESTATUTO -> WHILE .)
    CLOSE_BRACKET   reduce using rule 28 (ESTATUTO -> WHILE .)


state 54

    (29) ESTATUTO -> PRINT .

    ID              reduce using rule 29 (ESTATUTO -> PRINT .)
    IF              reduce using rule 29 (ESTATUTO -> PRINT .)
    FOR_KEYWORD     reduce using rule 29 (ESTATUTO -> PRINT .)
    WHILE_KEYWORD   reduce using rule 29 (ESTATUTO -> PRINT .)
    PRINT_KEYWORD   reduce using rule 29 (ESTATUTO -> PRINT .)
    INPUT_KEYWORD   reduce using rule 29 (ESTATUTO -> PRINT .)
    CLOSE_BRACKET   reduce using rule 29 (ESTATUTO -> PRINT .)


state 55

    (30) ESTATUTO -> PLOT .

    ID              reduce using rule 30 (ESTATUTO -> PLOT .)
    IF              reduce using rule 30 (ESTATUTO -> PLOT .)
    FOR_KEYWORD     reduce using rule 30 (ESTATUTO -> PLOT .)
    WHILE_KEYWORD   reduce using rule 30 (ESTATUTO -> PLOT .)
    PRINT_KEYWORD   reduce using rule 30 (ESTATUTO -> PLOT .)
    INPUT_KEYWORD   reduce using rule 30 (ESTATUTO -> PLOT .)
    CLOSE_BRACKET   reduce using rule 30 (ESTATUTO -> PLOT .)


state 56

    (31) ESTATUTO -> LLAMADAMODULO .

    ID              reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    IF              reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    FOR_KEYWORD     reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    WHILE_KEYWORD   reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    PRINT_KEYWORD   reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    INPUT_KEYWORD   reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    CLOSE_BRACKET   reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)


state 57

    (32) ESTATUTO -> INPUT .

    ID              reduce using rule 32 (ESTATUTO -> INPUT .)
    IF              reduce using rule 32 (ESTATUTO -> INPUT .)
    FOR_KEYWORD     reduce using rule 32 (ESTATUTO -> INPUT .)
    WHILE_KEYWORD   reduce using rule 32 (ESTATUTO -> INPUT .)
    PRINT_KEYWORD   reduce using rule 32 (ESTATUTO -> INPUT .)
    INPUT_KEYWORD   reduce using rule 32 (ESTATUTO -> INPUT .)
    CLOSE_BRACKET   reduce using rule 32 (ESTATUTO -> INPUT .)


state 58

    (33) ESTATUTO -> COLOR .

    ID              reduce using rule 33 (ESTATUTO -> COLOR .)
    IF              reduce using rule 33 (ESTATUTO -> COLOR .)
    FOR_KEYWORD     reduce using rule 33 (ESTATUTO -> COLOR .)
    WHILE_KEYWORD   reduce using rule 33 (ESTATUTO -> COLOR .)
    PRINT_KEYWORD   reduce using rule 33 (ESTATUTO -> COLOR .)
    INPUT_KEYWORD   reduce using rule 33 (ESTATUTO -> COLOR .)
    CLOSE_BRACKET   reduce using rule 33 (ESTATUTO -> COLOR .)


state 59

    (75) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (71) NOMBRAR -> ID . POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (61) LLAMADAMODULO -> ID . era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (109) COLOR -> ID . POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (150) PGraph -> ID . POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (151) PPie -> ID . POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (152) PGBarras -> ID . POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (153) PGBarrasHor -> ID . POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (154) PDona -> ID . POINT CREATED OPEN_PARENTHESIS PLOT_E
    (155) PRadar -> ID . POINT CREATER OPEN_PARENTHESIS PLOT_E
    (156) PVenn -> ID . POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (157) PLOT_B -> ID . POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (77) addStackO -> .
    (63) era -> .

    POINT           shift and go to state 82
    OPEN_SQUARE_BRACKET reduce using rule 77 (addStackO -> .)
    EQUAL           reduce using rule 77 (addStackO -> .)
    OPEN_PARENTHESIS reduce using rule 63 (era -> .)

    addStackO                      shift and go to state 81
    era                            shift and go to state 83

state 60

    (85) CONDICION -> IF . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    OPEN_PARENTHESIS shift and go to state 84


state 61

    (91) FOR -> FOR_KEYWORD . OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    OPEN_PARENTHESIS shift and go to state 85


state 62

    (94) WHILE -> WHILE_KEYWORD . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    OPEN_PARENTHESIS shift and go to state 86


state 63

    (179) PRINT -> PRINT_KEYWORD . OPEN_PARENTHESIS PRINT_A

    OPEN_PARENTHESIS shift and go to state 87


state 64

    (142) PLOT -> PGraph .

    ID              reduce using rule 142 (PLOT -> PGraph .)
    IF              reduce using rule 142 (PLOT -> PGraph .)
    FOR_KEYWORD     reduce using rule 142 (PLOT -> PGraph .)
    WHILE_KEYWORD   reduce using rule 142 (PLOT -> PGraph .)
    PRINT_KEYWORD   reduce using rule 142 (PLOT -> PGraph .)
    INPUT_KEYWORD   reduce using rule 142 (PLOT -> PGraph .)
    CLOSE_BRACKET   reduce using rule 142 (PLOT -> PGraph .)


state 65

    (143) PLOT -> PPie .

    ID              reduce using rule 143 (PLOT -> PPie .)
    IF              reduce using rule 143 (PLOT -> PPie .)
    FOR_KEYWORD     reduce using rule 143 (PLOT -> PPie .)
    WHILE_KEYWORD   reduce using rule 143 (PLOT -> PPie .)
    PRINT_KEYWORD   reduce using rule 143 (PLOT -> PPie .)
    INPUT_KEYWORD   reduce using rule 143 (PLOT -> PPie .)
    CLOSE_BRACKET   reduce using rule 143 (PLOT -> PPie .)


state 66

    (144) PLOT -> PGBarras .

    ID              reduce using rule 144 (PLOT -> PGBarras .)
    IF              reduce using rule 144 (PLOT -> PGBarras .)
    FOR_KEYWORD     reduce using rule 144 (PLOT -> PGBarras .)
    WHILE_KEYWORD   reduce using rule 144 (PLOT -> PGBarras .)
    PRINT_KEYWORD   reduce using rule 144 (PLOT -> PGBarras .)
    INPUT_KEYWORD   reduce using rule 144 (PLOT -> PGBarras .)
    CLOSE_BRACKET   reduce using rule 144 (PLOT -> PGBarras .)


state 67

    (145) PLOT -> PGBarrasHor .

    ID              reduce using rule 145 (PLOT -> PGBarrasHor .)
    IF              reduce using rule 145 (PLOT -> PGBarrasHor .)
    FOR_KEYWORD     reduce using rule 145 (PLOT -> PGBarrasHor .)
    WHILE_KEYWORD   reduce using rule 145 (PLOT -> PGBarrasHor .)
    PRINT_KEYWORD   reduce using rule 145 (PLOT -> PGBarrasHor .)
    INPUT_KEYWORD   reduce using rule 145 (PLOT -> PGBarrasHor .)
    CLOSE_BRACKET   reduce using rule 145 (PLOT -> PGBarrasHor .)


state 68

    (146) PLOT -> PDona .

    ID              reduce using rule 146 (PLOT -> PDona .)
    IF              reduce using rule 146 (PLOT -> PDona .)
    FOR_KEYWORD     reduce using rule 146 (PLOT -> PDona .)
    WHILE_KEYWORD   reduce using rule 146 (PLOT -> PDona .)
    PRINT_KEYWORD   reduce using rule 146 (PLOT -> PDona .)
    INPUT_KEYWORD   reduce using rule 146 (PLOT -> PDona .)
    CLOSE_BRACKET   reduce using rule 146 (PLOT -> PDona .)


state 69

    (147) PLOT -> PRadar .

    ID              reduce using rule 147 (PLOT -> PRadar .)
    IF              reduce using rule 147 (PLOT -> PRadar .)
    FOR_KEYWORD     reduce using rule 147 (PLOT -> PRadar .)
    WHILE_KEYWORD   reduce using rule 147 (PLOT -> PRadar .)
    PRINT_KEYWORD   reduce using rule 147 (PLOT -> PRadar .)
    INPUT_KEYWORD   reduce using rule 147 (PLOT -> PRadar .)
    CLOSE_BRACKET   reduce using rule 147 (PLOT -> PRadar .)


state 70

    (148) PLOT -> PVenn .

    ID              reduce using rule 148 (PLOT -> PVenn .)
    IF              reduce using rule 148 (PLOT -> PVenn .)
    FOR_KEYWORD     reduce using rule 148 (PLOT -> PVenn .)
    WHILE_KEYWORD   reduce using rule 148 (PLOT -> PVenn .)
    PRINT_KEYWORD   reduce using rule 148 (PLOT -> PVenn .)
    INPUT_KEYWORD   reduce using rule 148 (PLOT -> PVenn .)
    CLOSE_BRACKET   reduce using rule 148 (PLOT -> PVenn .)


state 71

    (149) PLOT -> PLOT_B .

    ID              reduce using rule 149 (PLOT -> PLOT_B .)
    IF              reduce using rule 149 (PLOT -> PLOT_B .)
    FOR_KEYWORD     reduce using rule 149 (PLOT -> PLOT_B .)
    WHILE_KEYWORD   reduce using rule 149 (PLOT -> PLOT_B .)
    PRINT_KEYWORD   reduce using rule 149 (PLOT -> PLOT_B .)
    INPUT_KEYWORD   reduce using rule 149 (PLOT -> PLOT_B .)
    CLOSE_BRACKET   reduce using rule 149 (PLOT -> PLOT_B .)


state 72

    (136) INPUT -> INPUT_KEYWORD . INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input

    INPUTSYMBOL     shift and go to state 88


state 73

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET . end_quad
    (2) end_quad -> .

    $end            reduce using rule 2 (end_quad -> .)

    end_quad                       shift and go to state 89

state 74

    (46) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS . MODULO_C release_vars change_scope returnto
    (55) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (34) TIPO_P -> . INT
    (35) TIPO_P -> . FLOAT
    (36) TIPO_P -> . BOOL
    (37) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 90
    TIPO_P                         shift and go to state 91

state 75

    (11) VARS_B -> ID add_variable VARS_E VARS_C .

    MODULE          reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    MAIN            reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    OPEN_BRACKET    reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    SEMICOLON       reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    COMMA           reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)


state 76

    (17) VARS_C -> SEMICOLON . VARS_D
    (19) VARS_D -> . CLOSE_BRACKET
    (20) VARS_D -> . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (34) TIPO_P -> . INT
    (35) TIPO_P -> . FLOAT
    (36) TIPO_P -> . BOOL
    (37) TIPO_P -> . CHAR
    (38) TIPO_S -> . TYPE_GRAPH
    (39) TIPO_S -> . TYPE_PIECHART
    (40) TIPO_S -> . TYPE_BARCHART
    (41) TIPO_S -> . TYPE_HORBARCHART
    (42) TIPO_S -> . TYPE_DONUTGRAPH
    (43) TIPO_S -> . TYPE_NETWORK
    (44) TIPO_S -> . TYPE_VENN
    (45) TIPO_S -> . TYPE_RADARCHART

    CLOSE_BRACKET   shift and go to state 93
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_D                         shift and go to state 92
    VARS_A                         shift and go to state 94
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 77

    (18) VARS_C -> COMMA . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 95

state 78

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER . CLOSE_SQUARE_BRACKET VARS_F

    CLOSE_SQUARE_BRACKET shift and go to state 96


state 79

    (21) BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .

    CLOSE_BRACKET   reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ELSE            reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ID              reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    IF              reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    FOR_KEYWORD     reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)


state 80

    (22) ESTATUTO_A -> ESTATUTO ESTATUTO_A .

    CLOSE_BRACKET   reduce using rule 22 (ESTATUTO_A -> ESTATUTO ESTATUTO_A .)


state 81

    (75) ASIGNACION -> ID addStackO . ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (78) ASIGNACION_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
    (79) ASIGNACION_A -> . EMPTY
    (199) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 98
    EQUAL           reduce using rule 199 (EMPTY -> .)

    ASIGNACION_A                   shift and go to state 97
    EMPTY                          shift and go to state 99

state 82

    (71) NOMBRAR -> ID POINT . NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (109) COLOR -> ID POINT . COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (150) PGraph -> ID POINT . CREATEG OPEN_PARENTHESIS PLOT_C
    (151) PPie -> ID POINT . CREATEPC OPEN_PARENTHESIS PLOT_E
    (152) PGBarras -> ID POINT . CREATEGB OPEN_PARENTHESIS PLOT_E
    (153) PGBarrasHor -> ID POINT . CREATEGBH OPEN_PARENTHESIS PLOT_E
    (154) PDona -> ID POINT . CREATED OPEN_PARENTHESIS PLOT_E
    (155) PRadar -> ID POINT . CREATER OPEN_PARENTHESIS PLOT_E
    (156) PVenn -> ID POINT . CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (157) PLOT_B -> ID POINT . CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (72) NOMBRAR_A -> . NAME
    (73) NOMBRAR_A -> . NAMEX
    (74) NOMBRAR_A -> . NAMEY

    COLOR_KEYWORD   shift and go to state 101
    CREATEG         shift and go to state 102
    CREATEPC        shift and go to state 103
    CREATEGB        shift and go to state 104
    CREATEGBH       shift and go to state 105
    CREATED         shift and go to state 106
    CREATER         shift and go to state 107
    CREATEV         shift and go to state 108
    CREATEN         shift and go to state 109
    NAME            shift and go to state 110
    NAMEX           shift and go to state 111
    NAMEY           shift and go to state 112

    NOMBRAR_A                      shift and go to state 100

state 83

    (61) LLAMADAMODULO -> ID era . OPEN_PARENTHESIS LLAMADAMODULO_C gosub

    OPEN_PARENTHESIS shift and go to state 113


state 84

    (85) CONDICION -> IF OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (187) EXPRESIONESVARIAS -> . NOT EV_C
    (188) EXPRESIONESVARIAS -> . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 116
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 115
    EV_C                           shift and go to state 117
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 85

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS . ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (75) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 133

    ASIGNACION                     shift and go to state 132

state 86

    (94) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (187) EXPRESIONESVARIAS -> . NOT EV_C
    (188) EXPRESIONESVARIAS -> . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 116
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 134
    EV_C                           shift and go to state 117
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 87

    (179) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS . PRINT_A
    (180) PRINT_A -> . PRINT_B CLOSE_PARENTHESIS SEMICOLON
    (181) PRINT_B -> . CTE_STRING print_string PRINT_C
    (182) PRINT_B -> . EXPRESIONESVARIAS print_id
    (187) EXPRESIONESVARIAS -> . NOT EV_C
    (188) EXPRESIONESVARIAS -> . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 137
    NOT             shift and go to state 116
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    PRINT_A                        shift and go to state 135
    PRINT_B                        shift and go to state 136
    EXPRESIONESVARIAS              shift and go to state 138
    EV_C                           shift and go to state 117
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 88

    (136) INPUT -> INPUT_KEYWORD INPUTSYMBOL . ID add_inputid INPUT_A SEMICOLON quad_input

    ID              shift and go to state 139


state 89

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .)


state 90

    (46) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C . release_vars change_scope returnto
    (47) release_vars -> .

    MODULE          reduce using rule 47 (release_vars -> .)
    MAIN            reduce using rule 47 (release_vars -> .)

    release_vars                   shift and go to state 140

state 91

    (55) MODULO_C -> TIPO_P . ID add_variable_m MODULO_B MODULO_D

    ID              shift and go to state 141


state 92

    (17) VARS_C -> SEMICOLON VARS_D .

    MODULE          reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)
    MAIN            reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)
    OPEN_BRACKET    reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)
    SEMICOLON       reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)
    COMMA           reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)


state 93

    (19) VARS_D -> CLOSE_BRACKET .

    MODULE          reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)
    MAIN            reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)
    COMMA           reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)


state 94

    (20) VARS_D -> VARS_A .

    MODULE          reduce using rule 20 (VARS_D -> VARS_A .)
    MAIN            reduce using rule 20 (VARS_D -> VARS_A .)
    OPEN_BRACKET    reduce using rule 20 (VARS_D -> VARS_A .)
    SEMICOLON       reduce using rule 20 (VARS_D -> VARS_A .)
    COMMA           reduce using rule 20 (VARS_D -> VARS_A .)


state 95

    (18) VARS_C -> COMMA VARS_B .

    MODULE          reduce using rule 18 (VARS_C -> COMMA VARS_B .)
    MAIN            reduce using rule 18 (VARS_C -> COMMA VARS_B .)
    OPEN_BRACKET    reduce using rule 18 (VARS_C -> COMMA VARS_B .)
    SEMICOLON       reduce using rule 18 (VARS_C -> COMMA VARS_B .)
    COMMA           reduce using rule 18 (VARS_C -> COMMA VARS_B .)


state 96

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET . VARS_F
    (15) VARS_F -> . OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C
    (16) VARS_F -> . VARS_C
    (17) VARS_C -> . SEMICOLON VARS_D
    (18) VARS_C -> . COMMA VARS_B

    OPEN_SQUARE_BRACKET shift and go to state 142
    SEMICOLON       shift and go to state 76
    COMMA           shift and go to state 77

    VARS_F                         shift and go to state 143
    VARS_C                         shift and go to state 144

state 97

    (75) ASIGNACION -> ID addStackO ASIGNACION_A . ASIGNACION_C SEMICOLON quad
    (82) ASIGNACION_C -> . EQUAL add_equal EXPRESIONESVARIAS
    (83) ASIGNACION_C -> . EQUAL CTE_STRING

    EQUAL           shift and go to state 146

    ASIGNACION_C                   shift and go to state 145

state 98

    (78) ASIGNACION_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 147
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 99

    (79) ASIGNACION_A -> EMPTY .

    EQUAL           reduce using rule 79 (ASIGNACION_A -> EMPTY .)


state 100

    (71) NOMBRAR -> ID POINT NOMBRAR_A . OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 149


state 101

    (109) COLOR -> ID POINT COLOR_KEYWORD . OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 150


state 102

    (150) PGraph -> ID POINT CREATEG . OPEN_PARENTHESIS PLOT_C

    OPEN_PARENTHESIS shift and go to state 151


state 103

    (151) PPie -> ID POINT CREATEPC . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 152


state 104

    (152) PGBarras -> ID POINT CREATEGB . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 153


state 105

    (153) PGBarrasHor -> ID POINT CREATEGBH . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 154


state 106

    (154) PDona -> ID POINT CREATED . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 155


state 107

    (155) PRadar -> ID POINT CREATER . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 156


state 108

    (156) PVenn -> ID POINT CREATEV . OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 157


state 109

    (157) PLOT_B -> ID POINT CREATEN . OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    OPEN_PARENTHESIS shift and go to state 158


state 110

    (72) NOMBRAR_A -> NAME .

    OPEN_PARENTHESIS reduce using rule 72 (NOMBRAR_A -> NAME .)


state 111

    (73) NOMBRAR_A -> NAMEX .

    OPEN_PARENTHESIS reduce using rule 73 (NOMBRAR_A -> NAMEX .)


state 112

    (74) NOMBRAR_A -> NAMEY .

    OPEN_PARENTHESIS reduce using rule 74 (NOMBRAR_A -> NAMEY .)


state 113

    (61) LLAMADAMODULO -> ID era OPEN_PARENTHESIS . LLAMADAMODULO_C gosub
    (67) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 159
    EXP                            shift and go to state 160
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 114

    (117) FACTOR_A -> OPEN_PARENTHESIS . FACTOR_B CLOSE_PARENTHESIS
    (122) FACTOR_B -> . EXPRESIONESVARIAS FACTOR_C
    (187) EXPRESIONESVARIAS -> . NOT EV_C
    (188) EXPRESIONESVARIAS -> . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    NOT             shift and go to state 116
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    FACTOR_B                       shift and go to state 161
    EXPRESIONESVARIAS              shift and go to state 162
    FACTOR_C                       shift and go to state 125
    EV_C                           shift and go to state 117
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    VARS_CTE                       shift and go to state 127

state 115

    (85) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    CLOSE_PARENTHESIS shift and go to state 163


state 116

    (187) EXPRESIONESVARIAS -> NOT . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EV_C                           shift and go to state 164
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 117

    (188) EXPRESIONESVARIAS -> EV_C .

    CLOSE_PARENTHESIS reduce using rule 188 (EXPRESIONESVARIAS -> EV_C .)
    CTE_INTEGER     reduce using rule 188 (EXPRESIONESVARIAS -> EV_C .)
    CTE_FLOAT       reduce using rule 188 (EXPRESIONESVARIAS -> EV_C .)
    BOOLEAN         reduce using rule 188 (EXPRESIONESVARIAS -> EV_C .)
    ID              reduce using rule 188 (EXPRESIONESVARIAS -> EV_C .)
    SEMICOLON       reduce using rule 188 (EXPRESIONESVARIAS -> EV_C .)


state 118

    (189) EV_C -> EXP_RELOP . EV_B
    (190) EV_B -> . AND add_ev EV_C
    (191) EV_B -> . OR add_ev EV_C
    (192) EV_B -> . EMPTY
    (199) EMPTY -> .

    AND             shift and go to state 166
    OR              shift and go to state 167
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 199 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 199 (EMPTY -> .)
    BOOLEAN         reduce using rule 199 (EMPTY -> .)
    ID              reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    EV_B                           shift and go to state 165
    EMPTY                          shift and go to state 168

state 119

    (194) EXP_RELOP -> EXP . EXP_RELOP_A
    (196) EXP_RELOP_A -> . RELOP add_relop EXP
    (197) EXP_RELOP_A -> . EMPTY
    (199) EMPTY -> .

    RELOP           shift and go to state 170
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 199 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 199 (EMPTY -> .)
    BOOLEAN         reduce using rule 199 (EMPTY -> .)
    ID              reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    EXP_RELOP_A                    shift and go to state 169
    EMPTY                          shift and go to state 171

state 120

    (195) EXP_RELOP -> EMPTY .
    (121) FACTOR_A -> EMPTY .

  ! reduce/reduce conflict for AND resolved using rule 121 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OR resolved using rule 121 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 121 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_INTEGER resolved using rule 121 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_FLOAT resolved using rule 121 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 121 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for ID resolved using rule 121 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 121 (FACTOR_A -> EMPTY .)
    TIMES           reduce using rule 121 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 121 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 121 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 121 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 121 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 121 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 121 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 121 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 121 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 121 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 121 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 121 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 121 (FACTOR_A -> EMPTY .)

  ! AND             [ reduce using rule 195 (EXP_RELOP -> EMPTY .) ]
  ! OR              [ reduce using rule 195 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 195 (EXP_RELOP -> EMPTY .) ]
  ! CTE_INTEGER     [ reduce using rule 195 (EXP_RELOP -> EMPTY .) ]
  ! CTE_FLOAT       [ reduce using rule 195 (EXP_RELOP -> EMPTY .) ]
  ! BOOLEAN         [ reduce using rule 195 (EXP_RELOP -> EMPTY .) ]
  ! ID              [ reduce using rule 195 (EXP_RELOP -> EMPTY .) ]
  ! SEMICOLON       [ reduce using rule 195 (EXP_RELOP -> EMPTY .) ]


state 121

    (97) EXP -> TERMINO . pop_exp EXP_A
    (98) pop_exp -> .

    PLUS            reduce using rule 98 (pop_exp -> .)
    MINS            reduce using rule 98 (pop_exp -> .)
    RELOP           reduce using rule 98 (pop_exp -> .)
    AND             reduce using rule 98 (pop_exp -> .)
    OR              reduce using rule 98 (pop_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 98 (pop_exp -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 98 (pop_exp -> .)
    COMMA           reduce using rule 98 (pop_exp -> .)
    ID              reduce using rule 98 (pop_exp -> .)
    IF              reduce using rule 98 (pop_exp -> .)
    FOR_KEYWORD     reduce using rule 98 (pop_exp -> .)
    WHILE_KEYWORD   reduce using rule 98 (pop_exp -> .)
    PRINT_KEYWORD   reduce using rule 98 (pop_exp -> .)
    INPUT_KEYWORD   reduce using rule 98 (pop_exp -> .)
    CLOSE_BRACKET   reduce using rule 98 (pop_exp -> .)
    CTE_INTEGER     reduce using rule 98 (pop_exp -> .)
    CTE_FLOAT       reduce using rule 98 (pop_exp -> .)
    BOOLEAN         reduce using rule 98 (pop_exp -> .)
    SEMICOLON       reduce using rule 98 (pop_exp -> .)

    pop_exp                        shift and go to state 172

state 122

    (103) TERMINO -> FACTOR . pop_term TERMINO_A
    (104) pop_term -> .

    TIMES           reduce using rule 104 (pop_term -> .)
    DIVIDE          reduce using rule 104 (pop_term -> .)
    PLUS            reduce using rule 104 (pop_term -> .)
    MINS            reduce using rule 104 (pop_term -> .)
    RELOP           reduce using rule 104 (pop_term -> .)
    AND             reduce using rule 104 (pop_term -> .)
    OR              reduce using rule 104 (pop_term -> .)
    CLOSE_PARENTHESIS reduce using rule 104 (pop_term -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 104 (pop_term -> .)
    COMMA           reduce using rule 104 (pop_term -> .)
    ID              reduce using rule 104 (pop_term -> .)
    IF              reduce using rule 104 (pop_term -> .)
    FOR_KEYWORD     reduce using rule 104 (pop_term -> .)
    WHILE_KEYWORD   reduce using rule 104 (pop_term -> .)
    PRINT_KEYWORD   reduce using rule 104 (pop_term -> .)
    INPUT_KEYWORD   reduce using rule 104 (pop_term -> .)
    CLOSE_BRACKET   reduce using rule 104 (pop_term -> .)
    CTE_INTEGER     reduce using rule 104 (pop_term -> .)
    CTE_FLOAT       reduce using rule 104 (pop_term -> .)
    BOOLEAN         reduce using rule 104 (pop_term -> .)
    SEMICOLON       reduce using rule 104 (pop_term -> .)

    pop_term                       shift and go to state 173

state 123

    (116) FACTOR -> FACTOR_A .

    TIMES           reduce using rule 116 (FACTOR -> FACTOR_A .)
    DIVIDE          reduce using rule 116 (FACTOR -> FACTOR_A .)
    PLUS            reduce using rule 116 (FACTOR -> FACTOR_A .)
    MINS            reduce using rule 116 (FACTOR -> FACTOR_A .)
    RELOP           reduce using rule 116 (FACTOR -> FACTOR_A .)
    AND             reduce using rule 116 (FACTOR -> FACTOR_A .)
    OR              reduce using rule 116 (FACTOR -> FACTOR_A .)
    CLOSE_PARENTHESIS reduce using rule 116 (FACTOR -> FACTOR_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 116 (FACTOR -> FACTOR_A .)
    COMMA           reduce using rule 116 (FACTOR -> FACTOR_A .)
    ID              reduce using rule 116 (FACTOR -> FACTOR_A .)
    IF              reduce using rule 116 (FACTOR -> FACTOR_A .)
    FOR_KEYWORD     reduce using rule 116 (FACTOR -> FACTOR_A .)
    WHILE_KEYWORD   reduce using rule 116 (FACTOR -> FACTOR_A .)
    PRINT_KEYWORD   reduce using rule 116 (FACTOR -> FACTOR_A .)
    INPUT_KEYWORD   reduce using rule 116 (FACTOR -> FACTOR_A .)
    CLOSE_BRACKET   reduce using rule 116 (FACTOR -> FACTOR_A .)
    CTE_INTEGER     reduce using rule 116 (FACTOR -> FACTOR_A .)
    CTE_FLOAT       reduce using rule 116 (FACTOR -> FACTOR_A .)
    BOOLEAN         reduce using rule 116 (FACTOR -> FACTOR_A .)
    SEMICOLON       reduce using rule 116 (FACTOR -> FACTOR_A .)


state 124

    (118) FACTOR_A -> PLUS . FACTOR_C
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

    FACTOR_C                       shift and go to state 174
    VARS_CTE                       shift and go to state 127

state 125

    (120) FACTOR_A -> FACTOR_C .

    TIMES           reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    DIVIDE          reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    PLUS            reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    MINS            reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    RELOP           reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    AND             reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    OR              reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    COMMA           reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    ID              reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    IF              reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    FOR_KEYWORD     reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    CTE_INTEGER     reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    CTE_FLOAT       reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    BOOLEAN         reduce using rule 120 (FACTOR_A -> FACTOR_C .)
    SEMICOLON       reduce using rule 120 (FACTOR_A -> FACTOR_C .)


state 126

    (119) FACTOR_A -> MINS . FACTOR_C
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

    FACTOR_C                       shift and go to state 175
    VARS_CTE                       shift and go to state 127

state 127

    (123) FACTOR_C -> VARS_CTE .

    TIMES           reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    DIVIDE          reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    PLUS            reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    MINS            reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    RELOP           reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    AND             reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    OR              reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    CLOSE_PARENTHESIS reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    CLOSE_SQUARE_BRACKET reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    COMMA           reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    ID              reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    IF              reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    FOR_KEYWORD     reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    WHILE_KEYWORD   reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    PRINT_KEYWORD   reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    INPUT_KEYWORD   reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    CLOSE_BRACKET   reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    CTE_INTEGER     reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    CTE_FLOAT       reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    BOOLEAN         reduce using rule 123 (FACTOR_C -> VARS_CTE .)
    SEMICOLON       reduce using rule 123 (FACTOR_C -> VARS_CTE .)


state 128

    (124) VARS_CTE -> CTE_INTEGER .

    TIMES           reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    DIVIDE          reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    PLUS            reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    MINS            reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    RELOP           reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    AND             reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    OR              reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_PARENTHESIS reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_SQUARE_BRACKET reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    COMMA           reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    ID              reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    IF              reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    FOR_KEYWORD     reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    WHILE_KEYWORD   reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    PRINT_KEYWORD   reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    INPUT_KEYWORD   reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_BRACKET   reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    CTE_INTEGER     reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    CTE_FLOAT       reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    BOOLEAN         reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)
    SEMICOLON       reduce using rule 124 (VARS_CTE -> CTE_INTEGER .)


state 129

    (125) VARS_CTE -> CTE_FLOAT .

    TIMES           reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    DIVIDE          reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    MINS            reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    RELOP           reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    AND             reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    OR              reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_PARENTHESIS reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_SQUARE_BRACKET reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    ID              reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    IF              reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    FOR_KEYWORD     reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    WHILE_KEYWORD   reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    PRINT_KEYWORD   reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    INPUT_KEYWORD   reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_BRACKET   reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    CTE_INTEGER     reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    CTE_FLOAT       reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    BOOLEAN         reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 125 (VARS_CTE -> CTE_FLOAT .)


state 130

    (126) VARS_CTE -> BOOLEAN .

    TIMES           reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    DIVIDE          reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    PLUS            reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    MINS            reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    RELOP           reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    AND             reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    OR              reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    CLOSE_PARENTHESIS reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    CLOSE_SQUARE_BRACKET reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    COMMA           reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    ID              reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    IF              reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    FOR_KEYWORD     reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    WHILE_KEYWORD   reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    PRINT_KEYWORD   reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    INPUT_KEYWORD   reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    CLOSE_BRACKET   reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    CTE_INTEGER     reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    CTE_FLOAT       reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    BOOLEAN         reduce using rule 126 (VARS_CTE -> BOOLEAN .)
    SEMICOLON       reduce using rule 126 (VARS_CTE -> BOOLEAN .)


state 131

    (127) VARS_CTE -> ID . VARS_CTE_A
    (128) VARS_CTE_A -> . OPEN_PARENTHESIS VARS_CTE_B
    (129) VARS_CTE_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (130) VARS_CTE_A -> . EMPTY
    (199) EMPTY -> .

    OPEN_PARENTHESIS shift and go to state 177
    OPEN_SQUARE_BRACKET shift and go to state 178
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    PLUS            reduce using rule 199 (EMPTY -> .)
    MINS            reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    ID              reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 199 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 199 (EMPTY -> .)
    BOOLEAN         reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    VARS_CTE_A                     shift and go to state 176
    EMPTY                          shift and go to state 179

state 132

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION . EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (187) EXPRESIONESVARIAS -> . NOT EV_C
    (188) EXPRESIONESVARIAS -> . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 116
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 180
    EV_C                           shift and go to state 117
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 133

    (75) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (77) addStackO -> .

    OPEN_SQUARE_BRACKET reduce using rule 77 (addStackO -> .)
    EQUAL           reduce using rule 77 (addStackO -> .)

    addStackO                      shift and go to state 81

state 134

    (94) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    CLOSE_PARENTHESIS shift and go to state 181


state 135

    (179) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .

    ID              reduce using rule 179 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    IF              reduce using rule 179 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    FOR_KEYWORD     reduce using rule 179 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    WHILE_KEYWORD   reduce using rule 179 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    PRINT_KEYWORD   reduce using rule 179 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    INPUT_KEYWORD   reduce using rule 179 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    CLOSE_BRACKET   reduce using rule 179 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)


state 136

    (180) PRINT_A -> PRINT_B . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 182


state 137

    (181) PRINT_B -> CTE_STRING . print_string PRINT_C
    (183) print_string -> .

    PLUS            reduce using rule 183 (print_string -> .)
    CLOSE_PARENTHESIS reduce using rule 183 (print_string -> .)

    print_string                   shift and go to state 183

state 138

    (182) PRINT_B -> EXPRESIONESVARIAS . print_id
    (184) print_id -> .

    CLOSE_PARENTHESIS reduce using rule 184 (print_id -> .)

    print_id                       shift and go to state 184

state 139

    (136) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID . add_inputid INPUT_A SEMICOLON quad_input
    (137) add_inputid -> .

    OPEN_SQUARE_BRACKET reduce using rule 137 (add_inputid -> .)
    SEMICOLON       reduce using rule 137 (add_inputid -> .)

    add_inputid                    shift and go to state 185

state 140

    (46) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars . change_scope returnto
    (49) change_scope -> .

    MODULE          reduce using rule 49 (change_scope -> .)
    MAIN            reduce using rule 49 (change_scope -> .)

    change_scope                   shift and go to state 186

state 141

    (55) MODULO_C -> TIPO_P ID . add_variable_m MODULO_B MODULO_D
    (56) add_variable_m -> .

    COMMA           reduce using rule 56 (add_variable_m -> .)
    CLOSE_PARENTHESIS reduce using rule 56 (add_variable_m -> .)
    MODULE          reduce using rule 56 (add_variable_m -> .)
    MAIN            reduce using rule 56 (add_variable_m -> .)

    add_variable_m                 shift and go to state 187

state 142

    (15) VARS_F -> OPEN_SQUARE_BRACKET . CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C

    CTE_INTEGER     shift and go to state 188


state 143

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .

    SEMICOLON       reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .)
    COMMA           reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .)


state 144

    (16) VARS_F -> VARS_C .

    SEMICOLON       reduce using rule 16 (VARS_F -> VARS_C .)
    COMMA           reduce using rule 16 (VARS_F -> VARS_C .)


state 145

    (75) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C . SEMICOLON quad

    SEMICOLON       shift and go to state 189


state 146

    (82) ASIGNACION_C -> EQUAL . add_equal EXPRESIONESVARIAS
    (83) ASIGNACION_C -> EQUAL . CTE_STRING
    (84) add_equal -> .

    CTE_STRING      shift and go to state 191
    NOT             reduce using rule 84 (add_equal -> .)
    OPEN_PARENTHESIS reduce using rule 84 (add_equal -> .)
    PLUS            reduce using rule 84 (add_equal -> .)
    MINS            reduce using rule 84 (add_equal -> .)
    CTE_INTEGER     reduce using rule 84 (add_equal -> .)
    CTE_FLOAT       reduce using rule 84 (add_equal -> .)
    BOOLEAN         reduce using rule 84 (add_equal -> .)
    ID              reduce using rule 84 (add_equal -> .)
    AND             reduce using rule 84 (add_equal -> .)
    OR              reduce using rule 84 (add_equal -> .)
    RELOP           reduce using rule 84 (add_equal -> .)
    TIMES           reduce using rule 84 (add_equal -> .)
    DIVIDE          reduce using rule 84 (add_equal -> .)
    SEMICOLON       reduce using rule 84 (add_equal -> .)

    add_equal                      shift and go to state 190

state 147

    (78) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ASIGNACION_B

    CLOSE_SQUARE_BRACKET shift and go to state 192


state 148

    (121) FACTOR_A -> EMPTY .

    TIMES           reduce using rule 121 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 121 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 121 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 121 (FACTOR_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 121 (FACTOR_A -> EMPTY .)
    COMMA           reduce using rule 121 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 121 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 121 (FACTOR_A -> EMPTY .)
    IF              reduce using rule 121 (FACTOR_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 121 (FACTOR_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 121 (FACTOR_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 121 (FACTOR_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 121 (FACTOR_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 121 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 121 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 121 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 121 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 121 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 121 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 121 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 121 (FACTOR_A -> EMPTY .)


state 149

    (71) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 193


state 150

    (109) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS . COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (110) COLOR_A -> . COLOR_RED
    (111) COLOR_A -> . COLOR_BLACK
    (112) COLOR_A -> . COLOR_BLUE
    (113) COLOR_A -> . COLOR_PURPLE
    (114) COLOR_A -> . COLOR_GREEN
    (115) COLOR_A -> . COLOR_ORANGE

    COLOR_RED       shift and go to state 195
    COLOR_BLACK     shift and go to state 196
    COLOR_BLUE      shift and go to state 197
    COLOR_PURPLE    shift and go to state 198
    COLOR_GREEN     shift and go to state 199
    COLOR_ORANGE    shift and go to state 200

    COLOR_A                        shift and go to state 194

state 151

    (150) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS . PLOT_C
    (158) PLOT_C -> . PLOT_I CLOSE_PARENTHESIS SEMICOLON
    (159) PLOT_I -> . CTE_INTEGER PLOT_D
    (160) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 203
    CTE_FLOAT       shift and go to state 204

    PLOT_C                         shift and go to state 201
    PLOT_I                         shift and go to state 202

state 152

    (151) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS . PLOT_E
    (163) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (164) PLOT_F -> . CTE_INTEGER PLOT_J
    (165) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 207
    CTE_FLOAT       shift and go to state 208

    PLOT_E                         shift and go to state 205
    PLOT_F                         shift and go to state 206

state 153

    (152) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS . PLOT_E
    (163) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (164) PLOT_F -> . CTE_INTEGER PLOT_J
    (165) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 207
    CTE_FLOAT       shift and go to state 208

    PLOT_E                         shift and go to state 209
    PLOT_F                         shift and go to state 206

state 154

    (153) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS . PLOT_E
    (163) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (164) PLOT_F -> . CTE_INTEGER PLOT_J
    (165) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 207
    CTE_FLOAT       shift and go to state 208

    PLOT_E                         shift and go to state 210
    PLOT_F                         shift and go to state 206

state 155

    (154) PDona -> ID POINT CREATED OPEN_PARENTHESIS . PLOT_E
    (163) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (164) PLOT_F -> . CTE_INTEGER PLOT_J
    (165) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 207
    CTE_FLOAT       shift and go to state 208

    PLOT_E                         shift and go to state 211
    PLOT_F                         shift and go to state 206

state 156

    (155) PRadar -> ID POINT CREATER OPEN_PARENTHESIS . PLOT_E
    (163) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (164) PLOT_F -> . CTE_INTEGER PLOT_J
    (165) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 207
    CTE_FLOAT       shift and go to state 208

    PLOT_E                         shift and go to state 212
    PLOT_F                         shift and go to state 206

state 157

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS . CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 213


state 158

    (157) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS . OPEN_SQUARE_BRACKET PLOT_M

    OPEN_SQUARE_BRACKET shift and go to state 214


state 159

    (61) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C . gosub
    (62) gosub -> .

    ID              reduce using rule 62 (gosub -> .)
    IF              reduce using rule 62 (gosub -> .)
    FOR_KEYWORD     reduce using rule 62 (gosub -> .)
    WHILE_KEYWORD   reduce using rule 62 (gosub -> .)
    PRINT_KEYWORD   reduce using rule 62 (gosub -> .)
    INPUT_KEYWORD   reduce using rule 62 (gosub -> .)
    CLOSE_BRACKET   reduce using rule 62 (gosub -> .)

    gosub                          shift and go to state 215

state 160

    (67) LLAMADAMODULO_C -> EXP . check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (68) check_types -> .

    COMMA           reduce using rule 68 (check_types -> .)
    CLOSE_PARENTHESIS reduce using rule 68 (check_types -> .)
    ID              reduce using rule 68 (check_types -> .)
    IF              reduce using rule 68 (check_types -> .)
    FOR_KEYWORD     reduce using rule 68 (check_types -> .)
    WHILE_KEYWORD   reduce using rule 68 (check_types -> .)
    PRINT_KEYWORD   reduce using rule 68 (check_types -> .)
    INPUT_KEYWORD   reduce using rule 68 (check_types -> .)
    CLOSE_BRACKET   reduce using rule 68 (check_types -> .)

    check_types                    shift and go to state 216

state 161

    (117) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 217


state 162

    (122) FACTOR_B -> EXPRESIONESVARIAS . FACTOR_C
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

    FACTOR_C                       shift and go to state 218
    VARS_CTE                       shift and go to state 127

state 163

    (85) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . check_bool BLOQUE CONDICION_A fill_end
    (87) check_bool -> .

    OPEN_BRACKET    reduce using rule 87 (check_bool -> .)

    check_bool                     shift and go to state 219

state 164

    (187) EXPRESIONESVARIAS -> NOT EV_C .

    CLOSE_PARENTHESIS reduce using rule 187 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_INTEGER     reduce using rule 187 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_FLOAT       reduce using rule 187 (EXPRESIONESVARIAS -> NOT EV_C .)
    BOOLEAN         reduce using rule 187 (EXPRESIONESVARIAS -> NOT EV_C .)
    ID              reduce using rule 187 (EXPRESIONESVARIAS -> NOT EV_C .)
    SEMICOLON       reduce using rule 187 (EXPRESIONESVARIAS -> NOT EV_C .)


state 165

    (189) EV_C -> EXP_RELOP EV_B .

    CLOSE_PARENTHESIS reduce using rule 189 (EV_C -> EXP_RELOP EV_B .)
    CTE_INTEGER     reduce using rule 189 (EV_C -> EXP_RELOP EV_B .)
    CTE_FLOAT       reduce using rule 189 (EV_C -> EXP_RELOP EV_B .)
    BOOLEAN         reduce using rule 189 (EV_C -> EXP_RELOP EV_B .)
    ID              reduce using rule 189 (EV_C -> EXP_RELOP EV_B .)
    SEMICOLON       reduce using rule 189 (EV_C -> EXP_RELOP EV_B .)


state 166

    (190) EV_B -> AND . add_ev EV_C
    (193) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 193 (add_ev -> .)
    PLUS            reduce using rule 193 (add_ev -> .)
    MINS            reduce using rule 193 (add_ev -> .)
    CTE_INTEGER     reduce using rule 193 (add_ev -> .)
    CTE_FLOAT       reduce using rule 193 (add_ev -> .)
    BOOLEAN         reduce using rule 193 (add_ev -> .)
    ID              reduce using rule 193 (add_ev -> .)
    AND             reduce using rule 193 (add_ev -> .)
    OR              reduce using rule 193 (add_ev -> .)
    RELOP           reduce using rule 193 (add_ev -> .)
    TIMES           reduce using rule 193 (add_ev -> .)
    DIVIDE          reduce using rule 193 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 193 (add_ev -> .)
    SEMICOLON       reduce using rule 193 (add_ev -> .)

    add_ev                         shift and go to state 220

state 167

    (191) EV_B -> OR . add_ev EV_C
    (193) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 193 (add_ev -> .)
    PLUS            reduce using rule 193 (add_ev -> .)
    MINS            reduce using rule 193 (add_ev -> .)
    CTE_INTEGER     reduce using rule 193 (add_ev -> .)
    CTE_FLOAT       reduce using rule 193 (add_ev -> .)
    BOOLEAN         reduce using rule 193 (add_ev -> .)
    ID              reduce using rule 193 (add_ev -> .)
    AND             reduce using rule 193 (add_ev -> .)
    OR              reduce using rule 193 (add_ev -> .)
    RELOP           reduce using rule 193 (add_ev -> .)
    TIMES           reduce using rule 193 (add_ev -> .)
    DIVIDE          reduce using rule 193 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 193 (add_ev -> .)
    SEMICOLON       reduce using rule 193 (add_ev -> .)

    add_ev                         shift and go to state 221

state 168

    (192) EV_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 192 (EV_B -> EMPTY .)
    CTE_INTEGER     reduce using rule 192 (EV_B -> EMPTY .)
    CTE_FLOAT       reduce using rule 192 (EV_B -> EMPTY .)
    BOOLEAN         reduce using rule 192 (EV_B -> EMPTY .)
    ID              reduce using rule 192 (EV_B -> EMPTY .)
    SEMICOLON       reduce using rule 192 (EV_B -> EMPTY .)


state 169

    (194) EXP_RELOP -> EXP EXP_RELOP_A .

    AND             reduce using rule 194 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OR              reduce using rule 194 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_PARENTHESIS reduce using rule 194 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_INTEGER     reduce using rule 194 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_FLOAT       reduce using rule 194 (EXP_RELOP -> EXP EXP_RELOP_A .)
    BOOLEAN         reduce using rule 194 (EXP_RELOP -> EXP EXP_RELOP_A .)
    ID              reduce using rule 194 (EXP_RELOP -> EXP EXP_RELOP_A .)
    SEMICOLON       reduce using rule 194 (EXP_RELOP -> EXP EXP_RELOP_A .)


state 170

    (196) EXP_RELOP_A -> RELOP . add_relop EXP
    (198) add_relop -> .

    OPEN_PARENTHESIS reduce using rule 198 (add_relop -> .)
    PLUS            reduce using rule 198 (add_relop -> .)
    MINS            reduce using rule 198 (add_relop -> .)
    CTE_INTEGER     reduce using rule 198 (add_relop -> .)
    CTE_FLOAT       reduce using rule 198 (add_relop -> .)
    BOOLEAN         reduce using rule 198 (add_relop -> .)
    ID              reduce using rule 198 (add_relop -> .)
    TIMES           reduce using rule 198 (add_relop -> .)
    DIVIDE          reduce using rule 198 (add_relop -> .)
    AND             reduce using rule 198 (add_relop -> .)
    OR              reduce using rule 198 (add_relop -> .)
    CLOSE_PARENTHESIS reduce using rule 198 (add_relop -> .)
    SEMICOLON       reduce using rule 198 (add_relop -> .)

    add_relop                      shift and go to state 222

state 171

    (197) EXP_RELOP_A -> EMPTY .

    AND             reduce using rule 197 (EXP_RELOP_A -> EMPTY .)
    OR              reduce using rule 197 (EXP_RELOP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 197 (EXP_RELOP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 197 (EXP_RELOP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 197 (EXP_RELOP_A -> EMPTY .)
    BOOLEAN         reduce using rule 197 (EXP_RELOP_A -> EMPTY .)
    ID              reduce using rule 197 (EXP_RELOP_A -> EMPTY .)
    SEMICOLON       reduce using rule 197 (EXP_RELOP_A -> EMPTY .)


state 172

    (97) EXP -> TERMINO pop_exp . EXP_A
    (99) EXP_A -> . PLUS append_operator EXP
    (100) EXP_A -> . MINS append_operator EXP
    (101) EXP_A -> . EMPTY
    (199) EMPTY -> .

    PLUS            shift and go to state 224
    MINS            shift and go to state 225
    RELOP           reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    ID              reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 199 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 199 (EMPTY -> .)
    BOOLEAN         reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    EXP_A                          shift and go to state 223
    EMPTY                          shift and go to state 226

state 173

    (103) TERMINO -> FACTOR pop_term . TERMINO_A
    (105) TERMINO_A -> . TIMES add_operator TERMINO
    (106) TERMINO_A -> . DIVIDE add_operator TERMINO
    (107) TERMINO_A -> . EMPTY
    (199) EMPTY -> .

    TIMES           shift and go to state 228
    DIVIDE          shift and go to state 229
    PLUS            reduce using rule 199 (EMPTY -> .)
    MINS            reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    ID              reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 199 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 199 (EMPTY -> .)
    BOOLEAN         reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    TERMINO_A                      shift and go to state 227
    EMPTY                          shift and go to state 230

state 174

    (118) FACTOR_A -> PLUS FACTOR_C .

    TIMES           reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    DIVIDE          reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    PLUS            reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    MINS            reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    RELOP           reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    AND             reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    OR              reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    COMMA           reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    ID              reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    IF              reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_INTEGER     reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_FLOAT       reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    BOOLEAN         reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)
    SEMICOLON       reduce using rule 118 (FACTOR_A -> PLUS FACTOR_C .)


state 175

    (119) FACTOR_A -> MINS FACTOR_C .

    TIMES           reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    DIVIDE          reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    PLUS            reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    MINS            reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    RELOP           reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    AND             reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    OR              reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    COMMA           reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    ID              reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    IF              reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    CTE_INTEGER     reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    CTE_FLOAT       reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    BOOLEAN         reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)
    SEMICOLON       reduce using rule 119 (FACTOR_A -> MINS FACTOR_C .)


state 176

    (127) VARS_CTE -> ID VARS_CTE_A .

    TIMES           reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    DIVIDE          reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    PLUS            reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    MINS            reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    RELOP           reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    AND             reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    OR              reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_PARENTHESIS reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    COMMA           reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    ID              reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    IF              reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    FOR_KEYWORD     reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    WHILE_KEYWORD   reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    PRINT_KEYWORD   reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    INPUT_KEYWORD   reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_BRACKET   reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_INTEGER     reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_FLOAT       reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    BOOLEAN         reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)
    SEMICOLON       reduce using rule 127 (VARS_CTE -> ID VARS_CTE_A .)


state 177

    (128) VARS_CTE_A -> OPEN_PARENTHESIS . VARS_CTE_B
    (131) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 231
    EXP                            shift and go to state 232
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 178

    (129) VARS_CTE_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 233
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 179

    (130) VARS_CTE_A -> EMPTY .

    TIMES           reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    DIVIDE          reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    PLUS            reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    MINS            reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    RELOP           reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    AND             reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    OR              reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    COMMA           reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    ID              reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    IF              reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    BOOLEAN         reduce using rule 130 (VARS_CTE_A -> EMPTY .)
    SEMICOLON       reduce using rule 130 (VARS_CTE_A -> EMPTY .)


state 180

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS . bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (93) bool_for -> .

    SEMICOLON       reduce using rule 93 (bool_for -> .)

    bool_for                       shift and go to state 234

state 181

    (94) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . bool_while BLOQUE goto_while
    (96) bool_while -> .

    OPEN_BRACKET    reduce using rule 96 (bool_while -> .)

    bool_while                     shift and go to state 235

state 182

    (180) PRINT_A -> PRINT_B CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 236


state 183

    (181) PRINT_B -> CTE_STRING print_string . PRINT_C
    (185) PRINT_C -> . PLUS PRINT_B
    (186) PRINT_C -> . EMPTY
    (199) EMPTY -> .

    PLUS            shift and go to state 238
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)

    PRINT_C                        shift and go to state 237
    EMPTY                          shift and go to state 239

state 184

    (182) PRINT_B -> EXPRESIONESVARIAS print_id .

    CLOSE_PARENTHESIS reduce using rule 182 (PRINT_B -> EXPRESIONESVARIAS print_id .)


state 185

    (136) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid . INPUT_A SEMICOLON quad_input
    (139) INPUT_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
    (140) INPUT_A -> . EMPTY
    (199) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 241
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    INPUT_A                        shift and go to state 240
    EMPTY                          shift and go to state 242

state 186

    (46) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope . returnto
    (48) returnto -> .

    MODULE          reduce using rule 48 (returnto -> .)
    MAIN            reduce using rule 48 (returnto -> .)

    returnto                       shift and go to state 243

state 187

    (55) MODULO_C -> TIPO_P ID add_variable_m . MODULO_B MODULO_D
    (53) MODULO_B -> . COMMA MODULO_C
    (54) MODULO_B -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 245
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    MODULE          reduce using rule 199 (EMPTY -> .)
    MAIN            reduce using rule 199 (EMPTY -> .)

    MODULO_B                       shift and go to state 244
    EMPTY                          shift and go to state 246

state 188

    (15) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER . CLOSE_SQUARE_BRACKET VARS_C

    CLOSE_SQUARE_BRACKET shift and go to state 247


state 189

    (75) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON . quad
    (76) quad -> .

    ID              reduce using rule 76 (quad -> .)
    IF              reduce using rule 76 (quad -> .)
    FOR_KEYWORD     reduce using rule 76 (quad -> .)
    WHILE_KEYWORD   reduce using rule 76 (quad -> .)
    PRINT_KEYWORD   reduce using rule 76 (quad -> .)
    INPUT_KEYWORD   reduce using rule 76 (quad -> .)
    CLOSE_BRACKET   reduce using rule 76 (quad -> .)
    NOT             reduce using rule 76 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 76 (quad -> .)
    PLUS            reduce using rule 76 (quad -> .)
    MINS            reduce using rule 76 (quad -> .)
    CTE_INTEGER     reduce using rule 76 (quad -> .)
    CTE_FLOAT       reduce using rule 76 (quad -> .)
    BOOLEAN         reduce using rule 76 (quad -> .)
    SEMICOLON       reduce using rule 76 (quad -> .)
    AND             reduce using rule 76 (quad -> .)
    OR              reduce using rule 76 (quad -> .)
    RELOP           reduce using rule 76 (quad -> .)
    TIMES           reduce using rule 76 (quad -> .)
    DIVIDE          reduce using rule 76 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 76 (quad -> .)

    quad                           shift and go to state 248

state 190

    (82) ASIGNACION_C -> EQUAL add_equal . EXPRESIONESVARIAS
    (187) EXPRESIONESVARIAS -> . NOT EV_C
    (188) EXPRESIONESVARIAS -> . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 116
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 249
    EV_C                           shift and go to state 117
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 191

    (83) ASIGNACION_C -> EQUAL CTE_STRING .

    SEMICOLON       reduce using rule 83 (ASIGNACION_C -> EQUAL CTE_STRING .)


state 192

    (78) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ASIGNACION_B
    (80) ASIGNACION_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (81) ASIGNACION_B -> . EMPTY
    (199) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 250
    EQUAL           reduce using rule 199 (EMPTY -> .)

    ASIGNACION_B                   shift and go to state 251
    EMPTY                          shift and go to state 252

state 193

    (71) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 253


state 194

    (109) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 254


state 195

    (110) COLOR_A -> COLOR_RED .

    CLOSE_PARENTHESIS reduce using rule 110 (COLOR_A -> COLOR_RED .)


state 196

    (111) COLOR_A -> COLOR_BLACK .

    CLOSE_PARENTHESIS reduce using rule 111 (COLOR_A -> COLOR_BLACK .)


state 197

    (112) COLOR_A -> COLOR_BLUE .

    CLOSE_PARENTHESIS reduce using rule 112 (COLOR_A -> COLOR_BLUE .)


state 198

    (113) COLOR_A -> COLOR_PURPLE .

    CLOSE_PARENTHESIS reduce using rule 113 (COLOR_A -> COLOR_PURPLE .)


state 199

    (114) COLOR_A -> COLOR_GREEN .

    CLOSE_PARENTHESIS reduce using rule 114 (COLOR_A -> COLOR_GREEN .)


state 200

    (115) COLOR_A -> COLOR_ORANGE .

    CLOSE_PARENTHESIS reduce using rule 115 (COLOR_A -> COLOR_ORANGE .)


state 201

    (150) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .

    ID              reduce using rule 150 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    IF              reduce using rule 150 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    FOR_KEYWORD     reduce using rule 150 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    WHILE_KEYWORD   reduce using rule 150 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    PRINT_KEYWORD   reduce using rule 150 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    INPUT_KEYWORD   reduce using rule 150 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    CLOSE_BRACKET   reduce using rule 150 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)


state 202

    (158) PLOT_C -> PLOT_I . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 255


state 203

    (159) PLOT_I -> CTE_INTEGER . PLOT_D
    (161) PLOT_D -> . COMMA PLOT_I
    (162) PLOT_D -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 257
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)

    PLOT_D                         shift and go to state 256
    EMPTY                          shift and go to state 258

state 204

    (160) PLOT_I -> CTE_FLOAT . PLOT_D
    (161) PLOT_D -> . COMMA PLOT_I
    (162) PLOT_D -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 257
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)

    PLOT_D                         shift and go to state 259
    EMPTY                          shift and go to state 258

state 205

    (151) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 151 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 151 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 151 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 151 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 151 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 151 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 151 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)


state 206

    (163) PLOT_E -> PLOT_F . SEMICOLON PLOT_G

    SEMICOLON       shift and go to state 260


state 207

    (164) PLOT_F -> CTE_INTEGER . PLOT_J
    (166) PLOT_J -> . COMMA PLOT_F
    (167) PLOT_J -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 262
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    PLOT_J                         shift and go to state 261
    EMPTY                          shift and go to state 263

state 208

    (165) PLOT_F -> CTE_FLOAT . PLOT_J
    (166) PLOT_J -> . COMMA PLOT_F
    (167) PLOT_J -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 262
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    PLOT_J                         shift and go to state 264
    EMPTY                          shift and go to state 263

state 209

    (152) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 152 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 152 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 152 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 152 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 152 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 152 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 152 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)


state 210

    (153) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 153 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 153 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 153 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 153 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 153 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 153 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 153 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)


state 211

    (154) PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 154 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 154 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 154 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 154 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 154 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 154 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 154 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)


state 212

    (155) PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 155 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 155 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 155 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 155 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 155 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 155 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 155 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)


state 213

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER . COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 265


state 214

    (157) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET . PLOT_M
    (172) PLOT_M -> . PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (173) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 268

    PLOT_M                         shift and go to state 266
    PLOT_N                         shift and go to state 267

state 215

    (61) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .

    ID              reduce using rule 61 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    IF              reduce using rule 61 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    FOR_KEYWORD     reduce using rule 61 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    WHILE_KEYWORD   reduce using rule 61 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    PRINT_KEYWORD   reduce using rule 61 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    INPUT_KEYWORD   reduce using rule 61 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    CLOSE_BRACKET   reduce using rule 61 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)


state 216

    (67) LLAMADAMODULO_C -> EXP check_types . LLAMADAMODULO_A LLAMADAMODULO_D
    (64) LLAMADAMODULO_A -> . COMMA incK LLAMADAMODULO_C
    (65) LLAMADAMODULO_A -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 270
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    ID              reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)

    LLAMADAMODULO_A                shift and go to state 269
    EMPTY                          shift and go to state 271

state 217

    (117) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .

    TIMES           reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    MINS            reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    AND             reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    OR              reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    ID              reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    IF              reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 117 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)


state 218

    (122) FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .

    CLOSE_PARENTHESIS reduce using rule 122 (FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .)


state 219

    (85) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool . BLOQUE CONDICION_A fill_end
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 272

state 220

    (190) EV_B -> AND add_ev . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EV_C                           shift and go to state 273
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 221

    (191) EV_B -> OR add_ev . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EV_C                           shift and go to state 274
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 222

    (196) EXP_RELOP_A -> RELOP add_relop . EXP
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 275
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 223

    (97) EXP -> TERMINO pop_exp EXP_A .

    RELOP           reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    AND             reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    OR              reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_PARENTHESIS reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    COMMA           reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    ID              reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    IF              reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    FOR_KEYWORD     reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    WHILE_KEYWORD   reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    PRINT_KEYWORD   reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    INPUT_KEYWORD   reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_BRACKET   reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    CTE_INTEGER     reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    CTE_FLOAT       reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    BOOLEAN         reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)
    SEMICOLON       reduce using rule 97 (EXP -> TERMINO pop_exp EXP_A .)


state 224

    (99) EXP_A -> PLUS . append_operator EXP
    (102) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 102 (append_operator -> .)
    PLUS            reduce using rule 102 (append_operator -> .)
    MINS            reduce using rule 102 (append_operator -> .)
    CTE_INTEGER     reduce using rule 102 (append_operator -> .)
    CTE_FLOAT       reduce using rule 102 (append_operator -> .)
    BOOLEAN         reduce using rule 102 (append_operator -> .)
    ID              reduce using rule 102 (append_operator -> .)
    TIMES           reduce using rule 102 (append_operator -> .)
    DIVIDE          reduce using rule 102 (append_operator -> .)
    RELOP           reduce using rule 102 (append_operator -> .)
    AND             reduce using rule 102 (append_operator -> .)
    OR              reduce using rule 102 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 102 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 102 (append_operator -> .)
    COMMA           reduce using rule 102 (append_operator -> .)
    IF              reduce using rule 102 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 102 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 102 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 102 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 102 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 102 (append_operator -> .)
    SEMICOLON       reduce using rule 102 (append_operator -> .)

    append_operator                shift and go to state 276

state 225

    (100) EXP_A -> MINS . append_operator EXP
    (102) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 102 (append_operator -> .)
    PLUS            reduce using rule 102 (append_operator -> .)
    MINS            reduce using rule 102 (append_operator -> .)
    CTE_INTEGER     reduce using rule 102 (append_operator -> .)
    CTE_FLOAT       reduce using rule 102 (append_operator -> .)
    BOOLEAN         reduce using rule 102 (append_operator -> .)
    ID              reduce using rule 102 (append_operator -> .)
    TIMES           reduce using rule 102 (append_operator -> .)
    DIVIDE          reduce using rule 102 (append_operator -> .)
    RELOP           reduce using rule 102 (append_operator -> .)
    AND             reduce using rule 102 (append_operator -> .)
    OR              reduce using rule 102 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 102 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 102 (append_operator -> .)
    COMMA           reduce using rule 102 (append_operator -> .)
    IF              reduce using rule 102 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 102 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 102 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 102 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 102 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 102 (append_operator -> .)
    SEMICOLON       reduce using rule 102 (append_operator -> .)

    append_operator                shift and go to state 277

state 226

    (101) EXP_A -> EMPTY .

    RELOP           reduce using rule 101 (EXP_A -> EMPTY .)
    AND             reduce using rule 101 (EXP_A -> EMPTY .)
    OR              reduce using rule 101 (EXP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 101 (EXP_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 101 (EXP_A -> EMPTY .)
    COMMA           reduce using rule 101 (EXP_A -> EMPTY .)
    ID              reduce using rule 101 (EXP_A -> EMPTY .)
    IF              reduce using rule 101 (EXP_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 101 (EXP_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 101 (EXP_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 101 (EXP_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 101 (EXP_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 101 (EXP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 101 (EXP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 101 (EXP_A -> EMPTY .)
    BOOLEAN         reduce using rule 101 (EXP_A -> EMPTY .)
    SEMICOLON       reduce using rule 101 (EXP_A -> EMPTY .)


state 227

    (103) TERMINO -> FACTOR pop_term TERMINO_A .

    PLUS            reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    MINS            reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RELOP           reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    AND             reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    OR              reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_PARENTHESIS reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    COMMA           reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    ID              reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    IF              reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    FOR_KEYWORD     reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    WHILE_KEYWORD   reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    PRINT_KEYWORD   reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    INPUT_KEYWORD   reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_BRACKET   reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CTE_INTEGER     reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CTE_FLOAT       reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    BOOLEAN         reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)
    SEMICOLON       reduce using rule 103 (TERMINO -> FACTOR pop_term TERMINO_A .)


state 228

    (105) TERMINO_A -> TIMES . add_operator TERMINO
    (108) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 108 (add_operator -> .)
    PLUS            reduce using rule 108 (add_operator -> .)
    MINS            reduce using rule 108 (add_operator -> .)
    CTE_INTEGER     reduce using rule 108 (add_operator -> .)
    CTE_FLOAT       reduce using rule 108 (add_operator -> .)
    BOOLEAN         reduce using rule 108 (add_operator -> .)
    ID              reduce using rule 108 (add_operator -> .)
    TIMES           reduce using rule 108 (add_operator -> .)
    DIVIDE          reduce using rule 108 (add_operator -> .)
    RELOP           reduce using rule 108 (add_operator -> .)
    AND             reduce using rule 108 (add_operator -> .)
    OR              reduce using rule 108 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 108 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 108 (add_operator -> .)
    COMMA           reduce using rule 108 (add_operator -> .)
    IF              reduce using rule 108 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 108 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 108 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 108 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 108 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 108 (add_operator -> .)
    SEMICOLON       reduce using rule 108 (add_operator -> .)

    add_operator                   shift and go to state 278

state 229

    (106) TERMINO_A -> DIVIDE . add_operator TERMINO
    (108) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 108 (add_operator -> .)
    PLUS            reduce using rule 108 (add_operator -> .)
    MINS            reduce using rule 108 (add_operator -> .)
    CTE_INTEGER     reduce using rule 108 (add_operator -> .)
    CTE_FLOAT       reduce using rule 108 (add_operator -> .)
    BOOLEAN         reduce using rule 108 (add_operator -> .)
    ID              reduce using rule 108 (add_operator -> .)
    TIMES           reduce using rule 108 (add_operator -> .)
    DIVIDE          reduce using rule 108 (add_operator -> .)
    RELOP           reduce using rule 108 (add_operator -> .)
    AND             reduce using rule 108 (add_operator -> .)
    OR              reduce using rule 108 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 108 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 108 (add_operator -> .)
    COMMA           reduce using rule 108 (add_operator -> .)
    IF              reduce using rule 108 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 108 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 108 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 108 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 108 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 108 (add_operator -> .)
    SEMICOLON       reduce using rule 108 (add_operator -> .)

    add_operator                   shift and go to state 279

state 230

    (107) TERMINO_A -> EMPTY .

    PLUS            reduce using rule 107 (TERMINO_A -> EMPTY .)
    MINS            reduce using rule 107 (TERMINO_A -> EMPTY .)
    RELOP           reduce using rule 107 (TERMINO_A -> EMPTY .)
    AND             reduce using rule 107 (TERMINO_A -> EMPTY .)
    OR              reduce using rule 107 (TERMINO_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 107 (TERMINO_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 107 (TERMINO_A -> EMPTY .)
    COMMA           reduce using rule 107 (TERMINO_A -> EMPTY .)
    ID              reduce using rule 107 (TERMINO_A -> EMPTY .)
    IF              reduce using rule 107 (TERMINO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 107 (TERMINO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 107 (TERMINO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 107 (TERMINO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 107 (TERMINO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 107 (TERMINO_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 107 (TERMINO_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 107 (TERMINO_A -> EMPTY .)
    BOOLEAN         reduce using rule 107 (TERMINO_A -> EMPTY .)
    SEMICOLON       reduce using rule 107 (TERMINO_A -> EMPTY .)


state 231

    (128) VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .

    TIMES           reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    DIVIDE          reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PLUS            reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    MINS            reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    RELOP           reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    AND             reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    OR              reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_SQUARE_BRACKET reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    COMMA           reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    ID              reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    IF              reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    FOR_KEYWORD     reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    WHILE_KEYWORD   reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PRINT_KEYWORD   reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    INPUT_KEYWORD   reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_BRACKET   reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_INTEGER     reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_FLOAT       reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    BOOLEAN         reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    SEMICOLON       reduce using rule 128 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)


state 232

    (131) VARS_CTE_B -> EXP . VARS_CTE_C CLOSE_PARENTHESIS
    (132) VARS_CTE_C -> . COMMA VARS_CTE_B
    (133) VARS_CTE_C -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 281
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)

    VARS_CTE_C                     shift and go to state 280
    EMPTY                          shift and go to state 282

state 233

    (129) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET VARS_CTE_D

    CLOSE_SQUARE_BRACKET shift and go to state 283


state 234

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for . SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    SEMICOLON       shift and go to state 284


state 235

    (94) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while . BLOQUE goto_while
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 285

state 236

    (180) PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 180 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 180 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 180 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 180 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 180 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 180 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 180 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)


state 237

    (181) PRINT_B -> CTE_STRING print_string PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 181 (PRINT_B -> CTE_STRING print_string PRINT_C .)


state 238

    (185) PRINT_C -> PLUS . PRINT_B
    (181) PRINT_B -> . CTE_STRING print_string PRINT_C
    (182) PRINT_B -> . EXPRESIONESVARIAS print_id
    (187) EXPRESIONESVARIAS -> . NOT EV_C
    (188) EXPRESIONESVARIAS -> . EV_C
    (189) EV_C -> . EXP_RELOP EV_B
    (194) EXP_RELOP -> . EXP EXP_RELOP_A
    (195) EXP_RELOP -> . EMPTY
    (97) EXP -> . TERMINO pop_exp EXP_A
    (199) EMPTY -> .
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 137
    NOT             shift and go to state 116
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    PRINT_B                        shift and go to state 286
    EXPRESIONESVARIAS              shift and go to state 138
    EV_C                           shift and go to state 117
    EXP_RELOP                      shift and go to state 118
    EXP                            shift and go to state 119
    EMPTY                          shift and go to state 120
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    VARS_CTE                       shift and go to state 127

state 239

    (186) PRINT_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 186 (PRINT_C -> EMPTY .)


state 240

    (136) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A . SEMICOLON quad_input

    SEMICOLON       shift and go to state 287


state 241

    (139) INPUT_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET INPUT_B
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 288
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 242

    (140) INPUT_A -> EMPTY .

    SEMICOLON       reduce using rule 140 (INPUT_A -> EMPTY .)


state 243

    (46) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto .

    MODULE          reduce using rule 46 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto .)
    MAIN            reduce using rule 46 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope returnto .)


state 244

    (55) MODULO_C -> TIPO_P ID add_variable_m MODULO_B . MODULO_D
    (57) MODULO_D -> . CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET
    (58) MODULO_D -> . EMPTY
    (199) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 290
    MODULE          reduce using rule 199 (EMPTY -> .)
    MAIN            reduce using rule 199 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 199 (EMPTY -> .) ]

    MODULO_D                       shift and go to state 289
    EMPTY                          shift and go to state 291

state 245

    (53) MODULO_B -> COMMA . MODULO_C
    (55) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (34) TIPO_P -> . INT
    (35) TIPO_P -> . FLOAT
    (36) TIPO_P -> . BOOL
    (37) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 292
    TIPO_P                         shift and go to state 91

state 246

    (54) MODULO_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 54 (MODULO_B -> EMPTY .)
    MODULE          reduce using rule 54 (MODULO_B -> EMPTY .)
    MAIN            reduce using rule 54 (MODULO_B -> EMPTY .)


state 247

    (15) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET . VARS_C
    (17) VARS_C -> . SEMICOLON VARS_D
    (18) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 76
    COMMA           shift and go to state 77

    VARS_C                         shift and go to state 293

state 248

    (75) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .

    ID              reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    IF              reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FOR_KEYWORD     reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    WHILE_KEYWORD   reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PRINT_KEYWORD   reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    INPUT_KEYWORD   reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_BRACKET   reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    NOT             reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OPEN_PARENTHESIS reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PLUS            reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    MINS            reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_INTEGER     reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_FLOAT       reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    BOOLEAN         reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    SEMICOLON       reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    AND             reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OR              reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RELOP           reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TIMES           reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    DIVIDE          reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_PARENTHESIS reduce using rule 75 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)


state 249

    (82) ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .

    SEMICOLON       reduce using rule 82 (ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .)


state 250

    (80) ASIGNACION_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 294
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 251

    (78) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B .

    EQUAL           reduce using rule 78 (ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B .)


state 252

    (81) ASIGNACION_B -> EMPTY .

    EQUAL           reduce using rule 81 (ASIGNACION_B -> EMPTY .)


state 253

    (71) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 295


state 254

    (109) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 296


state 255

    (158) PLOT_C -> PLOT_I CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 297


state 256

    (159) PLOT_I -> CTE_INTEGER PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 159 (PLOT_I -> CTE_INTEGER PLOT_D .)


state 257

    (161) PLOT_D -> COMMA . PLOT_I
    (159) PLOT_I -> . CTE_INTEGER PLOT_D
    (160) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 203
    CTE_FLOAT       shift and go to state 204

    PLOT_I                         shift and go to state 298

state 258

    (162) PLOT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 162 (PLOT_D -> EMPTY .)


state 259

    (160) PLOT_I -> CTE_FLOAT PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 160 (PLOT_I -> CTE_FLOAT PLOT_D .)


state 260

    (163) PLOT_E -> PLOT_F SEMICOLON . PLOT_G
    (168) PLOT_G -> . PLOT_K CLOSE_PARENTHESIS SEMICOLON
    (169) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 301

    PLOT_G                         shift and go to state 299
    PLOT_K                         shift and go to state 300

state 261

    (164) PLOT_F -> CTE_INTEGER PLOT_J .

    SEMICOLON       reduce using rule 164 (PLOT_F -> CTE_INTEGER PLOT_J .)


state 262

    (166) PLOT_J -> COMMA . PLOT_F
    (164) PLOT_F -> . CTE_INTEGER PLOT_J
    (165) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 207
    CTE_FLOAT       shift and go to state 208

    PLOT_F                         shift and go to state 302

state 263

    (167) PLOT_J -> EMPTY .

    SEMICOLON       reduce using rule 167 (PLOT_J -> EMPTY .)


state 264

    (165) PLOT_F -> CTE_FLOAT PLOT_J .

    SEMICOLON       reduce using rule 165 (PLOT_F -> CTE_FLOAT PLOT_J .)


state 265

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA . CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 303


state 266

    (157) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .

    ID              reduce using rule 157 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    IF              reduce using rule 157 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    FOR_KEYWORD     reduce using rule 157 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    WHILE_KEYWORD   reduce using rule 157 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    PRINT_KEYWORD   reduce using rule 157 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    INPUT_KEYWORD   reduce using rule 157 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    CLOSE_BRACKET   reduce using rule 157 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)


state 267

    (172) PLOT_M -> PLOT_N . CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 304


state 268

    (173) PLOT_N -> CTE_STRING . PLOT_O
    (174) PLOT_O -> . COMMA PLOT_N
    (175) PLOT_O -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 306
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)

    PLOT_O                         shift and go to state 305
    EMPTY                          shift and go to state 307

state 269

    (67) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A . LLAMADAMODULO_D
    (69) LLAMADAMODULO_D -> . CLOSE_PARENTHESIS SEMICOLON
    (70) LLAMADAMODULO_D -> . EMPTY
    (199) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 309
    ID              reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 199 (EMPTY -> .) ]

    LLAMADAMODULO_D                shift and go to state 308
    EMPTY                          shift and go to state 310

state 270

    (64) LLAMADAMODULO_A -> COMMA . incK LLAMADAMODULO_C
    (66) incK -> .

    OPEN_PARENTHESIS reduce using rule 66 (incK -> .)
    PLUS            reduce using rule 66 (incK -> .)
    MINS            reduce using rule 66 (incK -> .)
    CTE_INTEGER     reduce using rule 66 (incK -> .)
    CTE_FLOAT       reduce using rule 66 (incK -> .)
    BOOLEAN         reduce using rule 66 (incK -> .)
    ID              reduce using rule 66 (incK -> .)
    COMMA           reduce using rule 66 (incK -> .)
    CLOSE_PARENTHESIS reduce using rule 66 (incK -> .)
    TIMES           reduce using rule 66 (incK -> .)
    DIVIDE          reduce using rule 66 (incK -> .)
    IF              reduce using rule 66 (incK -> .)
    FOR_KEYWORD     reduce using rule 66 (incK -> .)
    WHILE_KEYWORD   reduce using rule 66 (incK -> .)
    PRINT_KEYWORD   reduce using rule 66 (incK -> .)
    INPUT_KEYWORD   reduce using rule 66 (incK -> .)
    CLOSE_BRACKET   reduce using rule 66 (incK -> .)

    incK                           shift and go to state 311

state 271

    (65) LLAMADAMODULO_A -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 65 (LLAMADAMODULO_A -> EMPTY .)
    ID              reduce using rule 65 (LLAMADAMODULO_A -> EMPTY .)
    IF              reduce using rule 65 (LLAMADAMODULO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 65 (LLAMADAMODULO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 65 (LLAMADAMODULO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 65 (LLAMADAMODULO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 65 (LLAMADAMODULO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 65 (LLAMADAMODULO_A -> EMPTY .)


state 272

    (85) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE . CONDICION_A fill_end
    (88) CONDICION_A -> . gotoElse ELSE BLOQUE
    (89) CONDICION_A -> . EMPTY
    (90) gotoElse -> .
    (199) EMPTY -> .

    ELSE            reduce using rule 90 (gotoElse -> .)
    ID              reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)

    CONDICION_A                    shift and go to state 312
    gotoElse                       shift and go to state 313
    EMPTY                          shift and go to state 314

state 273

    (190) EV_B -> AND add_ev EV_C .

    CLOSE_PARENTHESIS reduce using rule 190 (EV_B -> AND add_ev EV_C .)
    CTE_INTEGER     reduce using rule 190 (EV_B -> AND add_ev EV_C .)
    CTE_FLOAT       reduce using rule 190 (EV_B -> AND add_ev EV_C .)
    BOOLEAN         reduce using rule 190 (EV_B -> AND add_ev EV_C .)
    ID              reduce using rule 190 (EV_B -> AND add_ev EV_C .)
    SEMICOLON       reduce using rule 190 (EV_B -> AND add_ev EV_C .)


state 274

    (191) EV_B -> OR add_ev EV_C .

    CLOSE_PARENTHESIS reduce using rule 191 (EV_B -> OR add_ev EV_C .)
    CTE_INTEGER     reduce using rule 191 (EV_B -> OR add_ev EV_C .)
    CTE_FLOAT       reduce using rule 191 (EV_B -> OR add_ev EV_C .)
    BOOLEAN         reduce using rule 191 (EV_B -> OR add_ev EV_C .)
    ID              reduce using rule 191 (EV_B -> OR add_ev EV_C .)
    SEMICOLON       reduce using rule 191 (EV_B -> OR add_ev EV_C .)


state 275

    (196) EXP_RELOP_A -> RELOP add_relop EXP .

    AND             reduce using rule 196 (EXP_RELOP_A -> RELOP add_relop EXP .)
    OR              reduce using rule 196 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CLOSE_PARENTHESIS reduce using rule 196 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CTE_INTEGER     reduce using rule 196 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CTE_FLOAT       reduce using rule 196 (EXP_RELOP_A -> RELOP add_relop EXP .)
    BOOLEAN         reduce using rule 196 (EXP_RELOP_A -> RELOP add_relop EXP .)
    ID              reduce using rule 196 (EXP_RELOP_A -> RELOP add_relop EXP .)
    SEMICOLON       reduce using rule 196 (EXP_RELOP_A -> RELOP add_relop EXP .)


state 276

    (99) EXP_A -> PLUS append_operator . EXP
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 315
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 277

    (100) EXP_A -> MINS append_operator . EXP
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 316
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 278

    (105) TERMINO_A -> TIMES add_operator . TERMINO
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]

    TERMINO                        shift and go to state 317
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 279

    (106) TERMINO_A -> DIVIDE add_operator . TERMINO
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 199 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 199 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 199 (EMPTY -> .) ]

    TERMINO                        shift and go to state 318
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 280

    (131) VARS_CTE_B -> EXP VARS_CTE_C . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 319


state 281

    (132) VARS_CTE_C -> COMMA . VARS_CTE_B
    (131) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 320
    EXP                            shift and go to state 232
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 282

    (133) VARS_CTE_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 133 (VARS_CTE_C -> EMPTY .)


state 283

    (129) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . VARS_CTE_D
    (134) VARS_CTE_D -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (135) VARS_CTE_D -> . EMPTY
    (199) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 321
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    PLUS            reduce using rule 199 (EMPTY -> .)
    MINS            reduce using rule 199 (EMPTY -> .)
    RELOP           reduce using rule 199 (EMPTY -> .)
    AND             reduce using rule 199 (EMPTY -> .)
    OR              reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    ID              reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 199 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 199 (EMPTY -> .)
    BOOLEAN         reduce using rule 199 (EMPTY -> .)
    SEMICOLON       reduce using rule 199 (EMPTY -> .)

    VARS_CTE_D                     shift and go to state 322
    EMPTY                          shift and go to state 323

state 284

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON . ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (75) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 133

    ASIGNACION                     shift and go to state 324

state 285

    (94) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE . goto_while
    (95) goto_while -> .

    ID              reduce using rule 95 (goto_while -> .)
    IF              reduce using rule 95 (goto_while -> .)
    FOR_KEYWORD     reduce using rule 95 (goto_while -> .)
    WHILE_KEYWORD   reduce using rule 95 (goto_while -> .)
    PRINT_KEYWORD   reduce using rule 95 (goto_while -> .)
    INPUT_KEYWORD   reduce using rule 95 (goto_while -> .)
    CLOSE_BRACKET   reduce using rule 95 (goto_while -> .)

    goto_while                     shift and go to state 325

state 286

    (185) PRINT_C -> PLUS PRINT_B .

    CLOSE_PARENTHESIS reduce using rule 185 (PRINT_C -> PLUS PRINT_B .)


state 287

    (136) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON . quad_input
    (138) quad_input -> .

    ID              reduce using rule 138 (quad_input -> .)
    IF              reduce using rule 138 (quad_input -> .)
    FOR_KEYWORD     reduce using rule 138 (quad_input -> .)
    WHILE_KEYWORD   reduce using rule 138 (quad_input -> .)
    PRINT_KEYWORD   reduce using rule 138 (quad_input -> .)
    INPUT_KEYWORD   reduce using rule 138 (quad_input -> .)
    CLOSE_BRACKET   reduce using rule 138 (quad_input -> .)

    quad_input                     shift and go to state 326

state 288

    (139) INPUT_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET INPUT_B

    CLOSE_SQUARE_BRACKET shift and go to state 327


state 289

    (55) MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .

    MODULE          reduce using rule 55 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    MAIN            reduce using rule 55 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 55 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)


state 290

    (57) MODULO_D -> CLOSE_PARENTHESIS . param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET
    (60) param_table -> .

    OPEN_BRACKET    reduce using rule 60 (param_table -> .)

    param_table                    shift and go to state 328

state 291

    (58) MODULO_D -> EMPTY .

    MODULE          reduce using rule 58 (MODULO_D -> EMPTY .)
    MAIN            reduce using rule 58 (MODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 58 (MODULO_D -> EMPTY .)


state 292

    (53) MODULO_B -> COMMA MODULO_C .

    CLOSE_PARENTHESIS reduce using rule 53 (MODULO_B -> COMMA MODULO_C .)
    MODULE          reduce using rule 53 (MODULO_B -> COMMA MODULO_C .)
    MAIN            reduce using rule 53 (MODULO_B -> COMMA MODULO_C .)


state 293

    (15) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .

    SEMICOLON       reduce using rule 15 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .)
    COMMA           reduce using rule 15 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .)


state 294

    (80) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 329


state 295

    (71) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 71 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 71 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 71 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 71 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 71 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 71 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 71 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 296

    (109) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 109 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 109 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 109 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 109 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 109 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 109 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 109 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)


state 297

    (158) PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 158 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 158 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 158 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 158 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 158 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 158 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 158 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)


state 298

    (161) PLOT_D -> COMMA PLOT_I .

    CLOSE_PARENTHESIS reduce using rule 161 (PLOT_D -> COMMA PLOT_I .)


state 299

    (163) PLOT_E -> PLOT_F SEMICOLON PLOT_G .

    ID              reduce using rule 163 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    IF              reduce using rule 163 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    FOR_KEYWORD     reduce using rule 163 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    WHILE_KEYWORD   reduce using rule 163 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    PRINT_KEYWORD   reduce using rule 163 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    INPUT_KEYWORD   reduce using rule 163 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    CLOSE_BRACKET   reduce using rule 163 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)


state 300

    (168) PLOT_G -> PLOT_K . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 330


state 301

    (169) PLOT_K -> CTE_STRING . PLOT_H
    (170) PLOT_H -> . COMMA PLOT_K
    (171) PLOT_H -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 332
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)

    PLOT_H                         shift and go to state 331
    EMPTY                          shift and go to state 333

state 302

    (166) PLOT_J -> COMMA PLOT_F .

    SEMICOLON       reduce using rule 166 (PLOT_J -> COMMA PLOT_F .)


state 303

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER . COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 334


state 304

    (172) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET . SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 335


state 305

    (173) PLOT_N -> CTE_STRING PLOT_O .

    CLOSE_SQUARE_BRACKET reduce using rule 173 (PLOT_N -> CTE_STRING PLOT_O .)


state 306

    (174) PLOT_O -> COMMA . PLOT_N
    (173) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 268

    PLOT_N                         shift and go to state 336

state 307

    (175) PLOT_O -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 175 (PLOT_O -> EMPTY .)


state 308

    (67) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .

    ID              reduce using rule 67 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    IF              reduce using rule 67 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    FOR_KEYWORD     reduce using rule 67 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    WHILE_KEYWORD   reduce using rule 67 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    PRINT_KEYWORD   reduce using rule 67 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    INPUT_KEYWORD   reduce using rule 67 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_BRACKET   reduce using rule 67 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 67 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)


state 309

    (69) LLAMADAMODULO_D -> CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 337


state 310

    (70) LLAMADAMODULO_D -> EMPTY .

    ID              reduce using rule 70 (LLAMADAMODULO_D -> EMPTY .)
    IF              reduce using rule 70 (LLAMADAMODULO_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 70 (LLAMADAMODULO_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 70 (LLAMADAMODULO_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 70 (LLAMADAMODULO_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 70 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 70 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 70 (LLAMADAMODULO_D -> EMPTY .)


state 311

    (64) LLAMADAMODULO_A -> COMMA incK . LLAMADAMODULO_C
    (67) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    COMMA           reduce using rule 199 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (EMPTY -> .)
    IF              reduce using rule 199 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 199 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 199 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 199 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]
  ! ID              [ reduce using rule 199 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 338
    EXP                            shift and go to state 160
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 312

    (85) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A . fill_end
    (86) fill_end -> .

    ID              reduce using rule 86 (fill_end -> .)
    IF              reduce using rule 86 (fill_end -> .)
    FOR_KEYWORD     reduce using rule 86 (fill_end -> .)
    WHILE_KEYWORD   reduce using rule 86 (fill_end -> .)
    PRINT_KEYWORD   reduce using rule 86 (fill_end -> .)
    INPUT_KEYWORD   reduce using rule 86 (fill_end -> .)
    CLOSE_BRACKET   reduce using rule 86 (fill_end -> .)

    fill_end                       shift and go to state 339

state 313

    (88) CONDICION_A -> gotoElse . ELSE BLOQUE

    ELSE            shift and go to state 340


state 314

    (89) CONDICION_A -> EMPTY .

    ID              reduce using rule 89 (CONDICION_A -> EMPTY .)
    IF              reduce using rule 89 (CONDICION_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 89 (CONDICION_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 89 (CONDICION_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 89 (CONDICION_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 89 (CONDICION_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 89 (CONDICION_A -> EMPTY .)


state 315

    (99) EXP_A -> PLUS append_operator EXP .

    RELOP           reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    AND             reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    OR              reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    COMMA           reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    ID              reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    IF              reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    CTE_INTEGER     reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    CTE_FLOAT       reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    BOOLEAN         reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)
    SEMICOLON       reduce using rule 99 (EXP_A -> PLUS append_operator EXP .)


state 316

    (100) EXP_A -> MINS append_operator EXP .

    RELOP           reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    AND             reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    OR              reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    COMMA           reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    ID              reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    IF              reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    CTE_INTEGER     reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    CTE_FLOAT       reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    BOOLEAN         reduce using rule 100 (EXP_A -> MINS append_operator EXP .)
    SEMICOLON       reduce using rule 100 (EXP_A -> MINS append_operator EXP .)


state 317

    (105) TERMINO_A -> TIMES add_operator TERMINO .

    PLUS            reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    MINS            reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    RELOP           reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    AND             reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    OR              reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    COMMA           reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    ID              reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    IF              reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    CTE_INTEGER     reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    CTE_FLOAT       reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    BOOLEAN         reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)
    SEMICOLON       reduce using rule 105 (TERMINO_A -> TIMES add_operator TERMINO .)


state 318

    (106) TERMINO_A -> DIVIDE add_operator TERMINO .

    PLUS            reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    MINS            reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RELOP           reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    AND             reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    OR              reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    COMMA           reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    ID              reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    IF              reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CTE_INTEGER     reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CTE_FLOAT       reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    BOOLEAN         reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    SEMICOLON       reduce using rule 106 (TERMINO_A -> DIVIDE add_operator TERMINO .)


state 319

    (131) VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .

    TIMES           reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    MINS            reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    AND             reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    OR              reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    ID              reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    IF              reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 131 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)


state 320

    (132) VARS_CTE_C -> COMMA VARS_CTE_B .

    CLOSE_PARENTHESIS reduce using rule 132 (VARS_CTE_C -> COMMA VARS_CTE_B .)


state 321

    (134) VARS_CTE_D -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 341
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 322

    (129) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .

    TIMES           reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    DIVIDE          reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PLUS            reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    MINS            reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    RELOP           reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    AND             reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    OR              reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_PARENTHESIS reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_SQUARE_BRACKET reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    COMMA           reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    ID              reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    IF              reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    FOR_KEYWORD     reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    WHILE_KEYWORD   reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PRINT_KEYWORD   reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    INPUT_KEYWORD   reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_BRACKET   reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_INTEGER     reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_FLOAT       reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    BOOLEAN         reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    SEMICOLON       reduce using rule 129 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)


state 323

    (135) VARS_CTE_D -> EMPTY .

    TIMES           reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    DIVIDE          reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    PLUS            reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    MINS            reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    RELOP           reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    AND             reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    OR              reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    COMMA           reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    ID              reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    IF              reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    CTE_INTEGER     reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    CTE_FLOAT       reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    BOOLEAN         reduce using rule 135 (VARS_CTE_D -> EMPTY .)
    SEMICOLON       reduce using rule 135 (VARS_CTE_D -> EMPTY .)


state 324

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION . CLOSE_PARENTHESIS BLOQUE repeat_for

    CLOSE_PARENTHESIS shift and go to state 342


state 325

    (94) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .

    ID              reduce using rule 94 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    IF              reduce using rule 94 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    FOR_KEYWORD     reduce using rule 94 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    WHILE_KEYWORD   reduce using rule 94 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    PRINT_KEYWORD   reduce using rule 94 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    INPUT_KEYWORD   reduce using rule 94 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    CLOSE_BRACKET   reduce using rule 94 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)


state 326

    (136) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .

    ID              reduce using rule 136 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    IF              reduce using rule 136 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    FOR_KEYWORD     reduce using rule 136 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    WHILE_KEYWORD   reduce using rule 136 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    PRINT_KEYWORD   reduce using rule 136 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    INPUT_KEYWORD   reduce using rule 136 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    CLOSE_BRACKET   reduce using rule 136 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)


state 327

    (139) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . INPUT_B
    (141) INPUT_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET shift and go to state 343

    INPUT_B                        shift and go to state 344

state 328

    (57) MODULO_D -> CLOSE_PARENTHESIS param_table . OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 345


state 329

    (80) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    EQUAL           reduce using rule 80 (ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 330

    (168) PLOT_G -> PLOT_K CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 346


state 331

    (169) PLOT_K -> CTE_STRING PLOT_H .

    CLOSE_PARENTHESIS reduce using rule 169 (PLOT_K -> CTE_STRING PLOT_H .)


state 332

    (170) PLOT_H -> COMMA . PLOT_K
    (169) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 301

    PLOT_K                         shift and go to state 347

state 333

    (171) PLOT_H -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 171 (PLOT_H -> EMPTY .)


state 334

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA . CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 348


state 335

    (172) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON . OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    OPEN_SQUARE_BRACKET shift and go to state 349


state 336

    (174) PLOT_O -> COMMA PLOT_N .

    CLOSE_SQUARE_BRACKET reduce using rule 174 (PLOT_O -> COMMA PLOT_N .)


state 337

    (69) LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 69 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 69 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 69 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 69 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 69 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 69 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 69 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_PARENTHESIS reduce using rule 69 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)


state 338

    (64) LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .

    CLOSE_PARENTHESIS reduce using rule 64 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    ID              reduce using rule 64 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    IF              reduce using rule 64 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    FOR_KEYWORD     reduce using rule 64 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    WHILE_KEYWORD   reduce using rule 64 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    PRINT_KEYWORD   reduce using rule 64 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    INPUT_KEYWORD   reduce using rule 64 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    CLOSE_BRACKET   reduce using rule 64 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)


state 339

    (85) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .

    ID              reduce using rule 85 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    IF              reduce using rule 85 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    FOR_KEYWORD     reduce using rule 85 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    WHILE_KEYWORD   reduce using rule 85 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    PRINT_KEYWORD   reduce using rule 85 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    INPUT_KEYWORD   reduce using rule 85 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    CLOSE_BRACKET   reduce using rule 85 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)


state 340

    (88) CONDICION_A -> gotoElse ELSE . BLOQUE
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 350

state 341

    (134) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 351


state 342

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS . BLOQUE repeat_for
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 352

state 343

    (141) INPUT_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (97) EXP -> . TERMINO pop_exp EXP_A
    (103) TERMINO -> . FACTOR pop_term TERMINO_A
    (116) FACTOR -> . FACTOR_A
    (117) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (118) FACTOR_A -> . PLUS FACTOR_C
    (119) FACTOR_A -> . MINS FACTOR_C
    (120) FACTOR_A -> . FACTOR_C
    (121) FACTOR_A -> . EMPTY
    (123) FACTOR_C -> . VARS_CTE
    (199) EMPTY -> .
    (124) VARS_CTE -> . CTE_INTEGER
    (125) VARS_CTE -> . CTE_FLOAT
    (126) VARS_CTE -> . BOOLEAN
    (127) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 114
    PLUS            shift and go to state 124
    MINS            shift and go to state 126
    TIMES           reduce using rule 199 (EMPTY -> .)
    DIVIDE          reduce using rule 199 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 128
    CTE_FLOAT       shift and go to state 129
    BOOLEAN         shift and go to state 130
    ID              shift and go to state 131

  ! PLUS            [ reduce using rule 199 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 199 (EMPTY -> .) ]

    EXP                            shift and go to state 353
    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 122
    FACTOR_A                       shift and go to state 123
    FACTOR_C                       shift and go to state 125
    EMPTY                          shift and go to state 148
    VARS_CTE                       shift and go to state 127

state 344

    (139) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .

    SEMICOLON       reduce using rule 139 (INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .)


state 345

    (57) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET . VARS add_count add_start BLOQUE CLOSE_BRACKET
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 354

state 346

    (168) PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 168 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 168 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 168 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 168 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 168 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 168 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 168 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)


state 347

    (170) PLOT_H -> COMMA PLOT_K .

    CLOSE_PARENTHESIS reduce using rule 170 (PLOT_H -> COMMA PLOT_K .)


state 348

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER . SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 355


state 349

    (172) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET . PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (176) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 357

    PLOT_P                         shift and go to state 356

state 350

    (88) CONDICION_A -> gotoElse ELSE BLOQUE .

    ID              reduce using rule 88 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    IF              reduce using rule 88 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    FOR_KEYWORD     reduce using rule 88 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    WHILE_KEYWORD   reduce using rule 88 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    PRINT_KEYWORD   reduce using rule 88 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    INPUT_KEYWORD   reduce using rule 88 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    CLOSE_BRACKET   reduce using rule 88 (CONDICION_A -> gotoElse ELSE BLOQUE .)


state 351

    (134) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    TIMES           reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    DIVIDE          reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PLUS            reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    MINS            reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    RELOP           reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    AND             reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    OR              reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_SQUARE_BRACKET reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    ID              reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    IF              reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    FOR_KEYWORD     reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_INTEGER     reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_FLOAT       reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    BOOLEAN         reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    SEMICOLON       reduce using rule 134 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 352

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE . repeat_for
    (92) repeat_for -> .

    ID              reduce using rule 92 (repeat_for -> .)
    IF              reduce using rule 92 (repeat_for -> .)
    FOR_KEYWORD     reduce using rule 92 (repeat_for -> .)
    WHILE_KEYWORD   reduce using rule 92 (repeat_for -> .)
    PRINT_KEYWORD   reduce using rule 92 (repeat_for -> .)
    INPUT_KEYWORD   reduce using rule 92 (repeat_for -> .)
    CLOSE_BRACKET   reduce using rule 92 (repeat_for -> .)

    repeat_for                     shift and go to state 358

state 353

    (141) INPUT_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 359


state 354

    (57) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS . add_count add_start BLOQUE CLOSE_BRACKET
    (3) add_count -> .

    OPEN_BRACKET    reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 360

state 355

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON . CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 361


state 356

    (172) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 362


state 357

    (176) PLOT_P -> CTE_STRING . PLOT_Q
    (177) PLOT_Q -> . COMMA PLOT_P
    (178) PLOT_Q -> . EMPTY
    (199) EMPTY -> .

    COMMA           shift and go to state 364
    CLOSE_SQUARE_BRACKET reduce using rule 199 (EMPTY -> .)

    PLOT_Q                         shift and go to state 363
    EMPTY                          shift and go to state 365

state 358

    (91) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .

    ID              reduce using rule 91 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    IF              reduce using rule 91 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    FOR_KEYWORD     reduce using rule 91 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    WHILE_KEYWORD   reduce using rule 91 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    PRINT_KEYWORD   reduce using rule 91 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    INPUT_KEYWORD   reduce using rule 91 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    CLOSE_BRACKET   reduce using rule 91 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)


state 359

    (141) INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 141 (INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 360

    (57) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count . add_start BLOQUE CLOSE_BRACKET
    (59) add_start -> .

    OPEN_BRACKET    reduce using rule 59 (add_start -> .)

    add_start                      shift and go to state 366

state 361

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING . COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 367


state 362

    (172) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 368


state 363

    (176) PLOT_P -> CTE_STRING PLOT_Q .

    CLOSE_SQUARE_BRACKET reduce using rule 176 (PLOT_P -> CTE_STRING PLOT_Q .)


state 364

    (177) PLOT_Q -> COMMA . PLOT_P
    (176) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 357

    PLOT_P                         shift and go to state 369

state 365

    (178) PLOT_Q -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 178 (PLOT_Q -> EMPTY .)


state 366

    (57) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start . BLOQUE CLOSE_BRACKET
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 370

state 367

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 371


state 368

    (172) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 372


state 369

    (177) PLOT_Q -> COMMA PLOT_P .

    CLOSE_SQUARE_BRACKET reduce using rule 177 (PLOT_Q -> COMMA PLOT_P .)


state 370

    (57) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 373


state 371

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 374


state 372

    (172) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 172 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 172 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 172 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 172 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 172 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 172 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 172 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)


state 373

    (57) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET .

    MODULE          reduce using rule 57 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET .)
    MAIN            reduce using rule 57 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 57 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET .)


state 374

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 375


state 375

    (156) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 156 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 156 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 156 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 156 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 156 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 156 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 156 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINS in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINS in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINS in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINS in state 113 resolved as shift
WARNING: shift/reduce conflict for ID in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINS in state 114 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 114 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 114 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 114 resolved as shift
WARNING: shift/reduce conflict for ID in state 114 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINS in state 116 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 116 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 116 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 116 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINS in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 177 resolved as shift
WARNING: shift/reduce conflict for MINS in state 177 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 178 resolved as shift
WARNING: shift/reduce conflict for MINS in state 178 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 190 resolved as shift
WARNING: shift/reduce conflict for MINS in state 190 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 220 resolved as shift
WARNING: shift/reduce conflict for MINS in state 220 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 220 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 220 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 220 resolved as shift
WARNING: shift/reduce conflict for ID in state 220 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 221 resolved as shift
WARNING: shift/reduce conflict for MINS in state 221 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 221 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 221 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 221 resolved as shift
WARNING: shift/reduce conflict for ID in state 221 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 222 resolved as shift
WARNING: shift/reduce conflict for MINS in state 222 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 222 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 222 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 238 resolved as shift
WARNING: shift/reduce conflict for MINS in state 238 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 241 resolved as shift
WARNING: shift/reduce conflict for MINS in state 241 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 244 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 250 resolved as shift
WARNING: shift/reduce conflict for MINS in state 250 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 269 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 276 resolved as shift
WARNING: shift/reduce conflict for MINS in state 276 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 276 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 276 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 276 resolved as shift
WARNING: shift/reduce conflict for ID in state 276 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 277 resolved as shift
WARNING: shift/reduce conflict for MINS in state 277 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 277 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 277 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 277 resolved as shift
WARNING: shift/reduce conflict for ID in state 277 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 278 resolved as shift
WARNING: shift/reduce conflict for MINS in state 278 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 278 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 278 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 278 resolved as shift
WARNING: shift/reduce conflict for ID in state 278 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 279 resolved as shift
WARNING: shift/reduce conflict for MINS in state 279 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 279 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 279 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 279 resolved as shift
WARNING: shift/reduce conflict for ID in state 279 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 281 resolved as shift
WARNING: shift/reduce conflict for MINS in state 281 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 311 resolved as shift
WARNING: shift/reduce conflict for MINS in state 311 resolved as shift
WARNING: shift/reduce conflict for ID in state 311 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 321 resolved as shift
WARNING: shift/reduce conflict for MINS in state 321 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 343 resolved as shift
WARNING: shift/reduce conflict for MINS in state 343 resolved as shift
WARNING: reduce/reduce conflict in state 120 resolved using rule (FACTOR_A -> EMPTY)
WARNING: rejected rule (EXP_RELOP -> EMPTY) in state 120
WARNING: Rule (EXP_RELOP -> EMPTY) is never reduced
