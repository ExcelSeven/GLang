Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN
    CREATE
    CTE_CHAR
    QUOTE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
Rule 2     end_quad -> <empty>
Rule 3     add_count -> <empty>
Rule 4     addfunction -> <empty>
Rule 5     quad_main -> <empty>
Rule 6     PROGRAMA_A -> MODULO PROGRAMA_A
Rule 7     PROGRAMA_A -> EMPTY
Rule 8     VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A
Rule 9     VARS_A -> TIPO_P VARS_B
Rule 10    VARS_A -> TIPO_S VARS_B
Rule 11    VARS_B -> ID add_variable VARS_E VARS_C
Rule 12    add_variable -> <empty>
Rule 13    VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F
Rule 14    VARS_E -> EMPTY
Rule 15    add_s1 -> <empty>
Rule 16    VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET
Rule 17    VARS_F -> EMPTY
Rule 18    add_s2 -> <empty>
Rule 19    VARS_C -> SEMICOLON VARS_D
Rule 20    VARS_C -> COMMA VARS_B
Rule 21    VARS_D -> CLOSE_BRACKET
Rule 22    VARS_D -> VARS_A
Rule 23    BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET
Rule 24    ESTATUTO_A -> ESTATUTO ESTATUTO_A
Rule 25    ESTATUTO_A -> EMPTY
Rule 26    ESTATUTO -> ASIGNACION
Rule 27    ESTATUTO -> CONDICION
Rule 28    ESTATUTO -> NOMBRAR
Rule 29    ESTATUTO -> FOR
Rule 30    ESTATUTO -> WHILE
Rule 31    ESTATUTO -> PRINT
Rule 32    ESTATUTO -> PLOT
Rule 33    ESTATUTO -> LLAMADAMODULO
Rule 34    ESTATUTO -> INPUT
Rule 35    ESTATUTO -> COLOR
Rule 36    ESTATUTO -> RETURNOP
Rule 37    TIPO_P -> INT
Rule 38    TIPO_P -> FLOAT
Rule 39    TIPO_P -> BOOL
Rule 40    TIPO_P -> CHAR
Rule 41    TIPO_S -> TYPE_GRAPH
Rule 42    TIPO_S -> TYPE_PIECHART
Rule 43    TIPO_S -> TYPE_BARCHART
Rule 44    TIPO_S -> TYPE_HORBARCHART
Rule 45    TIPO_S -> TYPE_DONUTGRAPH
Rule 46    TIPO_S -> TYPE_NETWORK
Rule 47    TIPO_S -> TYPE_VENN
Rule 48    TIPO_S -> TYPE_RADARCHART
Rule 49    MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
Rule 50    RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON
Rule 51    activate -> <empty>
Rule 52    return_quad -> <empty>
Rule 53    release_vars -> <empty>
Rule 54    endproc -> <empty>
Rule 55    change_scope -> <empty>
Rule 56    add_functionr -> <empty>
Rule 57    MODULO_A -> VOID
Rule 58    MODULO_A -> TIPO_P
Rule 59    MODULO_B -> COMMA MODULO_C
Rule 60    MODULO_B -> EMPTY
Rule 61    MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D
Rule 62    add_variable_m -> <empty>
Rule 63    MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
Rule 64    MODULO_D -> EMPTY
Rule 65    OPVARS -> VARS
Rule 66    OPVARS -> EMPTY
Rule 67    add_start -> <empty>
Rule 68    param_table -> <empty>
Rule 69    LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
Rule 70    gosub -> <empty>
Rule 71    era -> <empty>
Rule 72    LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C
Rule 73    LLAMADAMODULO_A -> EMPTY
Rule 74    incK -> <empty>
Rule 75    LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
Rule 76    check_types -> <empty>
Rule 77    LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON
Rule 78    LLAMADAMODULO_D -> EMPTY
Rule 79    NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 80    NOMBRAR_A -> NAME
Rule 81    NOMBRAR_A -> NAMEX
Rule 82    NOMBRAR_A -> NAMEY
Rule 83    ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
Rule 84    quad -> <empty>
Rule 85    addStackO -> <empty>
Rule 86    ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
Rule 87    ASIGNACION_A -> EMPTY
Rule 88    ver_arr -> <empty>
Rule 89    ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat
Rule 90    ASIGNACION_B -> EMPTY
Rule 91    ver_mat -> <empty>
Rule 92    ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS
Rule 93    ASIGNACION_C -> EQUAL CTE_STRING
Rule 94    add_equal -> <empty>
Rule 95    CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
Rule 96    if_gotof -> <empty>
Rule 97    fill_end -> <empty>
Rule 98    check_bool -> <empty>
Rule 99    CONDICION_A -> gotoElse ELSE BLOQUE
Rule 100   CONDICION_A -> EMPTY
Rule 101   gotoElse -> <empty>
Rule 102   FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
Rule 103   get_increment -> <empty>
Rule 104   for_jump -> <empty>
Rule 105   for_gotof -> <empty>
Rule 106   repeat_for -> <empty>
Rule 107   bool_for -> <empty>
Rule 108   WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
Rule 109   while_gotof -> <empty>
Rule 110   while_jump -> <empty>
Rule 111   goto_while -> <empty>
Rule 112   bool_while -> <empty>
Rule 113   EXP -> TERMINO pop_exp EXP_A
Rule 114   pop_exp -> <empty>
Rule 115   EXP_A -> PLUS append_operator EXP
Rule 116   EXP_A -> MINS append_operator EXP
Rule 117   EXP_A -> EMPTY
Rule 118   append_operator -> <empty>
Rule 119   TERMINO -> FACTOR pop_term TERMINO_A
Rule 120   pop_term -> <empty>
Rule 121   TERMINO_A -> TIMES add_operator TERMINO
Rule 122   TERMINO_A -> DIVIDE add_operator TERMINO
Rule 123   TERMINO_A -> EMPTY
Rule 124   add_operator -> <empty>
Rule 125   COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
Rule 126   COLOR_A -> COLOR_RED
Rule 127   COLOR_A -> COLOR_BLACK
Rule 128   COLOR_A -> COLOR_BLUE
Rule 129   COLOR_A -> COLOR_PURPLE
Rule 130   COLOR_A -> COLOR_GREEN
Rule 131   COLOR_A -> COLOR_ORANGE
Rule 132   FACTOR -> FACTOR_A
Rule 133   FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
Rule 134   FACTOR_A -> PLUS FACTOR_C
Rule 135   FACTOR_A -> MINS FACTOR_C
Rule 136   FACTOR_A -> FACTOR_C
Rule 137   FACTOR_A -> EMPTY
Rule 138   add_parenthesis -> <empty>
Rule 139   pop_parenthesis -> <empty>
Rule 140   FACTOR_B -> EXPRESIONESVARIAS
Rule 141   FACTOR_C -> VARS_CTE
Rule 142   VARS_CTE -> CTE_INTEGER append_cte_int
Rule 143   VARS_CTE -> CTE_FLOAT append_cte_float
Rule 144   VARS_CTE -> TRUE append_bool
Rule 145   VARS_CTE -> FALSE append_bool
Rule 146   VARS_CTE -> ID append_id
Rule 147   VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
Rule 148   VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub
Rule 149   append_id -> <empty>
Rule 150   append_cte_int -> <empty>
Rule 151   append_cte_float -> <empty>
Rule 152   append_bool -> <empty>
Rule 153   VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B
Rule 154   VARS_CTE_A -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
Rule 155   VARS_CTE_A -> EMPTY
Rule 156   add_SB -> <empty>
Rule 157   pop_SB -> <empty>
Rule 158   VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS
Rule 159   VARS_CTE_C -> COMMA incK VARS_CTE_B
Rule 160   VARS_CTE_C -> EMPTY
Rule 161   VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat
Rule 162   VARS_CTE_D -> EMPTY
Rule 163   INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
Rule 164   add_inputid -> <empty>
Rule 165   quad_input -> <empty>
Rule 166   INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
Rule 167   INPUT_A -> EMPTY
Rule 168   INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 169   PLOT -> PGraph
Rule 170   PLOT -> PPie
Rule 171   PLOT -> PGBarras
Rule 172   PLOT -> PGBarrasHor
Rule 173   PLOT -> PDona
Rule 174   PLOT -> PRadar
Rule 175   PLOT -> PVenn
Rule 176   PLOT -> PLOT_B
Rule 177   PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
Rule 178   PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
Rule 179   PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
Rule 180   PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
Rule 181   PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E
Rule 182   PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E
Rule 183   PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 184   PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
Rule 185   PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON
Rule 186   PLOT_I -> CTE_INTEGER PLOT_D
Rule 187   PLOT_I -> CTE_FLOAT PLOT_D
Rule 188   PLOT_D -> COMMA PLOT_I
Rule 189   PLOT_D -> EMPTY
Rule 190   PLOT_E -> PLOT_F SEMICOLON PLOT_G
Rule 191   PLOT_F -> CTE_INTEGER PLOT_J
Rule 192   PLOT_F -> CTE_FLOAT PLOT_J
Rule 193   PLOT_J -> COMMA PLOT_F
Rule 194   PLOT_J -> EMPTY
Rule 195   PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON
Rule 196   PLOT_K -> CTE_STRING PLOT_H
Rule 197   PLOT_H -> COMMA PLOT_K
Rule 198   PLOT_H -> EMPTY
Rule 199   PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
Rule 200   PLOT_N -> CTE_STRING PLOT_O
Rule 201   PLOT_O -> COMMA PLOT_N
Rule 202   PLOT_O -> EMPTY
Rule 203   PLOT_P -> CTE_STRING PLOT_Q
Rule 204   PLOT_Q -> COMMA PLOT_P
Rule 205   PLOT_Q -> EMPTY
Rule 206   PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
Rule 207   PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
Rule 208   PRINT_B -> CTE_STRING add_string PRINT_C
Rule 209   PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C
Rule 210   add_temp -> <empty>
Rule 211   add_string -> <empty>
Rule 212   print_quad -> <empty>
Rule 213   print_string -> <empty>
Rule 214   print_id -> <empty>
Rule 215   PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
Rule 216   PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D
Rule 217   PRINT_C -> EMPTY
Rule 218   add_exp -> <empty>
Rule 219   add_con -> <empty>
Rule 220   PRINT_D -> CONCATENATE add_sign PRINT_B
Rule 221   PRINT_D -> EMPTY
Rule 222   add_sign -> <empty>
Rule 223   EXPRESIONESVARIAS -> NOT EV_C
Rule 224   EXPRESIONESVARIAS -> EV_C
Rule 225   quad_not -> <empty>
Rule 226   EV_C -> EXP_RELOP quad_andor EV_B
Rule 227   quad_andor -> <empty>
Rule 228   EV_B -> AND add_ev EV_C
Rule 229   EV_B -> OR add_ev EV_C
Rule 230   EV_B -> EMPTY
Rule 231   add_ev -> <empty>
Rule 232   EXP_RELOP -> EXP EXP_RELOP_A
Rule 233   EXP_RELOP -> EMPTY
Rule 234   EXP_RELOP_A -> RELOP add_relop EXP quad_relop
Rule 235   EXP_RELOP_A -> EMPTY
Rule 236   quad_relop -> <empty>
Rule 237   add_relop -> <empty>
Rule 238   EMPTY -> <empty>

Terminals, with rules where they appear

AND                  : 228
BOOL                 : 39
BOOLEAN              : 
CHAR                 : 40
CLOSE_BRACKET        : 1 21 23 63
CLOSE_PARENTHESIS    : 63 77 79 95 102 108 125 133 158 183 185 195 199 207
CLOSE_SQUARE_BRACKET : 13 16 86 89 147 154 161 166 168 199 199
COLOR_BLACK          : 127
COLOR_BLUE           : 128
COLOR_GREEN          : 130
COLOR_KEYWORD        : 125
COLOR_ORANGE         : 131
COLOR_PURPLE         : 129
COLOR_RED            : 126
COMMA                : 20 59 72 159 183 183 183 188 193 197 201 204
CONCATENATE          : 215 216 220
CREATE               : 
CREATED              : 181
CREATEG              : 177
CREATEGB             : 179
CREATEGBH            : 180
CREATEN              : 184
CREATEPC             : 178
CREATER              : 182
CREATEV              : 183
CTE_CHAR             : 
CTE_FLOAT            : 143 187 192
CTE_INTEGER          : 13 16 142 183 183 183 186 191
CTE_STRING           : 79 93 183 183 196 200 203 208 216
DIVIDE               : 122
ELSE                 : 99
EQUAL                : 92 93
FALSE                : 145
FLOAT                : 38
FOR_KEYWORD          : 102
ID                   : 1 11 49 61 69 79 83 125 146 147 148 163 177 178 179 180 181 182 183 184
IF                   : 95
INPUTSYMBOL          : 163
INPUT_KEYWORD        : 163
INT                  : 37
MAIN                 : 1
MINS                 : 116 135
MODULE               : 49
NAME                 : 80
NAMEX                : 81
NAMEY                : 82
NOT                  : 223
OPEN_BRACKET         : 1 8 23 63
OPEN_PARENTHESIS     : 49 69 79 95 102 108 125 133 148 153 177 178 179 180 181 182 183 184 206
OPEN_SQUARE_BRACKET  : 13 16 86 89 147 154 161 166 168 184 199
OR                   : 229
PLUS                 : 115 134
POINT                : 79 125 177 178 179 180 181 182 183 184
PRINT_KEYWORD        : 206
PROGRAM              : 1
QUOTE                : 
RELOP                : 234
RETURN               : 50
SEMICOLON            : 19 50 77 79 83 102 125 163 183 183 185 190 195 199 199 207
TIMES                : 121
TRUE                 : 144
TYPE_BARCHART        : 43
TYPE_DONUTGRAPH      : 45
TYPE_GRAPH           : 41
TYPE_HORBARCHART     : 44
TYPE_NETWORK         : 46
TYPE_PIECHART        : 42
TYPE_RADARCHART      : 48
TYPE_VENN            : 47
VARS_KEYWORD         : 8
VOID                 : 57
WHILE_KEYWORD        : 108
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 26 102 102
ASIGNACION_A         : 83
ASIGNACION_B         : 86
ASIGNACION_C         : 83
BLOQUE               : 1 63 95 99 102 108
COLOR                : 35
COLOR_A              : 125
CONDICION            : 27
CONDICION_A          : 95
EMPTY                : 7 14 17 25 60 64 66 73 78 87 90 100 117 123 137 155 160 162 167 189 194 198 202 205 217 221 230 233 235
ESTATUTO             : 24
ESTATUTO_A           : 23 24
EV_B                 : 226
EV_C                 : 223 224 228 229
EXP                  : 75 86 89 115 116 147 154 158 161 166 168 232 234
EXPRESIONESVARIAS    : 50 92 95 102 108 140 209 215
EXP_A                : 113
EXP_RELOP            : 226
EXP_RELOP_A          : 232
FACTOR               : 119
FACTOR_A             : 132
FACTOR_B             : 133
FACTOR_C             : 134 135 136
FOR                  : 29
INPUT                : 34
INPUT_A              : 163
INPUT_B              : 166
LLAMADAMODULO        : 33
LLAMADAMODULO_A      : 75
LLAMADAMODULO_C      : 69 72
LLAMADAMODULO_D      : 75
MODULO               : 6
MODULO_A             : 49
MODULO_B             : 61
MODULO_C             : 49 59
MODULO_D             : 61
NOMBRAR              : 28
NOMBRAR_A            : 79
OPVARS               : 63
PDona                : 173
PGBarras             : 171
PGBarrasHor          : 172
PGraph               : 169
PLOT                 : 32
PLOT_B               : 176
PLOT_C               : 177
PLOT_D               : 186 187
PLOT_E               : 178 179 180 181 182
PLOT_F               : 190 193
PLOT_G               : 190
PLOT_H               : 196
PLOT_I               : 185 188
PLOT_J               : 191 192
PLOT_K               : 195 197
PLOT_M               : 184
PLOT_N               : 199 201
PLOT_O               : 200
PLOT_P               : 199 204
PLOT_Q               : 203
PPie                 : 170
PRINT                : 31
PRINT_A              : 206
PRINT_B              : 207 220
PRINT_C              : 208 209
PRINT_D              : 215 216
PROGRAMA             : 0
PROGRAMA_A           : 1 6
PRadar               : 174
PVenn                : 175
RETURNOP             : 36
TERMINO              : 113 121 122
TERMINO_A            : 119
TIPO_P               : 9 58 61
TIPO_S               : 10
VARS                 : 1 65
VARS_A               : 8 22
VARS_B               : 9 10 20
VARS_C               : 11
VARS_CTE             : 141
VARS_CTE_A           : 
VARS_CTE_B           : 148 153 159
VARS_CTE_C           : 158
VARS_CTE_D           : 147 154
VARS_D               : 19
VARS_E               : 11
VARS_F               : 13
WHILE                : 30
activate             : 50
addStackO            : 83
add_SB               : 147 154 161
add_con              : 215
add_count            : 1 63
add_equal            : 92
add_ev               : 228 229
add_exp              : 216
add_functionr        : 49
add_inputid          : 163
add_operator         : 121 122
add_parenthesis      : 133 148
add_relop            : 234
add_s1               : 13
add_s2               : 16
add_sign             : 220
add_start            : 63
add_string           : 208
add_temp             : 209
add_variable         : 11
add_variable_m       : 61
addfunction          : 1
append_bool          : 144 145
append_cte_float     : 143
append_cte_int       : 142
append_id            : 146 147
append_operator      : 115 116
bool_for             : 
bool_while           : 
change_scope         : 49
check_bool           : 
check_types          : 75 158
end_quad             : 1
endproc              : 49
era                  : 69 148
fill_end             : 95
for_gotof            : 102
for_jump             : 102
get_increment        : 102
gosub                : 69 148
gotoElse             : 99
goto_while           : 108
if_gotof             : 95
incK                 : 72 159
param_table          : 63
pop_SB               : 147 154 161
pop_exp              : 113
pop_parenthesis      : 133 148
pop_term             : 119
print_id             : 
print_quad           : 207
print_string         : 
quad                 : 83
quad_andor           : 226
quad_input           : 163
quad_main            : 1
quad_not             : 95
quad_relop           : 234
release_vars         : 49
repeat_for           : 102
return_quad          : 50
ver_arr              : 86 147 154
ver_mat              : 89 161
while_gotof          : 108
while_jump           : 108

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (4) addfunction -> .

    OPEN_BRACKET    reduce using rule 4 (addfunction -> .)

    addfunction                    shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addfunction . OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    OPEN_BRACKET    shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET . VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 6

state 6

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS . add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (3) add_count -> .

    MODULE          reduce using rule 3 (add_count -> .)
    MAIN            reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 8

state 7

    (8) VARS -> VARS_KEYWORD . OPEN_BRACKET VARS_A

    OPEN_BRACKET    shift and go to state 9


state 8

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count . PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (49) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (238) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 238 (EMPTY -> .)

    PROGRAMA_A                     shift and go to state 10
    MODULO                         shift and go to state 11
    EMPTY                          shift and go to state 12

state 9

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR
    (41) TIPO_S -> . TYPE_GRAPH
    (42) TIPO_S -> . TYPE_PIECHART
    (43) TIPO_S -> . TYPE_BARCHART
    (44) TIPO_S -> . TYPE_HORBARCHART
    (45) TIPO_S -> . TYPE_DONUTGRAPH
    (46) TIPO_S -> . TYPE_NETWORK
    (47) TIPO_S -> . TYPE_VENN
    (48) TIPO_S -> . TYPE_RADARCHART

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_A                         shift and go to state 14
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 10

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A . MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    MAIN            shift and go to state 29


state 11

    (6) PROGRAMA_A -> MODULO . PROGRAMA_A
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (49) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (238) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 238 (EMPTY -> .)

    MODULO                         shift and go to state 11
    PROGRAMA_A                     shift and go to state 30
    EMPTY                          shift and go to state 12

state 12

    (7) PROGRAMA_A -> EMPTY .

    MAIN            reduce using rule 7 (PROGRAMA_A -> EMPTY .)


state 13

    (49) MODULO -> MODULE . MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (57) MODULO_A -> . VOID
    (58) MODULO_A -> . TIPO_P
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    VOID            shift and go to state 32
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_A                       shift and go to state 31
    TIPO_P                         shift and go to state 33

state 14

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .

    MODULE          reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    MAIN            reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    OPEN_BRACKET    reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)


state 15

    (9) VARS_A -> TIPO_P . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 34

state 16

    (10) VARS_A -> TIPO_S . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 36

state 17

    (37) TIPO_P -> INT .

    ID              reduce using rule 37 (TIPO_P -> INT .)


state 18

    (38) TIPO_P -> FLOAT .

    ID              reduce using rule 38 (TIPO_P -> FLOAT .)


state 19

    (39) TIPO_P -> BOOL .

    ID              reduce using rule 39 (TIPO_P -> BOOL .)


state 20

    (40) TIPO_P -> CHAR .

    ID              reduce using rule 40 (TIPO_P -> CHAR .)


state 21

    (41) TIPO_S -> TYPE_GRAPH .

    ID              reduce using rule 41 (TIPO_S -> TYPE_GRAPH .)


state 22

    (42) TIPO_S -> TYPE_PIECHART .

    ID              reduce using rule 42 (TIPO_S -> TYPE_PIECHART .)


state 23

    (43) TIPO_S -> TYPE_BARCHART .

    ID              reduce using rule 43 (TIPO_S -> TYPE_BARCHART .)


state 24

    (44) TIPO_S -> TYPE_HORBARCHART .

    ID              reduce using rule 44 (TIPO_S -> TYPE_HORBARCHART .)


state 25

    (45) TIPO_S -> TYPE_DONUTGRAPH .

    ID              reduce using rule 45 (TIPO_S -> TYPE_DONUTGRAPH .)


state 26

    (46) TIPO_S -> TYPE_NETWORK .

    ID              reduce using rule 46 (TIPO_S -> TYPE_NETWORK .)


state 27

    (47) TIPO_S -> TYPE_VENN .

    ID              reduce using rule 47 (TIPO_S -> TYPE_VENN .)


state 28

    (48) TIPO_S -> TYPE_RADARCHART .

    ID              reduce using rule 48 (TIPO_S -> TYPE_RADARCHART .)


state 29

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN . quad_main BLOQUE CLOSE_BRACKET end_quad
    (5) quad_main -> .

    OPEN_BRACKET    reduce using rule 5 (quad_main -> .)

    quad_main                      shift and go to state 37

state 30

    (6) PROGRAMA_A -> MODULO PROGRAMA_A .

    MAIN            reduce using rule 6 (PROGRAMA_A -> MODULO PROGRAMA_A .)


state 31

    (49) MODULO -> MODULE MODULO_A . ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    ID              shift and go to state 38


state 32

    (57) MODULO_A -> VOID .

    ID              reduce using rule 57 (MODULO_A -> VOID .)


state 33

    (58) MODULO_A -> TIPO_P .

    ID              reduce using rule 58 (MODULO_A -> TIPO_P .)


state 34

    (9) VARS_A -> TIPO_P VARS_B .

    MODULE          reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    MAIN            reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    OPEN_BRACKET    reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)


state 35

    (11) VARS_B -> ID . add_variable VARS_E VARS_C
    (12) add_variable -> .

    OPEN_SQUARE_BRACKET reduce using rule 12 (add_variable -> .)
    SEMICOLON       reduce using rule 12 (add_variable -> .)
    COMMA           reduce using rule 12 (add_variable -> .)

    add_variable                   shift and go to state 39

state 36

    (10) VARS_A -> TIPO_S VARS_B .

    MODULE          reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    MAIN            reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    OPEN_BRACKET    reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)


state 37

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main . BLOQUE CLOSE_BRACKET end_quad
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 41

state 38

    (49) MODULO -> MODULE MODULO_A ID . add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (56) add_functionr -> .

    OPEN_PARENTHESIS reduce using rule 56 (add_functionr -> .)

    add_functionr                  shift and go to state 42

state 39

    (11) VARS_B -> ID add_variable . VARS_E VARS_C
    (13) VARS_E -> . OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F
    (14) VARS_E -> . EMPTY
    (238) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 44
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)

    VARS_E                         shift and go to state 43
    EMPTY                          shift and go to state 45

state 40

    (23) BLOQUE -> OPEN_BRACKET . ESTATUTO_A CLOSE_BRACKET
    (24) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (25) ESTATUTO_A -> . EMPTY
    (26) ESTATUTO -> . ASIGNACION
    (27) ESTATUTO -> . CONDICION
    (28) ESTATUTO -> . NOMBRAR
    (29) ESTATUTO -> . FOR
    (30) ESTATUTO -> . WHILE
    (31) ESTATUTO -> . PRINT
    (32) ESTATUTO -> . PLOT
    (33) ESTATUTO -> . LLAMADAMODULO
    (34) ESTATUTO -> . INPUT
    (35) ESTATUTO -> . COLOR
    (36) ESTATUTO -> . RETURNOP
    (238) EMPTY -> .
    (83) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (95) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
    (79) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (102) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (108) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (206) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (169) PLOT -> . PGraph
    (170) PLOT -> . PPie
    (171) PLOT -> . PGBarras
    (172) PLOT -> . PGBarrasHor
    (173) PLOT -> . PDona
    (174) PLOT -> . PRadar
    (175) PLOT -> . PVenn
    (176) PLOT -> . PLOT_B
    (69) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (163) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (125) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (50) RETURNOP -> . RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON
    (177) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (178) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (179) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (180) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (181) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (182) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (183) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (184) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO_A                     shift and go to state 46
    ESTATUTO                       shift and go to state 47
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 41

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE . CLOSE_BRACKET end_quad

    CLOSE_BRACKET   shift and go to state 75


state 42

    (49) MODULO -> MODULE MODULO_A ID add_functionr . OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    OPEN_PARENTHESIS shift and go to state 76


state 43

    (11) VARS_B -> ID add_variable VARS_E . VARS_C
    (19) VARS_C -> . SEMICOLON VARS_D
    (20) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 78
    COMMA           shift and go to state 79

    VARS_C                         shift and go to state 77

state 44

    (13) VARS_E -> OPEN_SQUARE_BRACKET . CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F

    CTE_INTEGER     shift and go to state 80


state 45

    (14) VARS_E -> EMPTY .

    SEMICOLON       reduce using rule 14 (VARS_E -> EMPTY .)
    COMMA           reduce using rule 14 (VARS_E -> EMPTY .)


state 46

    (23) BLOQUE -> OPEN_BRACKET ESTATUTO_A . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 81


state 47

    (24) ESTATUTO_A -> ESTATUTO . ESTATUTO_A
    (24) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (25) ESTATUTO_A -> . EMPTY
    (26) ESTATUTO -> . ASIGNACION
    (27) ESTATUTO -> . CONDICION
    (28) ESTATUTO -> . NOMBRAR
    (29) ESTATUTO -> . FOR
    (30) ESTATUTO -> . WHILE
    (31) ESTATUTO -> . PRINT
    (32) ESTATUTO -> . PLOT
    (33) ESTATUTO -> . LLAMADAMODULO
    (34) ESTATUTO -> . INPUT
    (35) ESTATUTO -> . COLOR
    (36) ESTATUTO -> . RETURNOP
    (238) EMPTY -> .
    (83) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (95) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
    (79) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (102) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (108) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (206) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (169) PLOT -> . PGraph
    (170) PLOT -> . PPie
    (171) PLOT -> . PGBarras
    (172) PLOT -> . PGBarrasHor
    (173) PLOT -> . PDona
    (174) PLOT -> . PRadar
    (175) PLOT -> . PVenn
    (176) PLOT -> . PLOT_B
    (69) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (163) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (125) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (50) RETURNOP -> . RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON
    (177) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (178) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (179) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (180) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (181) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (182) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (183) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (184) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO                       shift and go to state 47
    ESTATUTO_A                     shift and go to state 82
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 48

    (25) ESTATUTO_A -> EMPTY .

    CLOSE_BRACKET   reduce using rule 25 (ESTATUTO_A -> EMPTY .)


state 49

    (26) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    FOR_KEYWORD     reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    WHILE_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    PRINT_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    INPUT_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    CLOSE_BRACKET   reduce using rule 26 (ESTATUTO -> ASIGNACION .)


state 50

    (27) ESTATUTO -> CONDICION .

    ID              reduce using rule 27 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 27 (ESTATUTO -> CONDICION .)
    FOR_KEYWORD     reduce using rule 27 (ESTATUTO -> CONDICION .)
    WHILE_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    PRINT_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    INPUT_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 27 (ESTATUTO -> CONDICION .)
    CLOSE_BRACKET   reduce using rule 27 (ESTATUTO -> CONDICION .)


state 51

    (28) ESTATUTO -> NOMBRAR .

    ID              reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    IF              reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    FOR_KEYWORD     reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    WHILE_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    PRINT_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    INPUT_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    RETURN          reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    CLOSE_BRACKET   reduce using rule 28 (ESTATUTO -> NOMBRAR .)


state 52

    (29) ESTATUTO -> FOR .

    ID              reduce using rule 29 (ESTATUTO -> FOR .)
    IF              reduce using rule 29 (ESTATUTO -> FOR .)
    FOR_KEYWORD     reduce using rule 29 (ESTATUTO -> FOR .)
    WHILE_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    PRINT_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    INPUT_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    RETURN          reduce using rule 29 (ESTATUTO -> FOR .)
    CLOSE_BRACKET   reduce using rule 29 (ESTATUTO -> FOR .)


state 53

    (30) ESTATUTO -> WHILE .

    ID              reduce using rule 30 (ESTATUTO -> WHILE .)
    IF              reduce using rule 30 (ESTATUTO -> WHILE .)
    FOR_KEYWORD     reduce using rule 30 (ESTATUTO -> WHILE .)
    WHILE_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    PRINT_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    INPUT_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    RETURN          reduce using rule 30 (ESTATUTO -> WHILE .)
    CLOSE_BRACKET   reduce using rule 30 (ESTATUTO -> WHILE .)


state 54

    (31) ESTATUTO -> PRINT .

    ID              reduce using rule 31 (ESTATUTO -> PRINT .)
    IF              reduce using rule 31 (ESTATUTO -> PRINT .)
    FOR_KEYWORD     reduce using rule 31 (ESTATUTO -> PRINT .)
    WHILE_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    PRINT_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    INPUT_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    RETURN          reduce using rule 31 (ESTATUTO -> PRINT .)
    CLOSE_BRACKET   reduce using rule 31 (ESTATUTO -> PRINT .)


state 55

    (32) ESTATUTO -> PLOT .

    ID              reduce using rule 32 (ESTATUTO -> PLOT .)
    IF              reduce using rule 32 (ESTATUTO -> PLOT .)
    FOR_KEYWORD     reduce using rule 32 (ESTATUTO -> PLOT .)
    WHILE_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    PRINT_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    INPUT_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    RETURN          reduce using rule 32 (ESTATUTO -> PLOT .)
    CLOSE_BRACKET   reduce using rule 32 (ESTATUTO -> PLOT .)


state 56

    (33) ESTATUTO -> LLAMADAMODULO .

    ID              reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    IF              reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    FOR_KEYWORD     reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    WHILE_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    PRINT_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    INPUT_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    RETURN          reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    CLOSE_BRACKET   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)


state 57

    (34) ESTATUTO -> INPUT .

    ID              reduce using rule 34 (ESTATUTO -> INPUT .)
    IF              reduce using rule 34 (ESTATUTO -> INPUT .)
    FOR_KEYWORD     reduce using rule 34 (ESTATUTO -> INPUT .)
    WHILE_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    PRINT_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    INPUT_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    RETURN          reduce using rule 34 (ESTATUTO -> INPUT .)
    CLOSE_BRACKET   reduce using rule 34 (ESTATUTO -> INPUT .)


state 58

    (35) ESTATUTO -> COLOR .

    ID              reduce using rule 35 (ESTATUTO -> COLOR .)
    IF              reduce using rule 35 (ESTATUTO -> COLOR .)
    FOR_KEYWORD     reduce using rule 35 (ESTATUTO -> COLOR .)
    WHILE_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    PRINT_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    INPUT_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    RETURN          reduce using rule 35 (ESTATUTO -> COLOR .)
    CLOSE_BRACKET   reduce using rule 35 (ESTATUTO -> COLOR .)


state 59

    (36) ESTATUTO -> RETURNOP .

    ID              reduce using rule 36 (ESTATUTO -> RETURNOP .)
    IF              reduce using rule 36 (ESTATUTO -> RETURNOP .)
    FOR_KEYWORD     reduce using rule 36 (ESTATUTO -> RETURNOP .)
    WHILE_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    PRINT_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    INPUT_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    RETURN          reduce using rule 36 (ESTATUTO -> RETURNOP .)
    CLOSE_BRACKET   reduce using rule 36 (ESTATUTO -> RETURNOP .)


state 60

    (83) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (79) NOMBRAR -> ID . POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (69) LLAMADAMODULO -> ID . era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (125) COLOR -> ID . POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (177) PGraph -> ID . POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (178) PPie -> ID . POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (179) PGBarras -> ID . POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (180) PGBarrasHor -> ID . POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (181) PDona -> ID . POINT CREATED OPEN_PARENTHESIS PLOT_E
    (182) PRadar -> ID . POINT CREATER OPEN_PARENTHESIS PLOT_E
    (183) PVenn -> ID . POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (184) PLOT_B -> ID . POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (85) addStackO -> .
    (71) era -> .

    POINT           shift and go to state 84
    OPEN_SQUARE_BRACKET reduce using rule 85 (addStackO -> .)
    EQUAL           reduce using rule 85 (addStackO -> .)
    OPEN_PARENTHESIS reduce using rule 71 (era -> .)

    addStackO                      shift and go to state 83
    era                            shift and go to state 85

state 61

    (95) CONDICION -> IF . OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end

    OPEN_PARENTHESIS shift and go to state 86


state 62

    (102) FOR -> FOR_KEYWORD . OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for

    OPEN_PARENTHESIS shift and go to state 87


state 63

    (108) WHILE -> WHILE_KEYWORD . OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while

    OPEN_PARENTHESIS shift and go to state 88


state 64

    (206) PRINT -> PRINT_KEYWORD . OPEN_PARENTHESIS PRINT_A

    OPEN_PARENTHESIS shift and go to state 89


state 65

    (169) PLOT -> PGraph .

    ID              reduce using rule 169 (PLOT -> PGraph .)
    IF              reduce using rule 169 (PLOT -> PGraph .)
    FOR_KEYWORD     reduce using rule 169 (PLOT -> PGraph .)
    WHILE_KEYWORD   reduce using rule 169 (PLOT -> PGraph .)
    PRINT_KEYWORD   reduce using rule 169 (PLOT -> PGraph .)
    INPUT_KEYWORD   reduce using rule 169 (PLOT -> PGraph .)
    RETURN          reduce using rule 169 (PLOT -> PGraph .)
    CLOSE_BRACKET   reduce using rule 169 (PLOT -> PGraph .)


state 66

    (170) PLOT -> PPie .

    ID              reduce using rule 170 (PLOT -> PPie .)
    IF              reduce using rule 170 (PLOT -> PPie .)
    FOR_KEYWORD     reduce using rule 170 (PLOT -> PPie .)
    WHILE_KEYWORD   reduce using rule 170 (PLOT -> PPie .)
    PRINT_KEYWORD   reduce using rule 170 (PLOT -> PPie .)
    INPUT_KEYWORD   reduce using rule 170 (PLOT -> PPie .)
    RETURN          reduce using rule 170 (PLOT -> PPie .)
    CLOSE_BRACKET   reduce using rule 170 (PLOT -> PPie .)


state 67

    (171) PLOT -> PGBarras .

    ID              reduce using rule 171 (PLOT -> PGBarras .)
    IF              reduce using rule 171 (PLOT -> PGBarras .)
    FOR_KEYWORD     reduce using rule 171 (PLOT -> PGBarras .)
    WHILE_KEYWORD   reduce using rule 171 (PLOT -> PGBarras .)
    PRINT_KEYWORD   reduce using rule 171 (PLOT -> PGBarras .)
    INPUT_KEYWORD   reduce using rule 171 (PLOT -> PGBarras .)
    RETURN          reduce using rule 171 (PLOT -> PGBarras .)
    CLOSE_BRACKET   reduce using rule 171 (PLOT -> PGBarras .)


state 68

    (172) PLOT -> PGBarrasHor .

    ID              reduce using rule 172 (PLOT -> PGBarrasHor .)
    IF              reduce using rule 172 (PLOT -> PGBarrasHor .)
    FOR_KEYWORD     reduce using rule 172 (PLOT -> PGBarrasHor .)
    WHILE_KEYWORD   reduce using rule 172 (PLOT -> PGBarrasHor .)
    PRINT_KEYWORD   reduce using rule 172 (PLOT -> PGBarrasHor .)
    INPUT_KEYWORD   reduce using rule 172 (PLOT -> PGBarrasHor .)
    RETURN          reduce using rule 172 (PLOT -> PGBarrasHor .)
    CLOSE_BRACKET   reduce using rule 172 (PLOT -> PGBarrasHor .)


state 69

    (173) PLOT -> PDona .

    ID              reduce using rule 173 (PLOT -> PDona .)
    IF              reduce using rule 173 (PLOT -> PDona .)
    FOR_KEYWORD     reduce using rule 173 (PLOT -> PDona .)
    WHILE_KEYWORD   reduce using rule 173 (PLOT -> PDona .)
    PRINT_KEYWORD   reduce using rule 173 (PLOT -> PDona .)
    INPUT_KEYWORD   reduce using rule 173 (PLOT -> PDona .)
    RETURN          reduce using rule 173 (PLOT -> PDona .)
    CLOSE_BRACKET   reduce using rule 173 (PLOT -> PDona .)


state 70

    (174) PLOT -> PRadar .

    ID              reduce using rule 174 (PLOT -> PRadar .)
    IF              reduce using rule 174 (PLOT -> PRadar .)
    FOR_KEYWORD     reduce using rule 174 (PLOT -> PRadar .)
    WHILE_KEYWORD   reduce using rule 174 (PLOT -> PRadar .)
    PRINT_KEYWORD   reduce using rule 174 (PLOT -> PRadar .)
    INPUT_KEYWORD   reduce using rule 174 (PLOT -> PRadar .)
    RETURN          reduce using rule 174 (PLOT -> PRadar .)
    CLOSE_BRACKET   reduce using rule 174 (PLOT -> PRadar .)


state 71

    (175) PLOT -> PVenn .

    ID              reduce using rule 175 (PLOT -> PVenn .)
    IF              reduce using rule 175 (PLOT -> PVenn .)
    FOR_KEYWORD     reduce using rule 175 (PLOT -> PVenn .)
    WHILE_KEYWORD   reduce using rule 175 (PLOT -> PVenn .)
    PRINT_KEYWORD   reduce using rule 175 (PLOT -> PVenn .)
    INPUT_KEYWORD   reduce using rule 175 (PLOT -> PVenn .)
    RETURN          reduce using rule 175 (PLOT -> PVenn .)
    CLOSE_BRACKET   reduce using rule 175 (PLOT -> PVenn .)


state 72

    (176) PLOT -> PLOT_B .

    ID              reduce using rule 176 (PLOT -> PLOT_B .)
    IF              reduce using rule 176 (PLOT -> PLOT_B .)
    FOR_KEYWORD     reduce using rule 176 (PLOT -> PLOT_B .)
    WHILE_KEYWORD   reduce using rule 176 (PLOT -> PLOT_B .)
    PRINT_KEYWORD   reduce using rule 176 (PLOT -> PLOT_B .)
    INPUT_KEYWORD   reduce using rule 176 (PLOT -> PLOT_B .)
    RETURN          reduce using rule 176 (PLOT -> PLOT_B .)
    CLOSE_BRACKET   reduce using rule 176 (PLOT -> PLOT_B .)


state 73

    (163) INPUT -> INPUT_KEYWORD . INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input

    INPUTSYMBOL     shift and go to state 90


state 74

    (50) RETURNOP -> RETURN . activate EXPRESIONESVARIAS return_quad SEMICOLON
    (51) activate -> .

    NOT             reduce using rule 51 (activate -> .)
    OPEN_PARENTHESIS reduce using rule 51 (activate -> .)
    PLUS            reduce using rule 51 (activate -> .)
    MINS            reduce using rule 51 (activate -> .)
    CTE_INTEGER     reduce using rule 51 (activate -> .)
    CTE_FLOAT       reduce using rule 51 (activate -> .)
    TRUE            reduce using rule 51 (activate -> .)
    FALSE           reduce using rule 51 (activate -> .)
    ID              reduce using rule 51 (activate -> .)
    SEMICOLON       reduce using rule 51 (activate -> .)
    AND             reduce using rule 51 (activate -> .)
    OR              reduce using rule 51 (activate -> .)
    RELOP           reduce using rule 51 (activate -> .)
    TIMES           reduce using rule 51 (activate -> .)
    DIVIDE          reduce using rule 51 (activate -> .)

    activate                       shift and go to state 91

state 75

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET . end_quad
    (2) end_quad -> .

    $end            reduce using rule 2 (end_quad -> .)

    end_quad                       shift and go to state 92

state 76

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS . MODULO_C release_vars change_scope endproc
    (61) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 93
    TIPO_P                         shift and go to state 94

state 77

    (11) VARS_B -> ID add_variable VARS_E VARS_C .

    MODULE          reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    MAIN            reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    OPEN_BRACKET    reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)


state 78

    (19) VARS_C -> SEMICOLON . VARS_D
    (21) VARS_D -> . CLOSE_BRACKET
    (22) VARS_D -> . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR
    (41) TIPO_S -> . TYPE_GRAPH
    (42) TIPO_S -> . TYPE_PIECHART
    (43) TIPO_S -> . TYPE_BARCHART
    (44) TIPO_S -> . TYPE_HORBARCHART
    (45) TIPO_S -> . TYPE_DONUTGRAPH
    (46) TIPO_S -> . TYPE_NETWORK
    (47) TIPO_S -> . TYPE_VENN
    (48) TIPO_S -> . TYPE_RADARCHART

    CLOSE_BRACKET   shift and go to state 96
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_D                         shift and go to state 95
    VARS_A                         shift and go to state 97
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 79

    (20) VARS_C -> COMMA . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 98

state 80

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER . add_s1 CLOSE_SQUARE_BRACKET VARS_F
    (15) add_s1 -> .

    CLOSE_SQUARE_BRACKET reduce using rule 15 (add_s1 -> .)

    add_s1                         shift and go to state 99

state 81

    (23) BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .

    CLOSE_BRACKET   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ELSE            reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ID              reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    IF              reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    FOR_KEYWORD     reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    RETURN          reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)


state 82

    (24) ESTATUTO_A -> ESTATUTO ESTATUTO_A .

    CLOSE_BRACKET   reduce using rule 24 (ESTATUTO_A -> ESTATUTO ESTATUTO_A .)


state 83

    (83) ASIGNACION -> ID addStackO . ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (86) ASIGNACION_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
    (87) ASIGNACION_A -> . EMPTY
    (238) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 101
    EQUAL           reduce using rule 238 (EMPTY -> .)

    ASIGNACION_A                   shift and go to state 100
    EMPTY                          shift and go to state 102

state 84

    (79) NOMBRAR -> ID POINT . NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (125) COLOR -> ID POINT . COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (177) PGraph -> ID POINT . CREATEG OPEN_PARENTHESIS PLOT_C
    (178) PPie -> ID POINT . CREATEPC OPEN_PARENTHESIS PLOT_E
    (179) PGBarras -> ID POINT . CREATEGB OPEN_PARENTHESIS PLOT_E
    (180) PGBarrasHor -> ID POINT . CREATEGBH OPEN_PARENTHESIS PLOT_E
    (181) PDona -> ID POINT . CREATED OPEN_PARENTHESIS PLOT_E
    (182) PRadar -> ID POINT . CREATER OPEN_PARENTHESIS PLOT_E
    (183) PVenn -> ID POINT . CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (184) PLOT_B -> ID POINT . CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (80) NOMBRAR_A -> . NAME
    (81) NOMBRAR_A -> . NAMEX
    (82) NOMBRAR_A -> . NAMEY

    COLOR_KEYWORD   shift and go to state 104
    CREATEG         shift and go to state 105
    CREATEPC        shift and go to state 106
    CREATEGB        shift and go to state 107
    CREATEGBH       shift and go to state 108
    CREATED         shift and go to state 109
    CREATER         shift and go to state 110
    CREATEV         shift and go to state 111
    CREATEN         shift and go to state 112
    NAME            shift and go to state 113
    NAMEX           shift and go to state 114
    NAMEY           shift and go to state 115

    NOMBRAR_A                      shift and go to state 103

state 85

    (69) LLAMADAMODULO -> ID era . OPEN_PARENTHESIS LLAMADAMODULO_C gosub

    OPEN_PARENTHESIS shift and go to state 116


state 86

    (95) CONDICION -> IF OPEN_PARENTHESIS . EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 118
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 87

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS . ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (83) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 137

    ASIGNACION                     shift and go to state 136

state 88

    (108) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS . while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (110) while_jump -> .

    NOT             reduce using rule 110 (while_jump -> .)
    OPEN_PARENTHESIS reduce using rule 110 (while_jump -> .)
    PLUS            reduce using rule 110 (while_jump -> .)
    MINS            reduce using rule 110 (while_jump -> .)
    CTE_INTEGER     reduce using rule 110 (while_jump -> .)
    CTE_FLOAT       reduce using rule 110 (while_jump -> .)
    TRUE            reduce using rule 110 (while_jump -> .)
    FALSE           reduce using rule 110 (while_jump -> .)
    ID              reduce using rule 110 (while_jump -> .)
    CLOSE_PARENTHESIS reduce using rule 110 (while_jump -> .)
    AND             reduce using rule 110 (while_jump -> .)
    OR              reduce using rule 110 (while_jump -> .)
    RELOP           reduce using rule 110 (while_jump -> .)
    TIMES           reduce using rule 110 (while_jump -> .)
    DIVIDE          reduce using rule 110 (while_jump -> .)

    while_jump                     shift and go to state 138

state 89

    (206) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS . PRINT_A
    (207) PRINT_A -> . PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
    (208) PRINT_B -> . CTE_STRING add_string PRINT_C
    (209) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 141
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    PRINT_A                        shift and go to state 139
    PRINT_B                        shift and go to state 140
    EXPRESIONESVARIAS              shift and go to state 142
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 90

    (163) INPUT -> INPUT_KEYWORD INPUTSYMBOL . ID add_inputid INPUT_A SEMICOLON quad_input

    ID              shift and go to state 143


state 91

    (50) RETURNOP -> RETURN activate . EXPRESIONESVARIAS return_quad SEMICOLON
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 144
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 92

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .)


state 93

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C . release_vars change_scope endproc
    (53) release_vars -> .

    MODULE          reduce using rule 53 (release_vars -> .)
    MAIN            reduce using rule 53 (release_vars -> .)

    release_vars                   shift and go to state 145

state 94

    (61) MODULO_C -> TIPO_P . ID add_variable_m MODULO_B MODULO_D

    ID              shift and go to state 146


state 95

    (19) VARS_C -> SEMICOLON VARS_D .

    MODULE          reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)
    MAIN            reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)
    OPEN_BRACKET    reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)


state 96

    (21) VARS_D -> CLOSE_BRACKET .

    MODULE          reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)
    MAIN            reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)


state 97

    (22) VARS_D -> VARS_A .

    MODULE          reduce using rule 22 (VARS_D -> VARS_A .)
    MAIN            reduce using rule 22 (VARS_D -> VARS_A .)
    OPEN_BRACKET    reduce using rule 22 (VARS_D -> VARS_A .)


state 98

    (20) VARS_C -> COMMA VARS_B .

    MODULE          reduce using rule 20 (VARS_C -> COMMA VARS_B .)
    MAIN            reduce using rule 20 (VARS_C -> COMMA VARS_B .)
    OPEN_BRACKET    reduce using rule 20 (VARS_C -> COMMA VARS_B .)


state 99

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 . CLOSE_SQUARE_BRACKET VARS_F

    CLOSE_SQUARE_BRACKET shift and go to state 147


state 100

    (83) ASIGNACION -> ID addStackO ASIGNACION_A . ASIGNACION_C SEMICOLON quad
    (92) ASIGNACION_C -> . EQUAL add_equal EXPRESIONESVARIAS
    (93) ASIGNACION_C -> . EQUAL CTE_STRING

    EQUAL           shift and go to state 149

    ASIGNACION_C                   shift and go to state 148

state 101

    (86) ASIGNACION_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 150
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 102

    (87) ASIGNACION_A -> EMPTY .

    EQUAL           reduce using rule 87 (ASIGNACION_A -> EMPTY .)


state 103

    (79) NOMBRAR -> ID POINT NOMBRAR_A . OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 152


state 104

    (125) COLOR -> ID POINT COLOR_KEYWORD . OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 153


state 105

    (177) PGraph -> ID POINT CREATEG . OPEN_PARENTHESIS PLOT_C

    OPEN_PARENTHESIS shift and go to state 154


state 106

    (178) PPie -> ID POINT CREATEPC . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 155


state 107

    (179) PGBarras -> ID POINT CREATEGB . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 156


state 108

    (180) PGBarrasHor -> ID POINT CREATEGBH . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 157


state 109

    (181) PDona -> ID POINT CREATED . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 158


state 110

    (182) PRadar -> ID POINT CREATER . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 159


state 111

    (183) PVenn -> ID POINT CREATEV . OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 160


state 112

    (184) PLOT_B -> ID POINT CREATEN . OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    OPEN_PARENTHESIS shift and go to state 161


state 113

    (80) NOMBRAR_A -> NAME .

    OPEN_PARENTHESIS reduce using rule 80 (NOMBRAR_A -> NAME .)


state 114

    (81) NOMBRAR_A -> NAMEX .

    OPEN_PARENTHESIS reduce using rule 81 (NOMBRAR_A -> NAMEX .)


state 115

    (82) NOMBRAR_A -> NAMEY .

    OPEN_PARENTHESIS reduce using rule 82 (NOMBRAR_A -> NAMEY .)


state 116

    (69) LLAMADAMODULO -> ID era OPEN_PARENTHESIS . LLAMADAMODULO_C gosub
    (75) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]
  ! ID              [ reduce using rule 238 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 162
    EXP                            shift and go to state 163
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 117

    (133) FACTOR_A -> OPEN_PARENTHESIS . add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (138) add_parenthesis -> .

    NOT             reduce using rule 138 (add_parenthesis -> .)
    OPEN_PARENTHESIS reduce using rule 138 (add_parenthesis -> .)
    PLUS            reduce using rule 138 (add_parenthesis -> .)
    MINS            reduce using rule 138 (add_parenthesis -> .)
    CTE_INTEGER     reduce using rule 138 (add_parenthesis -> .)
    CTE_FLOAT       reduce using rule 138 (add_parenthesis -> .)
    TRUE            reduce using rule 138 (add_parenthesis -> .)
    FALSE           reduce using rule 138 (add_parenthesis -> .)
    ID              reduce using rule 138 (add_parenthesis -> .)
    CLOSE_PARENTHESIS reduce using rule 138 (add_parenthesis -> .)
    AND             reduce using rule 138 (add_parenthesis -> .)
    OR              reduce using rule 138 (add_parenthesis -> .)
    RELOP           reduce using rule 138 (add_parenthesis -> .)
    TIMES           reduce using rule 138 (add_parenthesis -> .)
    DIVIDE          reduce using rule 138 (add_parenthesis -> .)

    add_parenthesis                shift and go to state 164

state 118

    (95) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS . quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
    (225) quad_not -> .

    CLOSE_PARENTHESIS reduce using rule 225 (quad_not -> .)

    quad_not                       shift and go to state 165

state 119

    (223) EXPRESIONESVARIAS -> NOT . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EV_C                           shift and go to state 166
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 120

    (224) EXPRESIONESVARIAS -> EV_C .

    CLOSE_PARENTHESIS reduce using rule 224 (EXPRESIONESVARIAS -> EV_C .)
    CONCATENATE     reduce using rule 224 (EXPRESIONESVARIAS -> EV_C .)
    SEMICOLON       reduce using rule 224 (EXPRESIONESVARIAS -> EV_C .)


state 121

    (226) EV_C -> EXP_RELOP . quad_andor EV_B
    (227) quad_andor -> .

    AND             reduce using rule 227 (quad_andor -> .)
    OR              reduce using rule 227 (quad_andor -> .)
    CLOSE_PARENTHESIS reduce using rule 227 (quad_andor -> .)
    CONCATENATE     reduce using rule 227 (quad_andor -> .)
    SEMICOLON       reduce using rule 227 (quad_andor -> .)

    quad_andor                     shift and go to state 167

state 122

    (232) EXP_RELOP -> EXP . EXP_RELOP_A
    (234) EXP_RELOP_A -> . RELOP add_relop EXP quad_relop
    (235) EXP_RELOP_A -> . EMPTY
    (238) EMPTY -> .

    RELOP           shift and go to state 169
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)

    EXP_RELOP_A                    shift and go to state 168
    EMPTY                          shift and go to state 170

state 123

    (233) EXP_RELOP -> EMPTY .
    (137) FACTOR_A -> EMPTY .

  ! reduce/reduce conflict for AND resolved using rule 137 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OR resolved using rule 137 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 137 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 137 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 137 (FACTOR_A -> EMPTY .)
    TIMES           reduce using rule 137 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 137 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 137 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 137 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 137 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 137 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 137 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 137 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 137 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 137 (FACTOR_A -> EMPTY .)

  ! AND             [ reduce using rule 233 (EXP_RELOP -> EMPTY .) ]
  ! OR              [ reduce using rule 233 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 233 (EXP_RELOP -> EMPTY .) ]
  ! CONCATENATE     [ reduce using rule 233 (EXP_RELOP -> EMPTY .) ]
  ! SEMICOLON       [ reduce using rule 233 (EXP_RELOP -> EMPTY .) ]


state 124

    (113) EXP -> TERMINO . pop_exp EXP_A
    (114) pop_exp -> .

    PLUS            reduce using rule 114 (pop_exp -> .)
    MINS            reduce using rule 114 (pop_exp -> .)
    RELOP           reduce using rule 114 (pop_exp -> .)
    AND             reduce using rule 114 (pop_exp -> .)
    OR              reduce using rule 114 (pop_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 114 (pop_exp -> .)
    CONCATENATE     reduce using rule 114 (pop_exp -> .)
    SEMICOLON       reduce using rule 114 (pop_exp -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 114 (pop_exp -> .)
    COMMA           reduce using rule 114 (pop_exp -> .)
    ID              reduce using rule 114 (pop_exp -> .)
    IF              reduce using rule 114 (pop_exp -> .)
    FOR_KEYWORD     reduce using rule 114 (pop_exp -> .)
    WHILE_KEYWORD   reduce using rule 114 (pop_exp -> .)
    PRINT_KEYWORD   reduce using rule 114 (pop_exp -> .)
    INPUT_KEYWORD   reduce using rule 114 (pop_exp -> .)
    RETURN          reduce using rule 114 (pop_exp -> .)
    CLOSE_BRACKET   reduce using rule 114 (pop_exp -> .)

    pop_exp                        shift and go to state 171

state 125

    (119) TERMINO -> FACTOR . pop_term TERMINO_A
    (120) pop_term -> .

    TIMES           reduce using rule 120 (pop_term -> .)
    DIVIDE          reduce using rule 120 (pop_term -> .)
    PLUS            reduce using rule 120 (pop_term -> .)
    MINS            reduce using rule 120 (pop_term -> .)
    RELOP           reduce using rule 120 (pop_term -> .)
    AND             reduce using rule 120 (pop_term -> .)
    OR              reduce using rule 120 (pop_term -> .)
    CLOSE_PARENTHESIS reduce using rule 120 (pop_term -> .)
    CONCATENATE     reduce using rule 120 (pop_term -> .)
    SEMICOLON       reduce using rule 120 (pop_term -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 120 (pop_term -> .)
    COMMA           reduce using rule 120 (pop_term -> .)
    ID              reduce using rule 120 (pop_term -> .)
    IF              reduce using rule 120 (pop_term -> .)
    FOR_KEYWORD     reduce using rule 120 (pop_term -> .)
    WHILE_KEYWORD   reduce using rule 120 (pop_term -> .)
    PRINT_KEYWORD   reduce using rule 120 (pop_term -> .)
    INPUT_KEYWORD   reduce using rule 120 (pop_term -> .)
    RETURN          reduce using rule 120 (pop_term -> .)
    CLOSE_BRACKET   reduce using rule 120 (pop_term -> .)

    pop_term                       shift and go to state 172

state 126

    (132) FACTOR -> FACTOR_A .

    TIMES           reduce using rule 132 (FACTOR -> FACTOR_A .)
    DIVIDE          reduce using rule 132 (FACTOR -> FACTOR_A .)
    PLUS            reduce using rule 132 (FACTOR -> FACTOR_A .)
    MINS            reduce using rule 132 (FACTOR -> FACTOR_A .)
    RELOP           reduce using rule 132 (FACTOR -> FACTOR_A .)
    AND             reduce using rule 132 (FACTOR -> FACTOR_A .)
    OR              reduce using rule 132 (FACTOR -> FACTOR_A .)
    CLOSE_PARENTHESIS reduce using rule 132 (FACTOR -> FACTOR_A .)
    CONCATENATE     reduce using rule 132 (FACTOR -> FACTOR_A .)
    SEMICOLON       reduce using rule 132 (FACTOR -> FACTOR_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 132 (FACTOR -> FACTOR_A .)
    COMMA           reduce using rule 132 (FACTOR -> FACTOR_A .)
    ID              reduce using rule 132 (FACTOR -> FACTOR_A .)
    IF              reduce using rule 132 (FACTOR -> FACTOR_A .)
    FOR_KEYWORD     reduce using rule 132 (FACTOR -> FACTOR_A .)
    WHILE_KEYWORD   reduce using rule 132 (FACTOR -> FACTOR_A .)
    PRINT_KEYWORD   reduce using rule 132 (FACTOR -> FACTOR_A .)
    INPUT_KEYWORD   reduce using rule 132 (FACTOR -> FACTOR_A .)
    RETURN          reduce using rule 132 (FACTOR -> FACTOR_A .)
    CLOSE_BRACKET   reduce using rule 132 (FACTOR -> FACTOR_A .)


state 127

    (134) FACTOR_A -> PLUS . FACTOR_C
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

    FACTOR_C                       shift and go to state 173
    VARS_CTE                       shift and go to state 130

state 128

    (136) FACTOR_A -> FACTOR_C .

    TIMES           reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    DIVIDE          reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    PLUS            reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    MINS            reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    RELOP           reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    AND             reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    OR              reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    CONCATENATE     reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    SEMICOLON       reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    COMMA           reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    ID              reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    IF              reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    FOR_KEYWORD     reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    RETURN          reduce using rule 136 (FACTOR_A -> FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 136 (FACTOR_A -> FACTOR_C .)


state 129

    (135) FACTOR_A -> MINS . FACTOR_C
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

    FACTOR_C                       shift and go to state 174
    VARS_CTE                       shift and go to state 130

state 130

    (141) FACTOR_C -> VARS_CTE .

    TIMES           reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    DIVIDE          reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    PLUS            reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    MINS            reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    RELOP           reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    AND             reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    OR              reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    CLOSE_PARENTHESIS reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    CONCATENATE     reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    SEMICOLON       reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    CLOSE_SQUARE_BRACKET reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    COMMA           reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    ID              reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    IF              reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    FOR_KEYWORD     reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    WHILE_KEYWORD   reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    PRINT_KEYWORD   reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    INPUT_KEYWORD   reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    RETURN          reduce using rule 141 (FACTOR_C -> VARS_CTE .)
    CLOSE_BRACKET   reduce using rule 141 (FACTOR_C -> VARS_CTE .)


state 131

    (142) VARS_CTE -> CTE_INTEGER . append_cte_int
    (150) append_cte_int -> .

    TIMES           reduce using rule 150 (append_cte_int -> .)
    DIVIDE          reduce using rule 150 (append_cte_int -> .)
    PLUS            reduce using rule 150 (append_cte_int -> .)
    MINS            reduce using rule 150 (append_cte_int -> .)
    RELOP           reduce using rule 150 (append_cte_int -> .)
    AND             reduce using rule 150 (append_cte_int -> .)
    OR              reduce using rule 150 (append_cte_int -> .)
    CLOSE_PARENTHESIS reduce using rule 150 (append_cte_int -> .)
    CONCATENATE     reduce using rule 150 (append_cte_int -> .)
    SEMICOLON       reduce using rule 150 (append_cte_int -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 150 (append_cte_int -> .)
    COMMA           reduce using rule 150 (append_cte_int -> .)
    ID              reduce using rule 150 (append_cte_int -> .)
    IF              reduce using rule 150 (append_cte_int -> .)
    FOR_KEYWORD     reduce using rule 150 (append_cte_int -> .)
    WHILE_KEYWORD   reduce using rule 150 (append_cte_int -> .)
    PRINT_KEYWORD   reduce using rule 150 (append_cte_int -> .)
    INPUT_KEYWORD   reduce using rule 150 (append_cte_int -> .)
    RETURN          reduce using rule 150 (append_cte_int -> .)
    CLOSE_BRACKET   reduce using rule 150 (append_cte_int -> .)

    append_cte_int                 shift and go to state 175

state 132

    (143) VARS_CTE -> CTE_FLOAT . append_cte_float
    (151) append_cte_float -> .

    TIMES           reduce using rule 151 (append_cte_float -> .)
    DIVIDE          reduce using rule 151 (append_cte_float -> .)
    PLUS            reduce using rule 151 (append_cte_float -> .)
    MINS            reduce using rule 151 (append_cte_float -> .)
    RELOP           reduce using rule 151 (append_cte_float -> .)
    AND             reduce using rule 151 (append_cte_float -> .)
    OR              reduce using rule 151 (append_cte_float -> .)
    CLOSE_PARENTHESIS reduce using rule 151 (append_cte_float -> .)
    CONCATENATE     reduce using rule 151 (append_cte_float -> .)
    SEMICOLON       reduce using rule 151 (append_cte_float -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 151 (append_cte_float -> .)
    COMMA           reduce using rule 151 (append_cte_float -> .)
    ID              reduce using rule 151 (append_cte_float -> .)
    IF              reduce using rule 151 (append_cte_float -> .)
    FOR_KEYWORD     reduce using rule 151 (append_cte_float -> .)
    WHILE_KEYWORD   reduce using rule 151 (append_cte_float -> .)
    PRINT_KEYWORD   reduce using rule 151 (append_cte_float -> .)
    INPUT_KEYWORD   reduce using rule 151 (append_cte_float -> .)
    RETURN          reduce using rule 151 (append_cte_float -> .)
    CLOSE_BRACKET   reduce using rule 151 (append_cte_float -> .)

    append_cte_float               shift and go to state 176

state 133

    (144) VARS_CTE -> TRUE . append_bool
    (152) append_bool -> .

    TIMES           reduce using rule 152 (append_bool -> .)
    DIVIDE          reduce using rule 152 (append_bool -> .)
    PLUS            reduce using rule 152 (append_bool -> .)
    MINS            reduce using rule 152 (append_bool -> .)
    RELOP           reduce using rule 152 (append_bool -> .)
    AND             reduce using rule 152 (append_bool -> .)
    OR              reduce using rule 152 (append_bool -> .)
    CLOSE_PARENTHESIS reduce using rule 152 (append_bool -> .)
    CONCATENATE     reduce using rule 152 (append_bool -> .)
    SEMICOLON       reduce using rule 152 (append_bool -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 152 (append_bool -> .)
    COMMA           reduce using rule 152 (append_bool -> .)
    ID              reduce using rule 152 (append_bool -> .)
    IF              reduce using rule 152 (append_bool -> .)
    FOR_KEYWORD     reduce using rule 152 (append_bool -> .)
    WHILE_KEYWORD   reduce using rule 152 (append_bool -> .)
    PRINT_KEYWORD   reduce using rule 152 (append_bool -> .)
    INPUT_KEYWORD   reduce using rule 152 (append_bool -> .)
    RETURN          reduce using rule 152 (append_bool -> .)
    CLOSE_BRACKET   reduce using rule 152 (append_bool -> .)

    append_bool                    shift and go to state 177

state 134

    (145) VARS_CTE -> FALSE . append_bool
    (152) append_bool -> .

    TIMES           reduce using rule 152 (append_bool -> .)
    DIVIDE          reduce using rule 152 (append_bool -> .)
    PLUS            reduce using rule 152 (append_bool -> .)
    MINS            reduce using rule 152 (append_bool -> .)
    RELOP           reduce using rule 152 (append_bool -> .)
    AND             reduce using rule 152 (append_bool -> .)
    OR              reduce using rule 152 (append_bool -> .)
    CLOSE_PARENTHESIS reduce using rule 152 (append_bool -> .)
    CONCATENATE     reduce using rule 152 (append_bool -> .)
    SEMICOLON       reduce using rule 152 (append_bool -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 152 (append_bool -> .)
    COMMA           reduce using rule 152 (append_bool -> .)
    ID              reduce using rule 152 (append_bool -> .)
    IF              reduce using rule 152 (append_bool -> .)
    FOR_KEYWORD     reduce using rule 152 (append_bool -> .)
    WHILE_KEYWORD   reduce using rule 152 (append_bool -> .)
    PRINT_KEYWORD   reduce using rule 152 (append_bool -> .)
    INPUT_KEYWORD   reduce using rule 152 (append_bool -> .)
    RETURN          reduce using rule 152 (append_bool -> .)
    CLOSE_BRACKET   reduce using rule 152 (append_bool -> .)

    append_bool                    shift and go to state 178

state 135

    (146) VARS_CTE -> ID . append_id
    (147) VARS_CTE -> ID . append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> ID . era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub
    (149) append_id -> .
    (71) era -> .

    OPEN_SQUARE_BRACKET reduce using rule 149 (append_id -> .)
    TIMES           reduce using rule 149 (append_id -> .)
    DIVIDE          reduce using rule 149 (append_id -> .)
    PLUS            reduce using rule 149 (append_id -> .)
    MINS            reduce using rule 149 (append_id -> .)
    RELOP           reduce using rule 149 (append_id -> .)
    AND             reduce using rule 149 (append_id -> .)
    OR              reduce using rule 149 (append_id -> .)
    CLOSE_PARENTHESIS reduce using rule 149 (append_id -> .)
    CONCATENATE     reduce using rule 149 (append_id -> .)
    SEMICOLON       reduce using rule 149 (append_id -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 149 (append_id -> .)
    COMMA           reduce using rule 149 (append_id -> .)
    ID              reduce using rule 149 (append_id -> .)
    IF              reduce using rule 149 (append_id -> .)
    FOR_KEYWORD     reduce using rule 149 (append_id -> .)
    WHILE_KEYWORD   reduce using rule 149 (append_id -> .)
    PRINT_KEYWORD   reduce using rule 149 (append_id -> .)
    INPUT_KEYWORD   reduce using rule 149 (append_id -> .)
    RETURN          reduce using rule 149 (append_id -> .)
    CLOSE_BRACKET   reduce using rule 149 (append_id -> .)
    OPEN_PARENTHESIS reduce using rule 71 (era -> .)

    append_id                      shift and go to state 179
    era                            shift and go to state 180

state 136

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION . for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (104) for_jump -> .

    NOT             reduce using rule 104 (for_jump -> .)
    OPEN_PARENTHESIS reduce using rule 104 (for_jump -> .)
    PLUS            reduce using rule 104 (for_jump -> .)
    MINS            reduce using rule 104 (for_jump -> .)
    CTE_INTEGER     reduce using rule 104 (for_jump -> .)
    CTE_FLOAT       reduce using rule 104 (for_jump -> .)
    TRUE            reduce using rule 104 (for_jump -> .)
    FALSE           reduce using rule 104 (for_jump -> .)
    ID              reduce using rule 104 (for_jump -> .)
    SEMICOLON       reduce using rule 104 (for_jump -> .)
    AND             reduce using rule 104 (for_jump -> .)
    OR              reduce using rule 104 (for_jump -> .)
    RELOP           reduce using rule 104 (for_jump -> .)
    TIMES           reduce using rule 104 (for_jump -> .)
    DIVIDE          reduce using rule 104 (for_jump -> .)

    for_jump                       shift and go to state 181

state 137

    (83) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (85) addStackO -> .

    OPEN_SQUARE_BRACKET reduce using rule 85 (addStackO -> .)
    EQUAL           reduce using rule 85 (addStackO -> .)

    addStackO                      shift and go to state 83

state 138

    (108) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump . EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 182
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 139

    (206) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .

    ID              reduce using rule 206 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    IF              reduce using rule 206 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    FOR_KEYWORD     reduce using rule 206 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    WHILE_KEYWORD   reduce using rule 206 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    PRINT_KEYWORD   reduce using rule 206 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    INPUT_KEYWORD   reduce using rule 206 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    RETURN          reduce using rule 206 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    CLOSE_BRACKET   reduce using rule 206 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)


state 140

    (207) PRINT_A -> PRINT_B . CLOSE_PARENTHESIS print_quad SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 183


state 141

    (208) PRINT_B -> CTE_STRING . add_string PRINT_C
    (211) add_string -> .

    CONCATENATE     reduce using rule 211 (add_string -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (add_string -> .)

    add_string                     shift and go to state 184

state 142

    (209) PRINT_B -> EXPRESIONESVARIAS . add_temp PRINT_C
    (210) add_temp -> .

    CONCATENATE     reduce using rule 210 (add_temp -> .)
    CLOSE_PARENTHESIS reduce using rule 210 (add_temp -> .)

    add_temp                       shift and go to state 185

state 143

    (163) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID . add_inputid INPUT_A SEMICOLON quad_input
    (164) add_inputid -> .

    OPEN_SQUARE_BRACKET reduce using rule 164 (add_inputid -> .)
    SEMICOLON       reduce using rule 164 (add_inputid -> .)

    add_inputid                    shift and go to state 186

state 144

    (50) RETURNOP -> RETURN activate EXPRESIONESVARIAS . return_quad SEMICOLON
    (52) return_quad -> .

    SEMICOLON       reduce using rule 52 (return_quad -> .)

    return_quad                    shift and go to state 187

state 145

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars . change_scope endproc
    (55) change_scope -> .

    MODULE          reduce using rule 55 (change_scope -> .)
    MAIN            reduce using rule 55 (change_scope -> .)

    change_scope                   shift and go to state 188

state 146

    (61) MODULO_C -> TIPO_P ID . add_variable_m MODULO_B MODULO_D
    (62) add_variable_m -> .

    COMMA           reduce using rule 62 (add_variable_m -> .)
    CLOSE_PARENTHESIS reduce using rule 62 (add_variable_m -> .)
    MODULE          reduce using rule 62 (add_variable_m -> .)
    MAIN            reduce using rule 62 (add_variable_m -> .)

    add_variable_m                 shift and go to state 189

state 147

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET . VARS_F
    (16) VARS_F -> . OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET
    (17) VARS_F -> . EMPTY
    (238) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 190
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)

    VARS_F                         shift and go to state 191
    EMPTY                          shift and go to state 192

state 148

    (83) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C . SEMICOLON quad

    SEMICOLON       shift and go to state 193


state 149

    (92) ASIGNACION_C -> EQUAL . add_equal EXPRESIONESVARIAS
    (93) ASIGNACION_C -> EQUAL . CTE_STRING
    (94) add_equal -> .

    CTE_STRING      shift and go to state 195
    NOT             reduce using rule 94 (add_equal -> .)
    OPEN_PARENTHESIS reduce using rule 94 (add_equal -> .)
    PLUS            reduce using rule 94 (add_equal -> .)
    MINS            reduce using rule 94 (add_equal -> .)
    CTE_INTEGER     reduce using rule 94 (add_equal -> .)
    CTE_FLOAT       reduce using rule 94 (add_equal -> .)
    TRUE            reduce using rule 94 (add_equal -> .)
    FALSE           reduce using rule 94 (add_equal -> .)
    ID              reduce using rule 94 (add_equal -> .)
    AND             reduce using rule 94 (add_equal -> .)
    OR              reduce using rule 94 (add_equal -> .)
    RELOP           reduce using rule 94 (add_equal -> .)
    TIMES           reduce using rule 94 (add_equal -> .)
    DIVIDE          reduce using rule 94 (add_equal -> .)
    SEMICOLON       reduce using rule 94 (add_equal -> .)

    add_equal                      shift and go to state 194

state 150

    (86) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B

    CLOSE_SQUARE_BRACKET shift and go to state 196


state 151

    (137) FACTOR_A -> EMPTY .

    TIMES           reduce using rule 137 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 137 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 137 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 137 (FACTOR_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 137 (FACTOR_A -> EMPTY .)
    COMMA           reduce using rule 137 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 137 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 137 (FACTOR_A -> EMPTY .)
    IF              reduce using rule 137 (FACTOR_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 137 (FACTOR_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 137 (FACTOR_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 137 (FACTOR_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 137 (FACTOR_A -> EMPTY .)
    RETURN          reduce using rule 137 (FACTOR_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 137 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 137 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 137 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 137 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 137 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 137 (FACTOR_A -> EMPTY .)


state 152

    (79) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 197


state 153

    (125) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS . COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (126) COLOR_A -> . COLOR_RED
    (127) COLOR_A -> . COLOR_BLACK
    (128) COLOR_A -> . COLOR_BLUE
    (129) COLOR_A -> . COLOR_PURPLE
    (130) COLOR_A -> . COLOR_GREEN
    (131) COLOR_A -> . COLOR_ORANGE

    COLOR_RED       shift and go to state 199
    COLOR_BLACK     shift and go to state 200
    COLOR_BLUE      shift and go to state 201
    COLOR_PURPLE    shift and go to state 202
    COLOR_GREEN     shift and go to state 203
    COLOR_ORANGE    shift and go to state 204

    COLOR_A                        shift and go to state 198

state 154

    (177) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS . PLOT_C
    (185) PLOT_C -> . PLOT_I CLOSE_PARENTHESIS SEMICOLON
    (186) PLOT_I -> . CTE_INTEGER PLOT_D
    (187) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 207
    CTE_FLOAT       shift and go to state 208

    PLOT_C                         shift and go to state 205
    PLOT_I                         shift and go to state 206

state 155

    (178) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS . PLOT_E
    (190) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (191) PLOT_F -> . CTE_INTEGER PLOT_J
    (192) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 211
    CTE_FLOAT       shift and go to state 212

    PLOT_E                         shift and go to state 209
    PLOT_F                         shift and go to state 210

state 156

    (179) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS . PLOT_E
    (190) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (191) PLOT_F -> . CTE_INTEGER PLOT_J
    (192) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 211
    CTE_FLOAT       shift and go to state 212

    PLOT_E                         shift and go to state 213
    PLOT_F                         shift and go to state 210

state 157

    (180) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS . PLOT_E
    (190) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (191) PLOT_F -> . CTE_INTEGER PLOT_J
    (192) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 211
    CTE_FLOAT       shift and go to state 212

    PLOT_E                         shift and go to state 214
    PLOT_F                         shift and go to state 210

state 158

    (181) PDona -> ID POINT CREATED OPEN_PARENTHESIS . PLOT_E
    (190) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (191) PLOT_F -> . CTE_INTEGER PLOT_J
    (192) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 211
    CTE_FLOAT       shift and go to state 212

    PLOT_E                         shift and go to state 215
    PLOT_F                         shift and go to state 210

state 159

    (182) PRadar -> ID POINT CREATER OPEN_PARENTHESIS . PLOT_E
    (190) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (191) PLOT_F -> . CTE_INTEGER PLOT_J
    (192) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 211
    CTE_FLOAT       shift and go to state 212

    PLOT_E                         shift and go to state 216
    PLOT_F                         shift and go to state 210

state 160

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS . CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 217


state 161

    (184) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS . OPEN_SQUARE_BRACKET PLOT_M

    OPEN_SQUARE_BRACKET shift and go to state 218


state 162

    (69) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C . gosub
    (70) gosub -> .

    ID              reduce using rule 70 (gosub -> .)
    IF              reduce using rule 70 (gosub -> .)
    FOR_KEYWORD     reduce using rule 70 (gosub -> .)
    WHILE_KEYWORD   reduce using rule 70 (gosub -> .)
    PRINT_KEYWORD   reduce using rule 70 (gosub -> .)
    INPUT_KEYWORD   reduce using rule 70 (gosub -> .)
    RETURN          reduce using rule 70 (gosub -> .)
    CLOSE_BRACKET   reduce using rule 70 (gosub -> .)

    gosub                          shift and go to state 219

state 163

    (75) LLAMADAMODULO_C -> EXP . check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (76) check_types -> .

    COMMA           reduce using rule 76 (check_types -> .)
    CLOSE_PARENTHESIS reduce using rule 76 (check_types -> .)
    ID              reduce using rule 76 (check_types -> .)
    IF              reduce using rule 76 (check_types -> .)
    FOR_KEYWORD     reduce using rule 76 (check_types -> .)
    WHILE_KEYWORD   reduce using rule 76 (check_types -> .)
    PRINT_KEYWORD   reduce using rule 76 (check_types -> .)
    INPUT_KEYWORD   reduce using rule 76 (check_types -> .)
    RETURN          reduce using rule 76 (check_types -> .)
    CLOSE_BRACKET   reduce using rule 76 (check_types -> .)

    check_types                    shift and go to state 220

state 164

    (133) FACTOR_A -> OPEN_PARENTHESIS add_parenthesis . FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (140) FACTOR_B -> . EXPRESIONESVARIAS
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    FACTOR_B                       shift and go to state 221
    EXPRESIONESVARIAS              shift and go to state 222
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 165

    (95) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not . CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end

    CLOSE_PARENTHESIS shift and go to state 223


state 166

    (223) EXPRESIONESVARIAS -> NOT EV_C .

    CLOSE_PARENTHESIS reduce using rule 223 (EXPRESIONESVARIAS -> NOT EV_C .)
    CONCATENATE     reduce using rule 223 (EXPRESIONESVARIAS -> NOT EV_C .)
    SEMICOLON       reduce using rule 223 (EXPRESIONESVARIAS -> NOT EV_C .)


state 167

    (226) EV_C -> EXP_RELOP quad_andor . EV_B
    (228) EV_B -> . AND add_ev EV_C
    (229) EV_B -> . OR add_ev EV_C
    (230) EV_B -> . EMPTY
    (238) EMPTY -> .

    AND             shift and go to state 225
    OR              shift and go to state 226
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)

    EV_B                           shift and go to state 224
    EMPTY                          shift and go to state 227

state 168

    (232) EXP_RELOP -> EXP EXP_RELOP_A .

    AND             reduce using rule 232 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OR              reduce using rule 232 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_PARENTHESIS reduce using rule 232 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CONCATENATE     reduce using rule 232 (EXP_RELOP -> EXP EXP_RELOP_A .)
    SEMICOLON       reduce using rule 232 (EXP_RELOP -> EXP EXP_RELOP_A .)


state 169

    (234) EXP_RELOP_A -> RELOP . add_relop EXP quad_relop
    (237) add_relop -> .

    OPEN_PARENTHESIS reduce using rule 237 (add_relop -> .)
    PLUS            reduce using rule 237 (add_relop -> .)
    MINS            reduce using rule 237 (add_relop -> .)
    CTE_INTEGER     reduce using rule 237 (add_relop -> .)
    CTE_FLOAT       reduce using rule 237 (add_relop -> .)
    TRUE            reduce using rule 237 (add_relop -> .)
    FALSE           reduce using rule 237 (add_relop -> .)
    ID              reduce using rule 237 (add_relop -> .)
    TIMES           reduce using rule 237 (add_relop -> .)
    DIVIDE          reduce using rule 237 (add_relop -> .)
    AND             reduce using rule 237 (add_relop -> .)
    OR              reduce using rule 237 (add_relop -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (add_relop -> .)
    CONCATENATE     reduce using rule 237 (add_relop -> .)
    SEMICOLON       reduce using rule 237 (add_relop -> .)

    add_relop                      shift and go to state 228

state 170

    (235) EXP_RELOP_A -> EMPTY .

    AND             reduce using rule 235 (EXP_RELOP_A -> EMPTY .)
    OR              reduce using rule 235 (EXP_RELOP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 235 (EXP_RELOP_A -> EMPTY .)
    CONCATENATE     reduce using rule 235 (EXP_RELOP_A -> EMPTY .)
    SEMICOLON       reduce using rule 235 (EXP_RELOP_A -> EMPTY .)


state 171

    (113) EXP -> TERMINO pop_exp . EXP_A
    (115) EXP_A -> . PLUS append_operator EXP
    (116) EXP_A -> . MINS append_operator EXP
    (117) EXP_A -> . EMPTY
    (238) EMPTY -> .

    PLUS            shift and go to state 230
    MINS            shift and go to state 231
    RELOP           reduce using rule 238 (EMPTY -> .)
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    ID              reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)

    EXP_A                          shift and go to state 229
    EMPTY                          shift and go to state 232

state 172

    (119) TERMINO -> FACTOR pop_term . TERMINO_A
    (121) TERMINO_A -> . TIMES add_operator TERMINO
    (122) TERMINO_A -> . DIVIDE add_operator TERMINO
    (123) TERMINO_A -> . EMPTY
    (238) EMPTY -> .

    TIMES           shift and go to state 234
    DIVIDE          shift and go to state 235
    PLUS            reduce using rule 238 (EMPTY -> .)
    MINS            reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    ID              reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)

    TERMINO_A                      shift and go to state 233
    EMPTY                          shift and go to state 236

state 173

    (134) FACTOR_A -> PLUS FACTOR_C .

    TIMES           reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    DIVIDE          reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    PLUS            reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    MINS            reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    RELOP           reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    AND             reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    OR              reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    CONCATENATE     reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    SEMICOLON       reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    COMMA           reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    ID              reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    IF              reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    RETURN          reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 134 (FACTOR_A -> PLUS FACTOR_C .)


state 174

    (135) FACTOR_A -> MINS FACTOR_C .

    TIMES           reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    DIVIDE          reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    PLUS            reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    MINS            reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    RELOP           reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    AND             reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    OR              reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    CONCATENATE     reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    SEMICOLON       reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    COMMA           reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    ID              reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    IF              reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    RETURN          reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 135 (FACTOR_A -> MINS FACTOR_C .)


state 175

    (142) VARS_CTE -> CTE_INTEGER append_cte_int .

    TIMES           reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    DIVIDE          reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    PLUS            reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    MINS            reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    RELOP           reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    AND             reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    OR              reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_PARENTHESIS reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CONCATENATE     reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    SEMICOLON       reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_SQUARE_BRACKET reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    COMMA           reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    ID              reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    IF              reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    FOR_KEYWORD     reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    WHILE_KEYWORD   reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    PRINT_KEYWORD   reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    INPUT_KEYWORD   reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    RETURN          reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_BRACKET   reduce using rule 142 (VARS_CTE -> CTE_INTEGER append_cte_int .)


state 176

    (143) VARS_CTE -> CTE_FLOAT append_cte_float .

    TIMES           reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    DIVIDE          reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    PLUS            reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    MINS            reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    RELOP           reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    AND             reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    OR              reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_PARENTHESIS reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CONCATENATE     reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    SEMICOLON       reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_SQUARE_BRACKET reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    COMMA           reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    ID              reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    IF              reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    FOR_KEYWORD     reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    WHILE_KEYWORD   reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    PRINT_KEYWORD   reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    INPUT_KEYWORD   reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    RETURN          reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_BRACKET   reduce using rule 143 (VARS_CTE -> CTE_FLOAT append_cte_float .)


state 177

    (144) VARS_CTE -> TRUE append_bool .

    TIMES           reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    DIVIDE          reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    PLUS            reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    MINS            reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    RELOP           reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    AND             reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    OR              reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    CLOSE_PARENTHESIS reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    CONCATENATE     reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    SEMICOLON       reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    CLOSE_SQUARE_BRACKET reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    COMMA           reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    ID              reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    IF              reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    FOR_KEYWORD     reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    WHILE_KEYWORD   reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    PRINT_KEYWORD   reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    INPUT_KEYWORD   reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    RETURN          reduce using rule 144 (VARS_CTE -> TRUE append_bool .)
    CLOSE_BRACKET   reduce using rule 144 (VARS_CTE -> TRUE append_bool .)


state 178

    (145) VARS_CTE -> FALSE append_bool .

    TIMES           reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    DIVIDE          reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    PLUS            reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    MINS            reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    RELOP           reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    AND             reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    OR              reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    CLOSE_PARENTHESIS reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    CONCATENATE     reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    SEMICOLON       reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    CLOSE_SQUARE_BRACKET reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    COMMA           reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    ID              reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    IF              reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    FOR_KEYWORD     reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    WHILE_KEYWORD   reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    PRINT_KEYWORD   reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    INPUT_KEYWORD   reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    RETURN          reduce using rule 145 (VARS_CTE -> FALSE append_bool .)
    CLOSE_BRACKET   reduce using rule 145 (VARS_CTE -> FALSE append_bool .)


state 179

    (146) VARS_CTE -> ID append_id .
    (147) VARS_CTE -> ID append_id . OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D

    TIMES           reduce using rule 146 (VARS_CTE -> ID append_id .)
    DIVIDE          reduce using rule 146 (VARS_CTE -> ID append_id .)
    PLUS            reduce using rule 146 (VARS_CTE -> ID append_id .)
    MINS            reduce using rule 146 (VARS_CTE -> ID append_id .)
    RELOP           reduce using rule 146 (VARS_CTE -> ID append_id .)
    AND             reduce using rule 146 (VARS_CTE -> ID append_id .)
    OR              reduce using rule 146 (VARS_CTE -> ID append_id .)
    CLOSE_PARENTHESIS reduce using rule 146 (VARS_CTE -> ID append_id .)
    CONCATENATE     reduce using rule 146 (VARS_CTE -> ID append_id .)
    SEMICOLON       reduce using rule 146 (VARS_CTE -> ID append_id .)
    CLOSE_SQUARE_BRACKET reduce using rule 146 (VARS_CTE -> ID append_id .)
    COMMA           reduce using rule 146 (VARS_CTE -> ID append_id .)
    ID              reduce using rule 146 (VARS_CTE -> ID append_id .)
    IF              reduce using rule 146 (VARS_CTE -> ID append_id .)
    FOR_KEYWORD     reduce using rule 146 (VARS_CTE -> ID append_id .)
    WHILE_KEYWORD   reduce using rule 146 (VARS_CTE -> ID append_id .)
    PRINT_KEYWORD   reduce using rule 146 (VARS_CTE -> ID append_id .)
    INPUT_KEYWORD   reduce using rule 146 (VARS_CTE -> ID append_id .)
    RETURN          reduce using rule 146 (VARS_CTE -> ID append_id .)
    CLOSE_BRACKET   reduce using rule 146 (VARS_CTE -> ID append_id .)
    OPEN_SQUARE_BRACKET shift and go to state 237


state 180

    (148) VARS_CTE -> ID era . OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

    OPEN_PARENTHESIS shift and go to state 238


state 181

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump . EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 239
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 182

    (108) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS . while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (109) while_gotof -> .

    CLOSE_PARENTHESIS reduce using rule 109 (while_gotof -> .)

    while_gotof                    shift and go to state 240

state 183

    (207) PRINT_A -> PRINT_B CLOSE_PARENTHESIS . print_quad SEMICOLON
    (212) print_quad -> .

    SEMICOLON       reduce using rule 212 (print_quad -> .)

    print_quad                     shift and go to state 241

state 184

    (208) PRINT_B -> CTE_STRING add_string . PRINT_C
    (215) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (216) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (217) PRINT_C -> . EMPTY
    (238) EMPTY -> .

    CONCATENATE     shift and go to state 243
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)

    PRINT_C                        shift and go to state 242
    EMPTY                          shift and go to state 244

state 185

    (209) PRINT_B -> EXPRESIONESVARIAS add_temp . PRINT_C
    (215) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (216) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (217) PRINT_C -> . EMPTY
    (238) EMPTY -> .

    CONCATENATE     shift and go to state 243
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)

    PRINT_C                        shift and go to state 245
    EMPTY                          shift and go to state 244

state 186

    (163) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid . INPUT_A SEMICOLON quad_input
    (166) INPUT_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
    (167) INPUT_A -> . EMPTY
    (238) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 247
    SEMICOLON       reduce using rule 238 (EMPTY -> .)

    INPUT_A                        shift and go to state 246
    EMPTY                          shift and go to state 248

state 187

    (50) RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad . SEMICOLON

    SEMICOLON       shift and go to state 249


state 188

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope . endproc
    (54) endproc -> .

    MODULE          reduce using rule 54 (endproc -> .)
    MAIN            reduce using rule 54 (endproc -> .)

    endproc                        shift and go to state 250

state 189

    (61) MODULO_C -> TIPO_P ID add_variable_m . MODULO_B MODULO_D
    (59) MODULO_B -> . COMMA MODULO_C
    (60) MODULO_B -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 252
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    MODULE          reduce using rule 238 (EMPTY -> .)
    MAIN            reduce using rule 238 (EMPTY -> .)

    MODULO_B                       shift and go to state 251
    EMPTY                          shift and go to state 253

state 190

    (16) VARS_F -> OPEN_SQUARE_BRACKET . CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET

    CTE_INTEGER     shift and go to state 254


state 191

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .

    SEMICOLON       reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .)
    COMMA           reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .)


state 192

    (17) VARS_F -> EMPTY .

    SEMICOLON       reduce using rule 17 (VARS_F -> EMPTY .)
    COMMA           reduce using rule 17 (VARS_F -> EMPTY .)


state 193

    (83) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON . quad
    (84) quad -> .

    ID              reduce using rule 84 (quad -> .)
    IF              reduce using rule 84 (quad -> .)
    FOR_KEYWORD     reduce using rule 84 (quad -> .)
    WHILE_KEYWORD   reduce using rule 84 (quad -> .)
    PRINT_KEYWORD   reduce using rule 84 (quad -> .)
    INPUT_KEYWORD   reduce using rule 84 (quad -> .)
    RETURN          reduce using rule 84 (quad -> .)
    CLOSE_BRACKET   reduce using rule 84 (quad -> .)
    NOT             reduce using rule 84 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 84 (quad -> .)
    PLUS            reduce using rule 84 (quad -> .)
    MINS            reduce using rule 84 (quad -> .)
    CTE_INTEGER     reduce using rule 84 (quad -> .)
    CTE_FLOAT       reduce using rule 84 (quad -> .)
    TRUE            reduce using rule 84 (quad -> .)
    FALSE           reduce using rule 84 (quad -> .)
    SEMICOLON       reduce using rule 84 (quad -> .)
    AND             reduce using rule 84 (quad -> .)
    OR              reduce using rule 84 (quad -> .)
    RELOP           reduce using rule 84 (quad -> .)
    TIMES           reduce using rule 84 (quad -> .)
    DIVIDE          reduce using rule 84 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 84 (quad -> .)

    quad                           shift and go to state 255

state 194

    (92) ASIGNACION_C -> EQUAL add_equal . EXPRESIONESVARIAS
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 256
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 195

    (93) ASIGNACION_C -> EQUAL CTE_STRING .

    SEMICOLON       reduce using rule 93 (ASIGNACION_C -> EQUAL CTE_STRING .)


state 196

    (86) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ver_arr ASIGNACION_B
    (88) ver_arr -> .

    OPEN_SQUARE_BRACKET reduce using rule 88 (ver_arr -> .)
    EQUAL           reduce using rule 88 (ver_arr -> .)

    ver_arr                        shift and go to state 257

state 197

    (79) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 258


state 198

    (125) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 259


state 199

    (126) COLOR_A -> COLOR_RED .

    CLOSE_PARENTHESIS reduce using rule 126 (COLOR_A -> COLOR_RED .)


state 200

    (127) COLOR_A -> COLOR_BLACK .

    CLOSE_PARENTHESIS reduce using rule 127 (COLOR_A -> COLOR_BLACK .)


state 201

    (128) COLOR_A -> COLOR_BLUE .

    CLOSE_PARENTHESIS reduce using rule 128 (COLOR_A -> COLOR_BLUE .)


state 202

    (129) COLOR_A -> COLOR_PURPLE .

    CLOSE_PARENTHESIS reduce using rule 129 (COLOR_A -> COLOR_PURPLE .)


state 203

    (130) COLOR_A -> COLOR_GREEN .

    CLOSE_PARENTHESIS reduce using rule 130 (COLOR_A -> COLOR_GREEN .)


state 204

    (131) COLOR_A -> COLOR_ORANGE .

    CLOSE_PARENTHESIS reduce using rule 131 (COLOR_A -> COLOR_ORANGE .)


state 205

    (177) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .

    ID              reduce using rule 177 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    IF              reduce using rule 177 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    FOR_KEYWORD     reduce using rule 177 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    WHILE_KEYWORD   reduce using rule 177 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    PRINT_KEYWORD   reduce using rule 177 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    INPUT_KEYWORD   reduce using rule 177 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    RETURN          reduce using rule 177 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    CLOSE_BRACKET   reduce using rule 177 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)


state 206

    (185) PLOT_C -> PLOT_I . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 260


state 207

    (186) PLOT_I -> CTE_INTEGER . PLOT_D
    (188) PLOT_D -> . COMMA PLOT_I
    (189) PLOT_D -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 262
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)

    PLOT_D                         shift and go to state 261
    EMPTY                          shift and go to state 263

state 208

    (187) PLOT_I -> CTE_FLOAT . PLOT_D
    (188) PLOT_D -> . COMMA PLOT_I
    (189) PLOT_D -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 262
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)

    PLOT_D                         shift and go to state 264
    EMPTY                          shift and go to state 263

state 209

    (178) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 178 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 178 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 178 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 178 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 178 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 178 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 178 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 178 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)


state 210

    (190) PLOT_E -> PLOT_F . SEMICOLON PLOT_G

    SEMICOLON       shift and go to state 265


state 211

    (191) PLOT_F -> CTE_INTEGER . PLOT_J
    (193) PLOT_J -> . COMMA PLOT_F
    (194) PLOT_J -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 267
    SEMICOLON       reduce using rule 238 (EMPTY -> .)

    PLOT_J                         shift and go to state 266
    EMPTY                          shift and go to state 268

state 212

    (192) PLOT_F -> CTE_FLOAT . PLOT_J
    (193) PLOT_J -> . COMMA PLOT_F
    (194) PLOT_J -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 267
    SEMICOLON       reduce using rule 238 (EMPTY -> .)

    PLOT_J                         shift and go to state 269
    EMPTY                          shift and go to state 268

state 213

    (179) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 179 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 179 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 179 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 179 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 179 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 179 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 179 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 179 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)


state 214

    (180) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 180 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 180 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 180 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 180 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 180 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 180 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 180 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 180 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)


state 215

    (181) PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 181 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 181 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 181 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 181 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 181 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 181 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 181 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 181 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)


state 216

    (182) PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 182 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 182 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 182 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 182 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 182 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 182 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 182 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 182 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)


state 217

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER . COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 270


state 218

    (184) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET . PLOT_M
    (199) PLOT_M -> . PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (200) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 273

    PLOT_M                         shift and go to state 271
    PLOT_N                         shift and go to state 272

state 219

    (69) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .

    ID              reduce using rule 69 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    IF              reduce using rule 69 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    FOR_KEYWORD     reduce using rule 69 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    WHILE_KEYWORD   reduce using rule 69 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    PRINT_KEYWORD   reduce using rule 69 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    INPUT_KEYWORD   reduce using rule 69 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    RETURN          reduce using rule 69 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    CLOSE_BRACKET   reduce using rule 69 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)


state 220

    (75) LLAMADAMODULO_C -> EXP check_types . LLAMADAMODULO_A LLAMADAMODULO_D
    (72) LLAMADAMODULO_A -> . COMMA incK LLAMADAMODULO_C
    (73) LLAMADAMODULO_A -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 275
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    ID              reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)

    LLAMADAMODULO_A                shift and go to state 274
    EMPTY                          shift and go to state 276

state 221

    (133) FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B . CLOSE_PARENTHESIS pop_parenthesis

    CLOSE_PARENTHESIS shift and go to state 277


state 222

    (140) FACTOR_B -> EXPRESIONESVARIAS .

    CLOSE_PARENTHESIS reduce using rule 140 (FACTOR_B -> EXPRESIONESVARIAS .)


state 223

    (95) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS . if_gotof BLOQUE CONDICION_A fill_end
    (96) if_gotof -> .

    OPEN_BRACKET    reduce using rule 96 (if_gotof -> .)

    if_gotof                       shift and go to state 278

state 224

    (226) EV_C -> EXP_RELOP quad_andor EV_B .

    CLOSE_PARENTHESIS reduce using rule 226 (EV_C -> EXP_RELOP quad_andor EV_B .)
    CONCATENATE     reduce using rule 226 (EV_C -> EXP_RELOP quad_andor EV_B .)
    SEMICOLON       reduce using rule 226 (EV_C -> EXP_RELOP quad_andor EV_B .)


state 225

    (228) EV_B -> AND . add_ev EV_C
    (231) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 231 (add_ev -> .)
    PLUS            reduce using rule 231 (add_ev -> .)
    MINS            reduce using rule 231 (add_ev -> .)
    CTE_INTEGER     reduce using rule 231 (add_ev -> .)
    CTE_FLOAT       reduce using rule 231 (add_ev -> .)
    TRUE            reduce using rule 231 (add_ev -> .)
    FALSE           reduce using rule 231 (add_ev -> .)
    ID              reduce using rule 231 (add_ev -> .)
    AND             reduce using rule 231 (add_ev -> .)
    OR              reduce using rule 231 (add_ev -> .)
    RELOP           reduce using rule 231 (add_ev -> .)
    TIMES           reduce using rule 231 (add_ev -> .)
    DIVIDE          reduce using rule 231 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 231 (add_ev -> .)
    CONCATENATE     reduce using rule 231 (add_ev -> .)
    SEMICOLON       reduce using rule 231 (add_ev -> .)

    add_ev                         shift and go to state 279

state 226

    (229) EV_B -> OR . add_ev EV_C
    (231) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 231 (add_ev -> .)
    PLUS            reduce using rule 231 (add_ev -> .)
    MINS            reduce using rule 231 (add_ev -> .)
    CTE_INTEGER     reduce using rule 231 (add_ev -> .)
    CTE_FLOAT       reduce using rule 231 (add_ev -> .)
    TRUE            reduce using rule 231 (add_ev -> .)
    FALSE           reduce using rule 231 (add_ev -> .)
    ID              reduce using rule 231 (add_ev -> .)
    AND             reduce using rule 231 (add_ev -> .)
    OR              reduce using rule 231 (add_ev -> .)
    RELOP           reduce using rule 231 (add_ev -> .)
    TIMES           reduce using rule 231 (add_ev -> .)
    DIVIDE          reduce using rule 231 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 231 (add_ev -> .)
    CONCATENATE     reduce using rule 231 (add_ev -> .)
    SEMICOLON       reduce using rule 231 (add_ev -> .)

    add_ev                         shift and go to state 280

state 227

    (230) EV_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 230 (EV_B -> EMPTY .)
    CONCATENATE     reduce using rule 230 (EV_B -> EMPTY .)
    SEMICOLON       reduce using rule 230 (EV_B -> EMPTY .)


state 228

    (234) EXP_RELOP_A -> RELOP add_relop . EXP quad_relop
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 281
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 229

    (113) EXP -> TERMINO pop_exp EXP_A .

    RELOP           reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    AND             reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    OR              reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_PARENTHESIS reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    CONCATENATE     reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    SEMICOLON       reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    COMMA           reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    ID              reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    IF              reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    FOR_KEYWORD     reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    WHILE_KEYWORD   reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    PRINT_KEYWORD   reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    INPUT_KEYWORD   reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    RETURN          reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_BRACKET   reduce using rule 113 (EXP -> TERMINO pop_exp EXP_A .)


state 230

    (115) EXP_A -> PLUS . append_operator EXP
    (118) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 118 (append_operator -> .)
    PLUS            reduce using rule 118 (append_operator -> .)
    MINS            reduce using rule 118 (append_operator -> .)
    CTE_INTEGER     reduce using rule 118 (append_operator -> .)
    CTE_FLOAT       reduce using rule 118 (append_operator -> .)
    TRUE            reduce using rule 118 (append_operator -> .)
    FALSE           reduce using rule 118 (append_operator -> .)
    ID              reduce using rule 118 (append_operator -> .)
    TIMES           reduce using rule 118 (append_operator -> .)
    DIVIDE          reduce using rule 118 (append_operator -> .)
    RELOP           reduce using rule 118 (append_operator -> .)
    AND             reduce using rule 118 (append_operator -> .)
    OR              reduce using rule 118 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 118 (append_operator -> .)
    CONCATENATE     reduce using rule 118 (append_operator -> .)
    SEMICOLON       reduce using rule 118 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 118 (append_operator -> .)
    COMMA           reduce using rule 118 (append_operator -> .)
    IF              reduce using rule 118 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 118 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 118 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 118 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 118 (append_operator -> .)
    RETURN          reduce using rule 118 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 118 (append_operator -> .)

    append_operator                shift and go to state 282

state 231

    (116) EXP_A -> MINS . append_operator EXP
    (118) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 118 (append_operator -> .)
    PLUS            reduce using rule 118 (append_operator -> .)
    MINS            reduce using rule 118 (append_operator -> .)
    CTE_INTEGER     reduce using rule 118 (append_operator -> .)
    CTE_FLOAT       reduce using rule 118 (append_operator -> .)
    TRUE            reduce using rule 118 (append_operator -> .)
    FALSE           reduce using rule 118 (append_operator -> .)
    ID              reduce using rule 118 (append_operator -> .)
    TIMES           reduce using rule 118 (append_operator -> .)
    DIVIDE          reduce using rule 118 (append_operator -> .)
    RELOP           reduce using rule 118 (append_operator -> .)
    AND             reduce using rule 118 (append_operator -> .)
    OR              reduce using rule 118 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 118 (append_operator -> .)
    CONCATENATE     reduce using rule 118 (append_operator -> .)
    SEMICOLON       reduce using rule 118 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 118 (append_operator -> .)
    COMMA           reduce using rule 118 (append_operator -> .)
    IF              reduce using rule 118 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 118 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 118 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 118 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 118 (append_operator -> .)
    RETURN          reduce using rule 118 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 118 (append_operator -> .)

    append_operator                shift and go to state 283

state 232

    (117) EXP_A -> EMPTY .

    RELOP           reduce using rule 117 (EXP_A -> EMPTY .)
    AND             reduce using rule 117 (EXP_A -> EMPTY .)
    OR              reduce using rule 117 (EXP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 117 (EXP_A -> EMPTY .)
    CONCATENATE     reduce using rule 117 (EXP_A -> EMPTY .)
    SEMICOLON       reduce using rule 117 (EXP_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 117 (EXP_A -> EMPTY .)
    COMMA           reduce using rule 117 (EXP_A -> EMPTY .)
    ID              reduce using rule 117 (EXP_A -> EMPTY .)
    IF              reduce using rule 117 (EXP_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 117 (EXP_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 117 (EXP_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 117 (EXP_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 117 (EXP_A -> EMPTY .)
    RETURN          reduce using rule 117 (EXP_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 117 (EXP_A -> EMPTY .)


state 233

    (119) TERMINO -> FACTOR pop_term TERMINO_A .

    PLUS            reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    MINS            reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RELOP           reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    AND             reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    OR              reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_PARENTHESIS reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CONCATENATE     reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    SEMICOLON       reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    COMMA           reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    ID              reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    IF              reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    FOR_KEYWORD     reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    WHILE_KEYWORD   reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    PRINT_KEYWORD   reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    INPUT_KEYWORD   reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RETURN          reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_BRACKET   reduce using rule 119 (TERMINO -> FACTOR pop_term TERMINO_A .)


state 234

    (121) TERMINO_A -> TIMES . add_operator TERMINO
    (124) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 124 (add_operator -> .)
    PLUS            reduce using rule 124 (add_operator -> .)
    MINS            reduce using rule 124 (add_operator -> .)
    CTE_INTEGER     reduce using rule 124 (add_operator -> .)
    CTE_FLOAT       reduce using rule 124 (add_operator -> .)
    TRUE            reduce using rule 124 (add_operator -> .)
    FALSE           reduce using rule 124 (add_operator -> .)
    ID              reduce using rule 124 (add_operator -> .)
    TIMES           reduce using rule 124 (add_operator -> .)
    DIVIDE          reduce using rule 124 (add_operator -> .)
    RELOP           reduce using rule 124 (add_operator -> .)
    AND             reduce using rule 124 (add_operator -> .)
    OR              reduce using rule 124 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 124 (add_operator -> .)
    CONCATENATE     reduce using rule 124 (add_operator -> .)
    SEMICOLON       reduce using rule 124 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 124 (add_operator -> .)
    COMMA           reduce using rule 124 (add_operator -> .)
    IF              reduce using rule 124 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 124 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 124 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 124 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 124 (add_operator -> .)
    RETURN          reduce using rule 124 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 124 (add_operator -> .)

    add_operator                   shift and go to state 284

state 235

    (122) TERMINO_A -> DIVIDE . add_operator TERMINO
    (124) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 124 (add_operator -> .)
    PLUS            reduce using rule 124 (add_operator -> .)
    MINS            reduce using rule 124 (add_operator -> .)
    CTE_INTEGER     reduce using rule 124 (add_operator -> .)
    CTE_FLOAT       reduce using rule 124 (add_operator -> .)
    TRUE            reduce using rule 124 (add_operator -> .)
    FALSE           reduce using rule 124 (add_operator -> .)
    ID              reduce using rule 124 (add_operator -> .)
    TIMES           reduce using rule 124 (add_operator -> .)
    DIVIDE          reduce using rule 124 (add_operator -> .)
    RELOP           reduce using rule 124 (add_operator -> .)
    AND             reduce using rule 124 (add_operator -> .)
    OR              reduce using rule 124 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 124 (add_operator -> .)
    CONCATENATE     reduce using rule 124 (add_operator -> .)
    SEMICOLON       reduce using rule 124 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 124 (add_operator -> .)
    COMMA           reduce using rule 124 (add_operator -> .)
    IF              reduce using rule 124 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 124 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 124 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 124 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 124 (add_operator -> .)
    RETURN          reduce using rule 124 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 124 (add_operator -> .)

    add_operator                   shift and go to state 285

state 236

    (123) TERMINO_A -> EMPTY .

    PLUS            reduce using rule 123 (TERMINO_A -> EMPTY .)
    MINS            reduce using rule 123 (TERMINO_A -> EMPTY .)
    RELOP           reduce using rule 123 (TERMINO_A -> EMPTY .)
    AND             reduce using rule 123 (TERMINO_A -> EMPTY .)
    OR              reduce using rule 123 (TERMINO_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 123 (TERMINO_A -> EMPTY .)
    CONCATENATE     reduce using rule 123 (TERMINO_A -> EMPTY .)
    SEMICOLON       reduce using rule 123 (TERMINO_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 123 (TERMINO_A -> EMPTY .)
    COMMA           reduce using rule 123 (TERMINO_A -> EMPTY .)
    ID              reduce using rule 123 (TERMINO_A -> EMPTY .)
    IF              reduce using rule 123 (TERMINO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 123 (TERMINO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 123 (TERMINO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 123 (TERMINO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 123 (TERMINO_A -> EMPTY .)
    RETURN          reduce using rule 123 (TERMINO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 123 (TERMINO_A -> EMPTY .)


state 237

    (147) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET . add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (156) add_SB -> .

    OPEN_PARENTHESIS reduce using rule 156 (add_SB -> .)
    PLUS            reduce using rule 156 (add_SB -> .)
    MINS            reduce using rule 156 (add_SB -> .)
    CTE_INTEGER     reduce using rule 156 (add_SB -> .)
    CTE_FLOAT       reduce using rule 156 (add_SB -> .)
    TRUE            reduce using rule 156 (add_SB -> .)
    FALSE           reduce using rule 156 (add_SB -> .)
    ID              reduce using rule 156 (add_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 156 (add_SB -> .)
    TIMES           reduce using rule 156 (add_SB -> .)
    DIVIDE          reduce using rule 156 (add_SB -> .)

    add_SB                         shift and go to state 286

state 238

    (148) VARS_CTE -> ID era OPEN_PARENTHESIS . add_parenthesis VARS_CTE_B pop_parenthesis gosub
    (138) add_parenthesis -> .

    OPEN_PARENTHESIS reduce using rule 138 (add_parenthesis -> .)
    PLUS            reduce using rule 138 (add_parenthesis -> .)
    MINS            reduce using rule 138 (add_parenthesis -> .)
    CTE_INTEGER     reduce using rule 138 (add_parenthesis -> .)
    CTE_FLOAT       reduce using rule 138 (add_parenthesis -> .)
    TRUE            reduce using rule 138 (add_parenthesis -> .)
    FALSE           reduce using rule 138 (add_parenthesis -> .)
    ID              reduce using rule 138 (add_parenthesis -> .)
    COMMA           reduce using rule 138 (add_parenthesis -> .)
    CLOSE_PARENTHESIS reduce using rule 138 (add_parenthesis -> .)
    TIMES           reduce using rule 138 (add_parenthesis -> .)
    DIVIDE          reduce using rule 138 (add_parenthesis -> .)

    add_parenthesis                shift and go to state 287

state 239

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS . for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (105) for_gotof -> .

    SEMICOLON       reduce using rule 105 (for_gotof -> .)

    for_gotof                      shift and go to state 288

state 240

    (108) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof . CLOSE_PARENTHESIS BLOQUE goto_while

    CLOSE_PARENTHESIS shift and go to state 289


state 241

    (207) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad . SEMICOLON

    SEMICOLON       shift and go to state 290


state 242

    (208) PRINT_B -> CTE_STRING add_string PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 208 (PRINT_B -> CTE_STRING add_string PRINT_C .)


state 243

    (215) PRINT_C -> CONCATENATE . EXPRESIONESVARIAS add_con PRINT_D
    (216) PRINT_C -> CONCATENATE . CTE_STRING add_exp PRINT_D
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 292
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 291
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 244

    (217) PRINT_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 217 (PRINT_C -> EMPTY .)


state 245

    (209) PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 209 (PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .)


state 246

    (163) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A . SEMICOLON quad_input

    SEMICOLON       shift and go to state 293


state 247

    (166) INPUT_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET INPUT_B
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 294
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 248

    (167) INPUT_A -> EMPTY .

    SEMICOLON       reduce using rule 167 (INPUT_A -> EMPTY .)


state 249

    (50) RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .

    ID              reduce using rule 50 (RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .)
    IF              reduce using rule 50 (RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 50 (RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .)
    RETURN          reduce using rule 50 (RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 50 (RETURNOP -> RETURN activate EXPRESIONESVARIAS return_quad SEMICOLON .)


state 250

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .

    MODULE          reduce using rule 49 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)
    MAIN            reduce using rule 49 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)


state 251

    (61) MODULO_C -> TIPO_P ID add_variable_m MODULO_B . MODULO_D
    (63) MODULO_D -> . CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (64) MODULO_D -> . EMPTY
    (238) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 296
    MODULE          reduce using rule 238 (EMPTY -> .)
    MAIN            reduce using rule 238 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 238 (EMPTY -> .) ]

    MODULO_D                       shift and go to state 295
    EMPTY                          shift and go to state 297

state 252

    (59) MODULO_B -> COMMA . MODULO_C
    (61) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 298
    TIPO_P                         shift and go to state 94

state 253

    (60) MODULO_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 60 (MODULO_B -> EMPTY .)
    MODULE          reduce using rule 60 (MODULO_B -> EMPTY .)
    MAIN            reduce using rule 60 (MODULO_B -> EMPTY .)


state 254

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER . add_s2 CLOSE_SQUARE_BRACKET
    (18) add_s2 -> .

    CLOSE_SQUARE_BRACKET reduce using rule 18 (add_s2 -> .)

    add_s2                         shift and go to state 299

state 255

    (83) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .

    ID              reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    IF              reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FOR_KEYWORD     reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    WHILE_KEYWORD   reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PRINT_KEYWORD   reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    INPUT_KEYWORD   reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RETURN          reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_BRACKET   reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    NOT             reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OPEN_PARENTHESIS reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PLUS            reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    MINS            reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_INTEGER     reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_FLOAT       reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TRUE            reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FALSE           reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    SEMICOLON       reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    AND             reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OR              reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RELOP           reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TIMES           reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    DIVIDE          reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_PARENTHESIS reduce using rule 83 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)


state 256

    (92) ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .

    SEMICOLON       reduce using rule 92 (ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .)


state 257

    (86) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr . ASIGNACION_B
    (89) ASIGNACION_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat
    (90) ASIGNACION_B -> . EMPTY
    (238) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 300
    EQUAL           reduce using rule 238 (EMPTY -> .)

    ASIGNACION_B                   shift and go to state 301
    EMPTY                          shift and go to state 302

state 258

    (79) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 303


state 259

    (125) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 304


state 260

    (185) PLOT_C -> PLOT_I CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 305


state 261

    (186) PLOT_I -> CTE_INTEGER PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 186 (PLOT_I -> CTE_INTEGER PLOT_D .)


state 262

    (188) PLOT_D -> COMMA . PLOT_I
    (186) PLOT_I -> . CTE_INTEGER PLOT_D
    (187) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 207
    CTE_FLOAT       shift and go to state 208

    PLOT_I                         shift and go to state 306

state 263

    (189) PLOT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 189 (PLOT_D -> EMPTY .)


state 264

    (187) PLOT_I -> CTE_FLOAT PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 187 (PLOT_I -> CTE_FLOAT PLOT_D .)


state 265

    (190) PLOT_E -> PLOT_F SEMICOLON . PLOT_G
    (195) PLOT_G -> . PLOT_K CLOSE_PARENTHESIS SEMICOLON
    (196) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 309

    PLOT_G                         shift and go to state 307
    PLOT_K                         shift and go to state 308

state 266

    (191) PLOT_F -> CTE_INTEGER PLOT_J .

    SEMICOLON       reduce using rule 191 (PLOT_F -> CTE_INTEGER PLOT_J .)


state 267

    (193) PLOT_J -> COMMA . PLOT_F
    (191) PLOT_F -> . CTE_INTEGER PLOT_J
    (192) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 211
    CTE_FLOAT       shift and go to state 212

    PLOT_F                         shift and go to state 310

state 268

    (194) PLOT_J -> EMPTY .

    SEMICOLON       reduce using rule 194 (PLOT_J -> EMPTY .)


state 269

    (192) PLOT_F -> CTE_FLOAT PLOT_J .

    SEMICOLON       reduce using rule 192 (PLOT_F -> CTE_FLOAT PLOT_J .)


state 270

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA . CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 311


state 271

    (184) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .

    ID              reduce using rule 184 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    IF              reduce using rule 184 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    FOR_KEYWORD     reduce using rule 184 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    WHILE_KEYWORD   reduce using rule 184 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    PRINT_KEYWORD   reduce using rule 184 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    INPUT_KEYWORD   reduce using rule 184 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    RETURN          reduce using rule 184 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    CLOSE_BRACKET   reduce using rule 184 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)


state 272

    (199) PLOT_M -> PLOT_N . CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 312


state 273

    (200) PLOT_N -> CTE_STRING . PLOT_O
    (201) PLOT_O -> . COMMA PLOT_N
    (202) PLOT_O -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 314
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)

    PLOT_O                         shift and go to state 313
    EMPTY                          shift and go to state 315

state 274

    (75) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A . LLAMADAMODULO_D
    (77) LLAMADAMODULO_D -> . CLOSE_PARENTHESIS SEMICOLON
    (78) LLAMADAMODULO_D -> . EMPTY
    (238) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 317
    ID              reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 238 (EMPTY -> .) ]

    LLAMADAMODULO_D                shift and go to state 316
    EMPTY                          shift and go to state 318

state 275

    (72) LLAMADAMODULO_A -> COMMA . incK LLAMADAMODULO_C
    (74) incK -> .

    OPEN_PARENTHESIS reduce using rule 74 (incK -> .)
    PLUS            reduce using rule 74 (incK -> .)
    MINS            reduce using rule 74 (incK -> .)
    CTE_INTEGER     reduce using rule 74 (incK -> .)
    CTE_FLOAT       reduce using rule 74 (incK -> .)
    TRUE            reduce using rule 74 (incK -> .)
    FALSE           reduce using rule 74 (incK -> .)
    ID              reduce using rule 74 (incK -> .)
    COMMA           reduce using rule 74 (incK -> .)
    CLOSE_PARENTHESIS reduce using rule 74 (incK -> .)
    TIMES           reduce using rule 74 (incK -> .)
    DIVIDE          reduce using rule 74 (incK -> .)
    IF              reduce using rule 74 (incK -> .)
    FOR_KEYWORD     reduce using rule 74 (incK -> .)
    WHILE_KEYWORD   reduce using rule 74 (incK -> .)
    PRINT_KEYWORD   reduce using rule 74 (incK -> .)
    INPUT_KEYWORD   reduce using rule 74 (incK -> .)
    RETURN          reduce using rule 74 (incK -> .)
    CLOSE_BRACKET   reduce using rule 74 (incK -> .)

    incK                           shift and go to state 319

state 276

    (73) LLAMADAMODULO_A -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)
    ID              reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)
    IF              reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)
    RETURN          reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 73 (LLAMADAMODULO_A -> EMPTY .)


state 277

    (133) FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS . pop_parenthesis
    (139) pop_parenthesis -> .

    TIMES           reduce using rule 139 (pop_parenthesis -> .)
    DIVIDE          reduce using rule 139 (pop_parenthesis -> .)
    PLUS            reduce using rule 139 (pop_parenthesis -> .)
    MINS            reduce using rule 139 (pop_parenthesis -> .)
    RELOP           reduce using rule 139 (pop_parenthesis -> .)
    AND             reduce using rule 139 (pop_parenthesis -> .)
    OR              reduce using rule 139 (pop_parenthesis -> .)
    CLOSE_PARENTHESIS reduce using rule 139 (pop_parenthesis -> .)
    CONCATENATE     reduce using rule 139 (pop_parenthesis -> .)
    SEMICOLON       reduce using rule 139 (pop_parenthesis -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 139 (pop_parenthesis -> .)
    COMMA           reduce using rule 139 (pop_parenthesis -> .)
    ID              reduce using rule 139 (pop_parenthesis -> .)
    IF              reduce using rule 139 (pop_parenthesis -> .)
    FOR_KEYWORD     reduce using rule 139 (pop_parenthesis -> .)
    WHILE_KEYWORD   reduce using rule 139 (pop_parenthesis -> .)
    PRINT_KEYWORD   reduce using rule 139 (pop_parenthesis -> .)
    INPUT_KEYWORD   reduce using rule 139 (pop_parenthesis -> .)
    RETURN          reduce using rule 139 (pop_parenthesis -> .)
    CLOSE_BRACKET   reduce using rule 139 (pop_parenthesis -> .)

    pop_parenthesis                shift and go to state 320

state 278

    (95) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof . BLOQUE CONDICION_A fill_end
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 321

state 279

    (228) EV_B -> AND add_ev . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EV_C                           shift and go to state 322
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 280

    (229) EV_B -> OR add_ev . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EV_C                           shift and go to state 323
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 281

    (234) EXP_RELOP_A -> RELOP add_relop EXP . quad_relop
    (236) quad_relop -> .

    AND             reduce using rule 236 (quad_relop -> .)
    OR              reduce using rule 236 (quad_relop -> .)
    CLOSE_PARENTHESIS reduce using rule 236 (quad_relop -> .)
    CONCATENATE     reduce using rule 236 (quad_relop -> .)
    SEMICOLON       reduce using rule 236 (quad_relop -> .)

    quad_relop                     shift and go to state 324

state 282

    (115) EXP_A -> PLUS append_operator . EXP
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]
  ! ID              [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 325
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 283

    (116) EXP_A -> MINS append_operator . EXP
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]
  ! ID              [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 326
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 284

    (121) TERMINO_A -> TIMES add_operator . TERMINO
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]
  ! ID              [ reduce using rule 238 (EMPTY -> .) ]

    TERMINO                        shift and go to state 327
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 285

    (122) TERMINO_A -> DIVIDE add_operator . TERMINO
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]
  ! ID              [ reduce using rule 238 (EMPTY -> .) ]

    TERMINO                        shift and go to state 328
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 286

    (147) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB . EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 329
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 287

    (148) VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis . VARS_CTE_B pop_parenthesis gosub
    (158) VARS_CTE_B -> . EXP check_types VARS_CTE_C CLOSE_PARENTHESIS
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 330
    EXP                            shift and go to state 331
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 288

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof . SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for

    SEMICOLON       shift and go to state 332


state 289

    (108) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS . BLOQUE goto_while
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 333

state 290

    (207) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .

    ID              reduce using rule 207 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    IF              reduce using rule 207 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 207 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 207 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 207 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 207 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    RETURN          reduce using rule 207 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 207 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)


state 291

    (215) PRINT_C -> CONCATENATE EXPRESIONESVARIAS . add_con PRINT_D
    (219) add_con -> .

    CONCATENATE     reduce using rule 219 (add_con -> .)
    CLOSE_PARENTHESIS reduce using rule 219 (add_con -> .)

    add_con                        shift and go to state 334

state 292

    (216) PRINT_C -> CONCATENATE CTE_STRING . add_exp PRINT_D
    (218) add_exp -> .

    CONCATENATE     reduce using rule 218 (add_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 218 (add_exp -> .)

    add_exp                        shift and go to state 335

state 293

    (163) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON . quad_input
    (165) quad_input -> .

    ID              reduce using rule 165 (quad_input -> .)
    IF              reduce using rule 165 (quad_input -> .)
    FOR_KEYWORD     reduce using rule 165 (quad_input -> .)
    WHILE_KEYWORD   reduce using rule 165 (quad_input -> .)
    PRINT_KEYWORD   reduce using rule 165 (quad_input -> .)
    INPUT_KEYWORD   reduce using rule 165 (quad_input -> .)
    RETURN          reduce using rule 165 (quad_input -> .)
    CLOSE_BRACKET   reduce using rule 165 (quad_input -> .)

    quad_input                     shift and go to state 336

state 294

    (166) INPUT_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET INPUT_B

    CLOSE_SQUARE_BRACKET shift and go to state 337


state 295

    (61) MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .

    MODULE          reduce using rule 61 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    MAIN            reduce using rule 61 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 61 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)


state 296

    (63) MODULO_D -> CLOSE_PARENTHESIS . param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (68) param_table -> .

    OPEN_BRACKET    reduce using rule 68 (param_table -> .)

    param_table                    shift and go to state 338

state 297

    (64) MODULO_D -> EMPTY .

    MODULE          reduce using rule 64 (MODULO_D -> EMPTY .)
    MAIN            reduce using rule 64 (MODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 64 (MODULO_D -> EMPTY .)


state 298

    (59) MODULO_B -> COMMA MODULO_C .

    CLOSE_PARENTHESIS reduce using rule 59 (MODULO_B -> COMMA MODULO_C .)
    MODULE          reduce using rule 59 (MODULO_B -> COMMA MODULO_C .)
    MAIN            reduce using rule 59 (MODULO_B -> COMMA MODULO_C .)


state 299

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 339


state 300

    (89) ASIGNACION_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ver_mat
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 340
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 301

    (86) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B .

    EQUAL           reduce using rule 86 (ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B .)


state 302

    (90) ASIGNACION_B -> EMPTY .

    EQUAL           reduce using rule 90 (ASIGNACION_B -> EMPTY .)


state 303

    (79) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 79 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 79 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 79 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 79 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 79 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 79 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 79 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 79 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 304

    (125) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 125 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 125 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 125 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 125 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 125 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 125 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 125 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 125 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)


state 305

    (185) PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 185 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 185 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 185 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 185 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 185 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 185 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 185 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 185 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)


state 306

    (188) PLOT_D -> COMMA PLOT_I .

    CLOSE_PARENTHESIS reduce using rule 188 (PLOT_D -> COMMA PLOT_I .)


state 307

    (190) PLOT_E -> PLOT_F SEMICOLON PLOT_G .

    ID              reduce using rule 190 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    IF              reduce using rule 190 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    FOR_KEYWORD     reduce using rule 190 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    WHILE_KEYWORD   reduce using rule 190 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    PRINT_KEYWORD   reduce using rule 190 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    INPUT_KEYWORD   reduce using rule 190 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    RETURN          reduce using rule 190 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    CLOSE_BRACKET   reduce using rule 190 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)


state 308

    (195) PLOT_G -> PLOT_K . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 341


state 309

    (196) PLOT_K -> CTE_STRING . PLOT_H
    (197) PLOT_H -> . COMMA PLOT_K
    (198) PLOT_H -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 343
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)

    PLOT_H                         shift and go to state 342
    EMPTY                          shift and go to state 344

state 310

    (193) PLOT_J -> COMMA PLOT_F .

    SEMICOLON       reduce using rule 193 (PLOT_J -> COMMA PLOT_F .)


state 311

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER . COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 345


state 312

    (199) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET . SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 346


state 313

    (200) PLOT_N -> CTE_STRING PLOT_O .

    CLOSE_SQUARE_BRACKET reduce using rule 200 (PLOT_N -> CTE_STRING PLOT_O .)


state 314

    (201) PLOT_O -> COMMA . PLOT_N
    (200) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 273

    PLOT_N                         shift and go to state 347

state 315

    (202) PLOT_O -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 202 (PLOT_O -> EMPTY .)


state 316

    (75) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .

    ID              reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    IF              reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    FOR_KEYWORD     reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    WHILE_KEYWORD   reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    PRINT_KEYWORD   reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    INPUT_KEYWORD   reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    RETURN          reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_BRACKET   reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 75 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)


state 317

    (77) LLAMADAMODULO_D -> CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 348


state 318

    (78) LLAMADAMODULO_D -> EMPTY .

    ID              reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)
    IF              reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)
    RETURN          reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 78 (LLAMADAMODULO_D -> EMPTY .)


state 319

    (72) LLAMADAMODULO_A -> COMMA incK . LLAMADAMODULO_C
    (75) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]
  ! ID              [ reduce using rule 238 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 349
    EXP                            shift and go to state 163
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 320

    (133) FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .

    TIMES           reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    DIVIDE          reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    PLUS            reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    MINS            reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    RELOP           reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    AND             reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    OR              reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    CONCATENATE     reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    SEMICOLON       reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    CLOSE_SQUARE_BRACKET reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    COMMA           reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    ID              reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    IF              reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    FOR_KEYWORD     reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    WHILE_KEYWORD   reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    PRINT_KEYWORD   reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    INPUT_KEYWORD   reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    RETURN          reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    CLOSE_BRACKET   reduce using rule 133 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)


state 321

    (95) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE . CONDICION_A fill_end
    (99) CONDICION_A -> . gotoElse ELSE BLOQUE
    (100) CONDICION_A -> . EMPTY
    (101) gotoElse -> .
    (238) EMPTY -> .

    ELSE            reduce using rule 101 (gotoElse -> .)
    ID              reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)

    CONDICION_A                    shift and go to state 350
    gotoElse                       shift and go to state 351
    EMPTY                          shift and go to state 352

state 322

    (228) EV_B -> AND add_ev EV_C .

    CLOSE_PARENTHESIS reduce using rule 228 (EV_B -> AND add_ev EV_C .)
    CONCATENATE     reduce using rule 228 (EV_B -> AND add_ev EV_C .)
    SEMICOLON       reduce using rule 228 (EV_B -> AND add_ev EV_C .)


state 323

    (229) EV_B -> OR add_ev EV_C .

    CLOSE_PARENTHESIS reduce using rule 229 (EV_B -> OR add_ev EV_C .)
    CONCATENATE     reduce using rule 229 (EV_B -> OR add_ev EV_C .)
    SEMICOLON       reduce using rule 229 (EV_B -> OR add_ev EV_C .)


state 324

    (234) EXP_RELOP_A -> RELOP add_relop EXP quad_relop .

    AND             reduce using rule 234 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)
    OR              reduce using rule 234 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)
    CLOSE_PARENTHESIS reduce using rule 234 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)
    CONCATENATE     reduce using rule 234 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)
    SEMICOLON       reduce using rule 234 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)


state 325

    (115) EXP_A -> PLUS append_operator EXP .

    RELOP           reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    AND             reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    OR              reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    CONCATENATE     reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    SEMICOLON       reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    COMMA           reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    ID              reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    IF              reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    RETURN          reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 115 (EXP_A -> PLUS append_operator EXP .)


state 326

    (116) EXP_A -> MINS append_operator EXP .

    RELOP           reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    AND             reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    OR              reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    CONCATENATE     reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    SEMICOLON       reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    COMMA           reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    ID              reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    IF              reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    RETURN          reduce using rule 116 (EXP_A -> MINS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 116 (EXP_A -> MINS append_operator EXP .)


state 327

    (121) TERMINO_A -> TIMES add_operator TERMINO .

    PLUS            reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    MINS            reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    RELOP           reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    AND             reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    OR              reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    CONCATENATE     reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    SEMICOLON       reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    COMMA           reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    ID              reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    IF              reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    RETURN          reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 121 (TERMINO_A -> TIMES add_operator TERMINO .)


state 328

    (122) TERMINO_A -> DIVIDE add_operator TERMINO .

    PLUS            reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    MINS            reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RELOP           reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    AND             reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    OR              reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CONCATENATE     reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    SEMICOLON       reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    COMMA           reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    ID              reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    IF              reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RETURN          reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 122 (TERMINO_A -> DIVIDE add_operator TERMINO .)


state 329

    (147) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP . CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D

    CLOSE_SQUARE_BRACKET shift and go to state 353


state 330

    (148) VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B . pop_parenthesis gosub
    (139) pop_parenthesis -> .

    TIMES           reduce using rule 139 (pop_parenthesis -> .)
    DIVIDE          reduce using rule 139 (pop_parenthesis -> .)
    PLUS            reduce using rule 139 (pop_parenthesis -> .)
    MINS            reduce using rule 139 (pop_parenthesis -> .)
    RELOP           reduce using rule 139 (pop_parenthesis -> .)
    AND             reduce using rule 139 (pop_parenthesis -> .)
    OR              reduce using rule 139 (pop_parenthesis -> .)
    CLOSE_PARENTHESIS reduce using rule 139 (pop_parenthesis -> .)
    CONCATENATE     reduce using rule 139 (pop_parenthesis -> .)
    SEMICOLON       reduce using rule 139 (pop_parenthesis -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 139 (pop_parenthesis -> .)
    COMMA           reduce using rule 139 (pop_parenthesis -> .)
    ID              reduce using rule 139 (pop_parenthesis -> .)
    IF              reduce using rule 139 (pop_parenthesis -> .)
    FOR_KEYWORD     reduce using rule 139 (pop_parenthesis -> .)
    WHILE_KEYWORD   reduce using rule 139 (pop_parenthesis -> .)
    PRINT_KEYWORD   reduce using rule 139 (pop_parenthesis -> .)
    INPUT_KEYWORD   reduce using rule 139 (pop_parenthesis -> .)
    RETURN          reduce using rule 139 (pop_parenthesis -> .)
    CLOSE_BRACKET   reduce using rule 139 (pop_parenthesis -> .)

    pop_parenthesis                shift and go to state 354

state 331

    (158) VARS_CTE_B -> EXP . check_types VARS_CTE_C CLOSE_PARENTHESIS
    (76) check_types -> .

    COMMA           reduce using rule 76 (check_types -> .)
    CLOSE_PARENTHESIS reduce using rule 76 (check_types -> .)

    check_types                    shift and go to state 355

state 332

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON . ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (83) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 137

    ASIGNACION                     shift and go to state 356

state 333

    (108) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE . goto_while
    (111) goto_while -> .

    ID              reduce using rule 111 (goto_while -> .)
    IF              reduce using rule 111 (goto_while -> .)
    FOR_KEYWORD     reduce using rule 111 (goto_while -> .)
    WHILE_KEYWORD   reduce using rule 111 (goto_while -> .)
    PRINT_KEYWORD   reduce using rule 111 (goto_while -> .)
    INPUT_KEYWORD   reduce using rule 111 (goto_while -> .)
    RETURN          reduce using rule 111 (goto_while -> .)
    CLOSE_BRACKET   reduce using rule 111 (goto_while -> .)

    goto_while                     shift and go to state 357

state 334

    (215) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con . PRINT_D
    (220) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (221) PRINT_D -> . EMPTY
    (238) EMPTY -> .

    CONCATENATE     shift and go to state 358
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)

    PRINT_D                        shift and go to state 359
    EMPTY                          shift and go to state 360

state 335

    (216) PRINT_C -> CONCATENATE CTE_STRING add_exp . PRINT_D
    (220) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (221) PRINT_D -> . EMPTY
    (238) EMPTY -> .

    CONCATENATE     shift and go to state 358
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)

    PRINT_D                        shift and go to state 361
    EMPTY                          shift and go to state 360

state 336

    (163) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .

    ID              reduce using rule 163 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    IF              reduce using rule 163 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    FOR_KEYWORD     reduce using rule 163 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    WHILE_KEYWORD   reduce using rule 163 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    PRINT_KEYWORD   reduce using rule 163 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    INPUT_KEYWORD   reduce using rule 163 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    RETURN          reduce using rule 163 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    CLOSE_BRACKET   reduce using rule 163 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)


state 337

    (166) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . INPUT_B
    (168) INPUT_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET shift and go to state 362

    INPUT_B                        shift and go to state 363

state 338

    (63) MODULO_D -> CLOSE_PARENTHESIS param_table . OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 364


state 339

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 16 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 16 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .)


state 340

    (89) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ver_mat

    CLOSE_SQUARE_BRACKET shift and go to state 365


state 341

    (195) PLOT_G -> PLOT_K CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 366


state 342

    (196) PLOT_K -> CTE_STRING PLOT_H .

    CLOSE_PARENTHESIS reduce using rule 196 (PLOT_K -> CTE_STRING PLOT_H .)


state 343

    (197) PLOT_H -> COMMA . PLOT_K
    (196) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 309

    PLOT_K                         shift and go to state 367

state 344

    (198) PLOT_H -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 198 (PLOT_H -> EMPTY .)


state 345

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA . CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 368


state 346

    (199) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON . OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    OPEN_SQUARE_BRACKET shift and go to state 369


state 347

    (201) PLOT_O -> COMMA PLOT_N .

    CLOSE_SQUARE_BRACKET reduce using rule 201 (PLOT_O -> COMMA PLOT_N .)


state 348

    (77) LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_PARENTHESIS reduce using rule 77 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)


state 349

    (72) LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .

    CLOSE_PARENTHESIS reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    ID              reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    IF              reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    FOR_KEYWORD     reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    WHILE_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    PRINT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    INPUT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    RETURN          reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    CLOSE_BRACKET   reduce using rule 72 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)


state 350

    (95) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A . fill_end
    (97) fill_end -> .

    ID              reduce using rule 97 (fill_end -> .)
    IF              reduce using rule 97 (fill_end -> .)
    FOR_KEYWORD     reduce using rule 97 (fill_end -> .)
    WHILE_KEYWORD   reduce using rule 97 (fill_end -> .)
    PRINT_KEYWORD   reduce using rule 97 (fill_end -> .)
    INPUT_KEYWORD   reduce using rule 97 (fill_end -> .)
    RETURN          reduce using rule 97 (fill_end -> .)
    CLOSE_BRACKET   reduce using rule 97 (fill_end -> .)

    fill_end                       shift and go to state 370

state 351

    (99) CONDICION_A -> gotoElse . ELSE BLOQUE

    ELSE            shift and go to state 371


state 352

    (100) CONDICION_A -> EMPTY .

    ID              reduce using rule 100 (CONDICION_A -> EMPTY .)
    IF              reduce using rule 100 (CONDICION_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 100 (CONDICION_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 100 (CONDICION_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 100 (CONDICION_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 100 (CONDICION_A -> EMPTY .)
    RETURN          reduce using rule 100 (CONDICION_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 100 (CONDICION_A -> EMPTY .)


state 353

    (147) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET . pop_SB ver_arr VARS_CTE_D
    (157) pop_SB -> .

    OPEN_SQUARE_BRACKET reduce using rule 157 (pop_SB -> .)
    TIMES           reduce using rule 157 (pop_SB -> .)
    DIVIDE          reduce using rule 157 (pop_SB -> .)
    PLUS            reduce using rule 157 (pop_SB -> .)
    MINS            reduce using rule 157 (pop_SB -> .)
    RELOP           reduce using rule 157 (pop_SB -> .)
    AND             reduce using rule 157 (pop_SB -> .)
    OR              reduce using rule 157 (pop_SB -> .)
    CLOSE_PARENTHESIS reduce using rule 157 (pop_SB -> .)
    CONCATENATE     reduce using rule 157 (pop_SB -> .)
    SEMICOLON       reduce using rule 157 (pop_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 157 (pop_SB -> .)
    COMMA           reduce using rule 157 (pop_SB -> .)
    ID              reduce using rule 157 (pop_SB -> .)
    IF              reduce using rule 157 (pop_SB -> .)
    FOR_KEYWORD     reduce using rule 157 (pop_SB -> .)
    WHILE_KEYWORD   reduce using rule 157 (pop_SB -> .)
    PRINT_KEYWORD   reduce using rule 157 (pop_SB -> .)
    INPUT_KEYWORD   reduce using rule 157 (pop_SB -> .)
    RETURN          reduce using rule 157 (pop_SB -> .)
    CLOSE_BRACKET   reduce using rule 157 (pop_SB -> .)

    pop_SB                         shift and go to state 372

state 354

    (148) VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis . gosub
    (70) gosub -> .

    TIMES           reduce using rule 70 (gosub -> .)
    DIVIDE          reduce using rule 70 (gosub -> .)
    PLUS            reduce using rule 70 (gosub -> .)
    MINS            reduce using rule 70 (gosub -> .)
    RELOP           reduce using rule 70 (gosub -> .)
    AND             reduce using rule 70 (gosub -> .)
    OR              reduce using rule 70 (gosub -> .)
    CLOSE_PARENTHESIS reduce using rule 70 (gosub -> .)
    CONCATENATE     reduce using rule 70 (gosub -> .)
    SEMICOLON       reduce using rule 70 (gosub -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 70 (gosub -> .)
    COMMA           reduce using rule 70 (gosub -> .)
    ID              reduce using rule 70 (gosub -> .)
    IF              reduce using rule 70 (gosub -> .)
    FOR_KEYWORD     reduce using rule 70 (gosub -> .)
    WHILE_KEYWORD   reduce using rule 70 (gosub -> .)
    PRINT_KEYWORD   reduce using rule 70 (gosub -> .)
    INPUT_KEYWORD   reduce using rule 70 (gosub -> .)
    RETURN          reduce using rule 70 (gosub -> .)
    CLOSE_BRACKET   reduce using rule 70 (gosub -> .)

    gosub                          shift and go to state 373

state 355

    (158) VARS_CTE_B -> EXP check_types . VARS_CTE_C CLOSE_PARENTHESIS
    (159) VARS_CTE_C -> . COMMA incK VARS_CTE_B
    (160) VARS_CTE_C -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 375
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)

    VARS_CTE_C                     shift and go to state 374
    EMPTY                          shift and go to state 376

state 356

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION . get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (103) get_increment -> .

    CLOSE_PARENTHESIS reduce using rule 103 (get_increment -> .)

    get_increment                  shift and go to state 377

state 357

    (108) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .

    ID              reduce using rule 108 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    IF              reduce using rule 108 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    FOR_KEYWORD     reduce using rule 108 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    WHILE_KEYWORD   reduce using rule 108 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    PRINT_KEYWORD   reduce using rule 108 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    INPUT_KEYWORD   reduce using rule 108 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    RETURN          reduce using rule 108 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    CLOSE_BRACKET   reduce using rule 108 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)


state 358

    (220) PRINT_D -> CONCATENATE . add_sign PRINT_B
    (222) add_sign -> .

    CTE_STRING      reduce using rule 222 (add_sign -> .)
    NOT             reduce using rule 222 (add_sign -> .)
    OPEN_PARENTHESIS reduce using rule 222 (add_sign -> .)
    PLUS            reduce using rule 222 (add_sign -> .)
    MINS            reduce using rule 222 (add_sign -> .)
    CTE_INTEGER     reduce using rule 222 (add_sign -> .)
    CTE_FLOAT       reduce using rule 222 (add_sign -> .)
    TRUE            reduce using rule 222 (add_sign -> .)
    FALSE           reduce using rule 222 (add_sign -> .)
    ID              reduce using rule 222 (add_sign -> .)
    CONCATENATE     reduce using rule 222 (add_sign -> .)
    AND             reduce using rule 222 (add_sign -> .)
    OR              reduce using rule 222 (add_sign -> .)
    RELOP           reduce using rule 222 (add_sign -> .)
    TIMES           reduce using rule 222 (add_sign -> .)
    DIVIDE          reduce using rule 222 (add_sign -> .)
    CLOSE_PARENTHESIS reduce using rule 222 (add_sign -> .)

    add_sign                       shift and go to state 378

state 359

    (215) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 215 (PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .)


state 360

    (221) PRINT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 221 (PRINT_D -> EMPTY .)


state 361

    (216) PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 216 (PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .)


state 362

    (168) INPUT_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 379
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 363

    (166) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .

    SEMICOLON       reduce using rule 166 (INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .)


state 364

    (63) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET . OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (65) OPVARS -> . VARS
    (66) OPVARS -> . EMPTY
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A
    (238) EMPTY -> .

    VARS_KEYWORD    shift and go to state 7
    OPEN_BRACKET    reduce using rule 238 (EMPTY -> .)

    OPVARS                         shift and go to state 380
    VARS                           shift and go to state 381
    EMPTY                          shift and go to state 382

state 365

    (89) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ver_mat
    (91) ver_mat -> .

    EQUAL           reduce using rule 91 (ver_mat -> .)

    ver_mat                        shift and go to state 383

state 366

    (195) PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 195 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 195 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 195 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 195 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 195 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 195 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 195 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 195 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)


state 367

    (197) PLOT_H -> COMMA PLOT_K .

    CLOSE_PARENTHESIS reduce using rule 197 (PLOT_H -> COMMA PLOT_K .)


state 368

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER . SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 384


state 369

    (199) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET . PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (203) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 386

    PLOT_P                         shift and go to state 385

state 370

    (95) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .

    ID              reduce using rule 95 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    IF              reduce using rule 95 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    FOR_KEYWORD     reduce using rule 95 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    WHILE_KEYWORD   reduce using rule 95 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    PRINT_KEYWORD   reduce using rule 95 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    INPUT_KEYWORD   reduce using rule 95 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    RETURN          reduce using rule 95 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    CLOSE_BRACKET   reduce using rule 95 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)


state 371

    (99) CONDICION_A -> gotoElse ELSE . BLOQUE
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 387

state 372

    (147) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB . ver_arr VARS_CTE_D
    (88) ver_arr -> .

    OPEN_SQUARE_BRACKET reduce using rule 88 (ver_arr -> .)
    TIMES           reduce using rule 88 (ver_arr -> .)
    DIVIDE          reduce using rule 88 (ver_arr -> .)
    PLUS            reduce using rule 88 (ver_arr -> .)
    MINS            reduce using rule 88 (ver_arr -> .)
    RELOP           reduce using rule 88 (ver_arr -> .)
    AND             reduce using rule 88 (ver_arr -> .)
    OR              reduce using rule 88 (ver_arr -> .)
    CLOSE_PARENTHESIS reduce using rule 88 (ver_arr -> .)
    CONCATENATE     reduce using rule 88 (ver_arr -> .)
    SEMICOLON       reduce using rule 88 (ver_arr -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 88 (ver_arr -> .)
    COMMA           reduce using rule 88 (ver_arr -> .)
    ID              reduce using rule 88 (ver_arr -> .)
    IF              reduce using rule 88 (ver_arr -> .)
    FOR_KEYWORD     reduce using rule 88 (ver_arr -> .)
    WHILE_KEYWORD   reduce using rule 88 (ver_arr -> .)
    PRINT_KEYWORD   reduce using rule 88 (ver_arr -> .)
    INPUT_KEYWORD   reduce using rule 88 (ver_arr -> .)
    RETURN          reduce using rule 88 (ver_arr -> .)
    CLOSE_BRACKET   reduce using rule 88 (ver_arr -> .)

    ver_arr                        shift and go to state 388

state 373

    (148) VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .

    TIMES           reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    DIVIDE          reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    PLUS            reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    MINS            reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    RELOP           reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    AND             reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    OR              reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    CLOSE_PARENTHESIS reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    CONCATENATE     reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    SEMICOLON       reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    CLOSE_SQUARE_BRACKET reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    COMMA           reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    ID              reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    IF              reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    FOR_KEYWORD     reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    WHILE_KEYWORD   reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    PRINT_KEYWORD   reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    INPUT_KEYWORD   reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    RETURN          reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)
    CLOSE_BRACKET   reduce using rule 148 (VARS_CTE -> ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub .)


state 374

    (158) VARS_CTE_B -> EXP check_types VARS_CTE_C . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 389


state 375

    (159) VARS_CTE_C -> COMMA . incK VARS_CTE_B
    (74) incK -> .

    OPEN_PARENTHESIS reduce using rule 74 (incK -> .)
    PLUS            reduce using rule 74 (incK -> .)
    MINS            reduce using rule 74 (incK -> .)
    CTE_INTEGER     reduce using rule 74 (incK -> .)
    CTE_FLOAT       reduce using rule 74 (incK -> .)
    TRUE            reduce using rule 74 (incK -> .)
    FALSE           reduce using rule 74 (incK -> .)
    ID              reduce using rule 74 (incK -> .)
    COMMA           reduce using rule 74 (incK -> .)
    CLOSE_PARENTHESIS reduce using rule 74 (incK -> .)
    TIMES           reduce using rule 74 (incK -> .)
    DIVIDE          reduce using rule 74 (incK -> .)

    incK                           shift and go to state 390

state 376

    (160) VARS_CTE_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 160 (VARS_CTE_C -> EMPTY .)


state 377

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment . CLOSE_PARENTHESIS BLOQUE repeat_for

    CLOSE_PARENTHESIS shift and go to state 391


state 378

    (220) PRINT_D -> CONCATENATE add_sign . PRINT_B
    (208) PRINT_B -> . CTE_STRING add_string PRINT_C
    (209) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (223) EXPRESIONESVARIAS -> . NOT EV_C
    (224) EXPRESIONESVARIAS -> . EV_C
    (226) EV_C -> . EXP_RELOP quad_andor EV_B
    (232) EXP_RELOP -> . EXP EXP_RELOP_A
    (233) EXP_RELOP -> . EMPTY
    (113) EXP -> . TERMINO pop_exp EXP_A
    (238) EMPTY -> .
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 141
    NOT             shift and go to state 119
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    PRINT_B                        shift and go to state 392
    EXPRESIONESVARIAS              shift and go to state 142
    EV_C                           shift and go to state 120
    EXP_RELOP                      shift and go to state 121
    EXP                            shift and go to state 122
    EMPTY                          shift and go to state 123
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    VARS_CTE                       shift and go to state 130

state 379

    (168) INPUT_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 393


state 380

    (63) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS . add_count add_start BLOQUE CLOSE_BRACKET
    (3) add_count -> .

    OPEN_BRACKET    reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 394

state 381

    (65) OPVARS -> VARS .

    OPEN_BRACKET    reduce using rule 65 (OPVARS -> VARS .)


state 382

    (66) OPVARS -> EMPTY .

    OPEN_BRACKET    reduce using rule 66 (OPVARS -> EMPTY .)


state 383

    (89) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .

    EQUAL           reduce using rule 89 (ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)


state 384

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON . CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 395


state 385

    (199) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 396


state 386

    (203) PLOT_P -> CTE_STRING . PLOT_Q
    (204) PLOT_Q -> . COMMA PLOT_P
    (205) PLOT_Q -> . EMPTY
    (238) EMPTY -> .

    COMMA           shift and go to state 398
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)

    PLOT_Q                         shift and go to state 397
    EMPTY                          shift and go to state 399

state 387

    (99) CONDICION_A -> gotoElse ELSE BLOQUE .

    ID              reduce using rule 99 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    IF              reduce using rule 99 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    FOR_KEYWORD     reduce using rule 99 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    WHILE_KEYWORD   reduce using rule 99 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    PRINT_KEYWORD   reduce using rule 99 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    INPUT_KEYWORD   reduce using rule 99 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    RETURN          reduce using rule 99 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    CLOSE_BRACKET   reduce using rule 99 (CONDICION_A -> gotoElse ELSE BLOQUE .)


state 388

    (147) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr . VARS_CTE_D
    (161) VARS_CTE_D -> . OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat
    (162) VARS_CTE_D -> . EMPTY
    (238) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 400
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    PLUS            reduce using rule 238 (EMPTY -> .)
    MINS            reduce using rule 238 (EMPTY -> .)
    RELOP           reduce using rule 238 (EMPTY -> .)
    AND             reduce using rule 238 (EMPTY -> .)
    OR              reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CONCATENATE     reduce using rule 238 (EMPTY -> .)
    SEMICOLON       reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    ID              reduce using rule 238 (EMPTY -> .)
    IF              reduce using rule 238 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 238 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 238 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 238 (EMPTY -> .)
    RETURN          reduce using rule 238 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 238 (EMPTY -> .)

    VARS_CTE_D                     shift and go to state 401
    EMPTY                          shift and go to state 402

state 389

    (158) VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .

    TIMES           reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    MINS            reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    AND             reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    OR              reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    CONCATENATE     reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    ID              reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    IF              reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 158 (VARS_CTE_B -> EXP check_types VARS_CTE_C CLOSE_PARENTHESIS .)


state 390

    (159) VARS_CTE_C -> COMMA incK . VARS_CTE_B
    (158) VARS_CTE_B -> . EXP check_types VARS_CTE_C CLOSE_PARENTHESIS
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    COMMA           reduce using rule 238 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 403
    EXP                            shift and go to state 331
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 391

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS . BLOQUE repeat_for
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 404

state 392

    (220) PRINT_D -> CONCATENATE add_sign PRINT_B .

    CLOSE_PARENTHESIS reduce using rule 220 (PRINT_D -> CONCATENATE add_sign PRINT_B .)


state 393

    (168) INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 168 (INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 394

    (63) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count . add_start BLOQUE CLOSE_BRACKET
    (67) add_start -> .

    OPEN_BRACKET    reduce using rule 67 (add_start -> .)

    add_start                      shift and go to state 405

state 395

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING . COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 406


state 396

    (199) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 407


state 397

    (203) PLOT_P -> CTE_STRING PLOT_Q .

    CLOSE_SQUARE_BRACKET reduce using rule 203 (PLOT_P -> CTE_STRING PLOT_Q .)


state 398

    (204) PLOT_Q -> COMMA . PLOT_P
    (203) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 386

    PLOT_P                         shift and go to state 408

state 399

    (205) PLOT_Q -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 205 (PLOT_Q -> EMPTY .)


state 400

    (161) VARS_CTE_D -> OPEN_SQUARE_BRACKET . add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat
    (156) add_SB -> .

    OPEN_PARENTHESIS reduce using rule 156 (add_SB -> .)
    PLUS            reduce using rule 156 (add_SB -> .)
    MINS            reduce using rule 156 (add_SB -> .)
    CTE_INTEGER     reduce using rule 156 (add_SB -> .)
    CTE_FLOAT       reduce using rule 156 (add_SB -> .)
    TRUE            reduce using rule 156 (add_SB -> .)
    FALSE           reduce using rule 156 (add_SB -> .)
    ID              reduce using rule 156 (add_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 156 (add_SB -> .)
    TIMES           reduce using rule 156 (add_SB -> .)
    DIVIDE          reduce using rule 156 (add_SB -> .)

    add_SB                         shift and go to state 409

state 401

    (147) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .

    TIMES           reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    DIVIDE          reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    PLUS            reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    MINS            reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    RELOP           reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    AND             reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    OR              reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_PARENTHESIS reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CONCATENATE     reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    SEMICOLON       reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_SQUARE_BRACKET reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    COMMA           reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    ID              reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    IF              reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    FOR_KEYWORD     reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    WHILE_KEYWORD   reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    PRINT_KEYWORD   reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    INPUT_KEYWORD   reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    RETURN          reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_BRACKET   reduce using rule 147 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)


state 402

    (162) VARS_CTE_D -> EMPTY .

    TIMES           reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    DIVIDE          reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    PLUS            reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    MINS            reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    RELOP           reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    AND             reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    OR              reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    CONCATENATE     reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    SEMICOLON       reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    COMMA           reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    ID              reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    IF              reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    RETURN          reduce using rule 162 (VARS_CTE_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 162 (VARS_CTE_D -> EMPTY .)


state 403

    (159) VARS_CTE_C -> COMMA incK VARS_CTE_B .

    CLOSE_PARENTHESIS reduce using rule 159 (VARS_CTE_C -> COMMA incK VARS_CTE_B .)


state 404

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE . repeat_for
    (106) repeat_for -> .

    ID              reduce using rule 106 (repeat_for -> .)
    IF              reduce using rule 106 (repeat_for -> .)
    FOR_KEYWORD     reduce using rule 106 (repeat_for -> .)
    WHILE_KEYWORD   reduce using rule 106 (repeat_for -> .)
    PRINT_KEYWORD   reduce using rule 106 (repeat_for -> .)
    INPUT_KEYWORD   reduce using rule 106 (repeat_for -> .)
    RETURN          reduce using rule 106 (repeat_for -> .)
    CLOSE_BRACKET   reduce using rule 106 (repeat_for -> .)

    repeat_for                     shift and go to state 410

state 405

    (63) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start . BLOQUE CLOSE_BRACKET
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 411

state 406

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 412


state 407

    (199) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 413


state 408

    (204) PLOT_Q -> COMMA PLOT_P .

    CLOSE_SQUARE_BRACKET reduce using rule 204 (PLOT_Q -> COMMA PLOT_P .)


state 409

    (161) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB . EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat
    (113) EXP -> . TERMINO pop_exp EXP_A
    (119) TERMINO -> . FACTOR pop_term TERMINO_A
    (132) FACTOR -> . FACTOR_A
    (133) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (134) FACTOR_A -> . PLUS FACTOR_C
    (135) FACTOR_A -> . MINS FACTOR_C
    (136) FACTOR_A -> . FACTOR_C
    (137) FACTOR_A -> . EMPTY
    (141) FACTOR_C -> . VARS_CTE
    (238) EMPTY -> .
    (142) VARS_CTE -> . CTE_INTEGER append_cte_int
    (143) VARS_CTE -> . CTE_FLOAT append_cte_float
    (144) VARS_CTE -> . TRUE append_bool
    (145) VARS_CTE -> . FALSE append_bool
    (146) VARS_CTE -> . ID append_id
    (147) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (148) VARS_CTE -> . ID era OPEN_PARENTHESIS add_parenthesis VARS_CTE_B pop_parenthesis gosub

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 117
    PLUS            shift and go to state 127
    MINS            shift and go to state 129
    TIMES           reduce using rule 238 (EMPTY -> .)
    DIVIDE          reduce using rule 238 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 238 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 131
    CTE_FLOAT       shift and go to state 132
    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    ID              shift and go to state 135

  ! PLUS            [ reduce using rule 238 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 238 (EMPTY -> .) ]

    EXP                            shift and go to state 414
    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 125
    FACTOR_A                       shift and go to state 126
    FACTOR_C                       shift and go to state 128
    EMPTY                          shift and go to state 151
    VARS_CTE                       shift and go to state 130

state 410

    (102) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .

    ID              reduce using rule 102 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    IF              reduce using rule 102 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    FOR_KEYWORD     reduce using rule 102 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    WHILE_KEYWORD   reduce using rule 102 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    PRINT_KEYWORD   reduce using rule 102 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    INPUT_KEYWORD   reduce using rule 102 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    RETURN          reduce using rule 102 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    CLOSE_BRACKET   reduce using rule 102 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)


state 411

    (63) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 415


state 412

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 416


state 413

    (199) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 199 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 199 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 199 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 199 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 199 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 199 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 199 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 199 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)


state 414

    (161) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP . CLOSE_SQUARE_BRACKET pop_SB ver_mat

    CLOSE_SQUARE_BRACKET shift and go to state 417


state 415

    (63) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .

    MODULE          reduce using rule 63 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)
    MAIN            reduce using rule 63 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 63 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)


state 416

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 418


state 417

    (161) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET . pop_SB ver_mat
    (157) pop_SB -> .

    TIMES           reduce using rule 157 (pop_SB -> .)
    DIVIDE          reduce using rule 157 (pop_SB -> .)
    PLUS            reduce using rule 157 (pop_SB -> .)
    MINS            reduce using rule 157 (pop_SB -> .)
    RELOP           reduce using rule 157 (pop_SB -> .)
    AND             reduce using rule 157 (pop_SB -> .)
    OR              reduce using rule 157 (pop_SB -> .)
    CLOSE_PARENTHESIS reduce using rule 157 (pop_SB -> .)
    CONCATENATE     reduce using rule 157 (pop_SB -> .)
    SEMICOLON       reduce using rule 157 (pop_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 157 (pop_SB -> .)
    COMMA           reduce using rule 157 (pop_SB -> .)
    ID              reduce using rule 157 (pop_SB -> .)
    IF              reduce using rule 157 (pop_SB -> .)
    FOR_KEYWORD     reduce using rule 157 (pop_SB -> .)
    WHILE_KEYWORD   reduce using rule 157 (pop_SB -> .)
    PRINT_KEYWORD   reduce using rule 157 (pop_SB -> .)
    INPUT_KEYWORD   reduce using rule 157 (pop_SB -> .)
    RETURN          reduce using rule 157 (pop_SB -> .)
    CLOSE_BRACKET   reduce using rule 157 (pop_SB -> .)

    pop_SB                         shift and go to state 419

state 418

    (183) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 183 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 183 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 183 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 183 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 183 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 183 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 183 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 183 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 419

    (161) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB . ver_mat
    (91) ver_mat -> .

    TIMES           reduce using rule 91 (ver_mat -> .)
    DIVIDE          reduce using rule 91 (ver_mat -> .)
    PLUS            reduce using rule 91 (ver_mat -> .)
    MINS            reduce using rule 91 (ver_mat -> .)
    RELOP           reduce using rule 91 (ver_mat -> .)
    AND             reduce using rule 91 (ver_mat -> .)
    OR              reduce using rule 91 (ver_mat -> .)
    CLOSE_PARENTHESIS reduce using rule 91 (ver_mat -> .)
    CONCATENATE     reduce using rule 91 (ver_mat -> .)
    SEMICOLON       reduce using rule 91 (ver_mat -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 91 (ver_mat -> .)
    COMMA           reduce using rule 91 (ver_mat -> .)
    ID              reduce using rule 91 (ver_mat -> .)
    IF              reduce using rule 91 (ver_mat -> .)
    FOR_KEYWORD     reduce using rule 91 (ver_mat -> .)
    WHILE_KEYWORD   reduce using rule 91 (ver_mat -> .)
    PRINT_KEYWORD   reduce using rule 91 (ver_mat -> .)
    INPUT_KEYWORD   reduce using rule 91 (ver_mat -> .)
    RETURN          reduce using rule 91 (ver_mat -> .)
    CLOSE_BRACKET   reduce using rule 91 (ver_mat -> .)

    ver_mat                        shift and go to state 420

state 420

    (161) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .

    TIMES           reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    DIVIDE          reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    PLUS            reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    MINS            reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    RELOP           reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    AND             reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    OR              reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    CLOSE_PARENTHESIS reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    CONCATENATE     reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    SEMICOLON       reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    CLOSE_SQUARE_BRACKET reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    COMMA           reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    ID              reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    IF              reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    FOR_KEYWORD     reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    WHILE_KEYWORD   reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    PRINT_KEYWORD   reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    INPUT_KEYWORD   reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    RETURN          reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    CLOSE_BRACKET   reduce using rule 161 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINS in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINS in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINS in state 116 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINS in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINS in state 138 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 164 resolved as shift
WARNING: shift/reduce conflict for MINS in state 164 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 181 resolved as shift
WARNING: shift/reduce conflict for MINS in state 181 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 194 resolved as shift
WARNING: shift/reduce conflict for MINS in state 194 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 228 resolved as shift
WARNING: shift/reduce conflict for MINS in state 228 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 243 resolved as shift
WARNING: shift/reduce conflict for MINS in state 243 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 247 resolved as shift
WARNING: shift/reduce conflict for MINS in state 247 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 251 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 274 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 279 resolved as shift
WARNING: shift/reduce conflict for MINS in state 279 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 280 resolved as shift
WARNING: shift/reduce conflict for MINS in state 280 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 282 resolved as shift
WARNING: shift/reduce conflict for MINS in state 282 resolved as shift
WARNING: shift/reduce conflict for ID in state 282 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 283 resolved as shift
WARNING: shift/reduce conflict for MINS in state 283 resolved as shift
WARNING: shift/reduce conflict for ID in state 283 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 284 resolved as shift
WARNING: shift/reduce conflict for MINS in state 284 resolved as shift
WARNING: shift/reduce conflict for ID in state 284 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 285 resolved as shift
WARNING: shift/reduce conflict for MINS in state 285 resolved as shift
WARNING: shift/reduce conflict for ID in state 285 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 286 resolved as shift
WARNING: shift/reduce conflict for MINS in state 286 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 287 resolved as shift
WARNING: shift/reduce conflict for MINS in state 287 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 300 resolved as shift
WARNING: shift/reduce conflict for MINS in state 300 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 319 resolved as shift
WARNING: shift/reduce conflict for MINS in state 319 resolved as shift
WARNING: shift/reduce conflict for ID in state 319 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 362 resolved as shift
WARNING: shift/reduce conflict for MINS in state 362 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 378 resolved as shift
WARNING: shift/reduce conflict for MINS in state 378 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 390 resolved as shift
WARNING: shift/reduce conflict for MINS in state 390 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 409 resolved as shift
WARNING: shift/reduce conflict for MINS in state 409 resolved as shift
WARNING: reduce/reduce conflict in state 123 resolved using rule (FACTOR_A -> EMPTY)
WARNING: rejected rule (EXP_RELOP -> EMPTY) in state 123
WARNING: Rule (EXP_RELOP -> EMPTY) is never reduced
