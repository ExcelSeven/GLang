Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN
    CREATE
    CTE_CHAR
    E
    PI
    QUOTE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
Rule 2     end_quad -> <empty>
Rule 3     add_count -> <empty>
Rule 4     addfunction -> <empty>
Rule 5     quad_main -> <empty>
Rule 6     PROGRAMA_A -> MODULO PROGRAMA_A
Rule 7     PROGRAMA_A -> EMPTY
Rule 8     VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A
Rule 9     VARS_A -> TIPO_P VARS_B
Rule 10    VARS_A -> TIPO_S VARS_B
Rule 11    VARS_B -> ID add_variable VARS_E VARS_C
Rule 12    add_variable -> <empty>
Rule 13    VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F
Rule 14    VARS_E -> EMPTY
Rule 15    add_s1 -> <empty>
Rule 16    VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET
Rule 17    VARS_F -> EMPTY
Rule 18    add_s2 -> <empty>
Rule 19    VARS_C -> SEMICOLON VARS_D
Rule 20    VARS_C -> COMMA VARS_B
Rule 21    VARS_D -> CLOSE_BRACKET
Rule 22    VARS_D -> VARS_A
Rule 23    BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET
Rule 24    ESTATUTO_A -> ESTATUTO ESTATUTO_A
Rule 25    ESTATUTO_A -> EMPTY
Rule 26    ESTATUTO -> ASIGNACION
Rule 27    ESTATUTO -> CONDICION
Rule 28    ESTATUTO -> NOMBRAR
Rule 29    ESTATUTO -> FOR
Rule 30    ESTATUTO -> WHILE
Rule 31    ESTATUTO -> PRINT
Rule 32    ESTATUTO -> PLOT
Rule 33    ESTATUTO -> LLAMADAMODULO
Rule 34    ESTATUTO -> INPUT
Rule 35    ESTATUTO -> COLOR
Rule 36    ESTATUTO -> RETURNOP
Rule 37    TIPO_P -> INT
Rule 38    TIPO_P -> FLOAT
Rule 39    TIPO_P -> BOOL
Rule 40    TIPO_P -> CHAR
Rule 41    TIPO_S -> TYPE_GRAPH
Rule 42    TIPO_S -> TYPE_PIECHART
Rule 43    TIPO_S -> TYPE_BARCHART
Rule 44    TIPO_S -> TYPE_HORBARCHART
Rule 45    TIPO_S -> TYPE_DONUTGRAPH
Rule 46    TIPO_S -> TYPE_NETWORK
Rule 47    TIPO_S -> TYPE_VENN
Rule 48    TIPO_S -> TYPE_RADARCHART
Rule 49    MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
Rule 50    RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON
Rule 51    return_quad -> <empty>
Rule 52    release_vars -> <empty>
Rule 53    endproc -> <empty>
Rule 54    change_scope -> <empty>
Rule 55    add_functionr -> <empty>
Rule 56    MODULO_A -> VOID
Rule 57    MODULO_A -> TIPO_P
Rule 58    MODULO_B -> COMMA MODULO_C
Rule 59    MODULO_B -> EMPTY
Rule 60    MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D
Rule 61    add_variable_m -> <empty>
Rule 62    MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
Rule 63    MODULO_D -> EMPTY
Rule 64    OPVARS -> VARS
Rule 65    OPVARS -> EMPTY
Rule 66    add_start -> <empty>
Rule 67    param_table -> <empty>
Rule 68    LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
Rule 69    gosub -> <empty>
Rule 70    era -> <empty>
Rule 71    LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C
Rule 72    LLAMADAMODULO_A -> EMPTY
Rule 73    incK -> <empty>
Rule 74    LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
Rule 75    check_types -> <empty>
Rule 76    LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON
Rule 77    LLAMADAMODULO_D -> EMPTY
Rule 78    NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 79    NOMBRAR_A -> NAME
Rule 80    NOMBRAR_A -> NAMEX
Rule 81    NOMBRAR_A -> NAMEY
Rule 82    ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
Rule 83    quad -> <empty>
Rule 84    addStackO -> <empty>
Rule 85    ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
Rule 86    ASIGNACION_A -> EMPTY
Rule 87    ver_arr -> <empty>
Rule 88    ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat
Rule 89    ASIGNACION_B -> EMPTY
Rule 90    ver_mat -> <empty>
Rule 91    ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS
Rule 92    ASIGNACION_C -> EQUAL CTE_STRING
Rule 93    add_equal -> <empty>
Rule 94    CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
Rule 95    if_gotof -> <empty>
Rule 96    fill_end -> <empty>
Rule 97    check_bool -> <empty>
Rule 98    CONDICION_A -> gotoElse ELSE BLOQUE
Rule 99    CONDICION_A -> EMPTY
Rule 100   gotoElse -> <empty>
Rule 101   FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
Rule 102   get_increment -> <empty>
Rule 103   for_jump -> <empty>
Rule 104   for_gotof -> <empty>
Rule 105   repeat_for -> <empty>
Rule 106   bool_for -> <empty>
Rule 107   WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
Rule 108   while_gotof -> <empty>
Rule 109   while_jump -> <empty>
Rule 110   goto_while -> <empty>
Rule 111   bool_while -> <empty>
Rule 112   EXP -> TERMINO pop_exp EXP_A
Rule 113   pop_exp -> <empty>
Rule 114   EXP_A -> PLUS append_operator EXP
Rule 115   EXP_A -> MINS append_operator EXP
Rule 116   EXP_A -> EMPTY
Rule 117   append_operator -> <empty>
Rule 118   TERMINO -> FACTOR pop_term TERMINO_A
Rule 119   pop_term -> <empty>
Rule 120   TERMINO_A -> TIMES add_operator TERMINO
Rule 121   TERMINO_A -> DIVIDE add_operator TERMINO
Rule 122   TERMINO_A -> EMPTY
Rule 123   add_operator -> <empty>
Rule 124   COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
Rule 125   COLOR_A -> COLOR_RED
Rule 126   COLOR_A -> COLOR_BLACK
Rule 127   COLOR_A -> COLOR_BLUE
Rule 128   COLOR_A -> COLOR_PURPLE
Rule 129   COLOR_A -> COLOR_GREEN
Rule 130   COLOR_A -> COLOR_ORANGE
Rule 131   FACTOR -> FACTOR_A
Rule 132   FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
Rule 133   FACTOR_A -> PLUS FACTOR_C
Rule 134   FACTOR_A -> MINS FACTOR_C
Rule 135   FACTOR_A -> FACTOR_C
Rule 136   FACTOR_A -> EMPTY
Rule 137   add_parenthesis -> <empty>
Rule 138   pop_parenthesis -> <empty>
Rule 139   FACTOR_B -> EXPRESIONESVARIAS
Rule 140   FACTOR_C -> VARS_CTE
Rule 141   VARS_CTE -> CTE_INTEGER append_cte_int
Rule 142   VARS_CTE -> CTE_FLOAT append_cte_float
Rule 143   VARS_CTE -> TRUE append_bool
Rule 144   VARS_CTE -> FALSE append_bool
Rule 145   VARS_CTE -> ID append_id
Rule 146   VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
Rule 147   VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B
Rule 148   append_id -> <empty>
Rule 149   append_cte_int -> <empty>
Rule 150   append_cte_float -> <empty>
Rule 151   append_bool -> <empty>
Rule 152   VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B
Rule 153   VARS_CTE_A -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
Rule 154   VARS_CTE_A -> EMPTY
Rule 155   add_SB -> <empty>
Rule 156   pop_SB -> <empty>
Rule 157   VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS
Rule 158   VARS_CTE_C -> COMMA VARS_CTE_B
Rule 159   VARS_CTE_C -> EMPTY
Rule 160   VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat
Rule 161   VARS_CTE_D -> EMPTY
Rule 162   INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
Rule 163   add_inputid -> <empty>
Rule 164   quad_input -> <empty>
Rule 165   INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
Rule 166   INPUT_A -> EMPTY
Rule 167   INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 168   PLOT -> PGraph
Rule 169   PLOT -> PPie
Rule 170   PLOT -> PGBarras
Rule 171   PLOT -> PGBarrasHor
Rule 172   PLOT -> PDona
Rule 173   PLOT -> PRadar
Rule 174   PLOT -> PVenn
Rule 175   PLOT -> PLOT_B
Rule 176   PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
Rule 177   PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
Rule 178   PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
Rule 179   PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
Rule 180   PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E
Rule 181   PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E
Rule 182   PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 183   PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
Rule 184   PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON
Rule 185   PLOT_I -> CTE_INTEGER PLOT_D
Rule 186   PLOT_I -> CTE_FLOAT PLOT_D
Rule 187   PLOT_D -> COMMA PLOT_I
Rule 188   PLOT_D -> EMPTY
Rule 189   PLOT_E -> PLOT_F SEMICOLON PLOT_G
Rule 190   PLOT_F -> CTE_INTEGER PLOT_J
Rule 191   PLOT_F -> CTE_FLOAT PLOT_J
Rule 192   PLOT_J -> COMMA PLOT_F
Rule 193   PLOT_J -> EMPTY
Rule 194   PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON
Rule 195   PLOT_K -> CTE_STRING PLOT_H
Rule 196   PLOT_H -> COMMA PLOT_K
Rule 197   PLOT_H -> EMPTY
Rule 198   PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
Rule 199   PLOT_N -> CTE_STRING PLOT_O
Rule 200   PLOT_O -> COMMA PLOT_N
Rule 201   PLOT_O -> EMPTY
Rule 202   PLOT_P -> CTE_STRING PLOT_Q
Rule 203   PLOT_Q -> COMMA PLOT_P
Rule 204   PLOT_Q -> EMPTY
Rule 205   PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
Rule 206   PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
Rule 207   PRINT_B -> CTE_STRING add_string PRINT_C
Rule 208   PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C
Rule 209   add_temp -> <empty>
Rule 210   add_string -> <empty>
Rule 211   print_quad -> <empty>
Rule 212   print_string -> <empty>
Rule 213   print_id -> <empty>
Rule 214   PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
Rule 215   PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D
Rule 216   PRINT_C -> EMPTY
Rule 217   add_exp -> <empty>
Rule 218   add_con -> <empty>
Rule 219   PRINT_D -> CONCATENATE add_sign PRINT_B
Rule 220   PRINT_D -> EMPTY
Rule 221   add_sign -> <empty>
Rule 222   EXPRESIONESVARIAS -> NOT EV_C
Rule 223   EXPRESIONESVARIAS -> EV_C
Rule 224   quad_not -> <empty>
Rule 225   EV_C -> EXP_RELOP quad_andor EV_B
Rule 226   quad_andor -> <empty>
Rule 227   EV_B -> AND add_ev EV_C
Rule 228   EV_B -> OR add_ev EV_C
Rule 229   EV_B -> EMPTY
Rule 230   add_ev -> <empty>
Rule 231   EXP_RELOP -> EXP EXP_RELOP_A
Rule 232   EXP_RELOP -> EMPTY
Rule 233   EXP_RELOP_A -> RELOP add_relop EXP quad_relop
Rule 234   EXP_RELOP_A -> EMPTY
Rule 235   quad_relop -> <empty>
Rule 236   add_relop -> <empty>
Rule 237   EMPTY -> <empty>

Terminals, with rules where they appear

AND                  : 227
BOOL                 : 39
BOOLEAN              : 
CHAR                 : 40
CLOSE_BRACKET        : 1 21 23 62
CLOSE_PARENTHESIS    : 62 76 78 94 101 107 124 132 157 182 184 194 198 206
CLOSE_SQUARE_BRACKET : 13 16 85 88 146 153 160 165 167 198 198
COLOR_BLACK          : 126
COLOR_BLUE           : 127
COLOR_GREEN          : 129
COLOR_KEYWORD        : 124
COLOR_ORANGE         : 130
COLOR_PURPLE         : 128
COLOR_RED            : 125
COMMA                : 20 58 71 158 182 182 182 187 192 196 200 203
CONCATENATE          : 214 215 219
CREATE               : 
CREATED              : 180
CREATEG              : 176
CREATEGB             : 178
CREATEGBH            : 179
CREATEN              : 183
CREATEPC             : 177
CREATER              : 181
CREATEV              : 182
CTE_CHAR             : 
CTE_FLOAT            : 142 186 191
CTE_INTEGER          : 13 16 141 182 182 182 185 190
CTE_STRING           : 78 92 182 182 195 199 202 207 215
DIVIDE               : 121
E                    : 
ELSE                 : 98
EQUAL                : 91 92
FALSE                : 144
FLOAT                : 38
FOR_KEYWORD          : 101
ID                   : 1 11 49 60 68 78 82 124 145 146 147 162 176 177 178 179 180 181 182 183
IF                   : 94
INPUTSYMBOL          : 162
INPUT_KEYWORD        : 162
INT                  : 37
MAIN                 : 1
MINS                 : 115 134
MODULE               : 49
NAME                 : 79
NAMEX                : 80
NAMEY                : 81
NOT                  : 222
OPEN_BRACKET         : 1 8 23 62
OPEN_PARENTHESIS     : 49 68 78 94 101 107 124 132 147 152 176 177 178 179 180 181 182 183 205
OPEN_SQUARE_BRACKET  : 13 16 85 88 146 153 160 165 167 183 198
OR                   : 228
PI                   : 
PLUS                 : 114 133
POINT                : 78 124 176 177 178 179 180 181 182 183
PRINT_KEYWORD        : 205
PROGRAM              : 1
QUOTE                : 
RELOP                : 233
RETURN               : 50
SEMICOLON            : 19 50 76 78 82 101 124 162 182 182 184 189 194 198 198 206
TIMES                : 120
TRUE                 : 143
TYPE_BARCHART        : 43
TYPE_DONUTGRAPH      : 45
TYPE_GRAPH           : 41
TYPE_HORBARCHART     : 44
TYPE_NETWORK         : 46
TYPE_PIECHART        : 42
TYPE_RADARCHART      : 48
TYPE_VENN            : 47
VARS_KEYWORD         : 8
VOID                 : 56
WHILE_KEYWORD        : 107
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 26 101 101
ASIGNACION_A         : 82
ASIGNACION_B         : 85
ASIGNACION_C         : 82
BLOQUE               : 1 62 94 98 101 107
COLOR                : 35
COLOR_A              : 124
CONDICION            : 27
CONDICION_A          : 94
EMPTY                : 7 14 17 25 59 63 65 72 77 86 89 99 116 122 136 154 159 161 166 188 193 197 201 204 216 220 229 232 234
ESTATUTO             : 24
ESTATUTO_A           : 23 24
EV_B                 : 225
EV_C                 : 222 223 227 228
EXP                  : 74 85 88 114 115 146 153 157 160 165 167 231 233
EXPRESIONESVARIAS    : 50 91 94 101 107 139 208 214
EXP_A                : 112
EXP_RELOP            : 225
EXP_RELOP_A          : 231
FACTOR               : 118
FACTOR_A             : 131
FACTOR_B             : 132
FACTOR_C             : 133 134 135
FOR                  : 29
INPUT                : 34
INPUT_A              : 162
INPUT_B              : 165
LLAMADAMODULO        : 33
LLAMADAMODULO_A      : 74
LLAMADAMODULO_C      : 68 71
LLAMADAMODULO_D      : 74
MODULO               : 6
MODULO_A             : 49
MODULO_B             : 60
MODULO_C             : 49 58
MODULO_D             : 60
NOMBRAR              : 28
NOMBRAR_A            : 78
OPVARS               : 62
PDona                : 172
PGBarras             : 170
PGBarrasHor          : 171
PGraph               : 168
PLOT                 : 32
PLOT_B               : 175
PLOT_C               : 176
PLOT_D               : 185 186
PLOT_E               : 177 178 179 180 181
PLOT_F               : 189 192
PLOT_G               : 189
PLOT_H               : 195
PLOT_I               : 184 187
PLOT_J               : 190 191
PLOT_K               : 194 196
PLOT_M               : 183
PLOT_N               : 198 200
PLOT_O               : 199
PLOT_P               : 198 203
PLOT_Q               : 202
PPie                 : 169
PRINT                : 31
PRINT_A              : 205
PRINT_B              : 206 219
PRINT_C              : 207 208
PRINT_D              : 214 215
PROGRAMA             : 0
PROGRAMA_A           : 1 6
PRadar               : 173
PVenn                : 174
RETURNOP             : 36
TERMINO              : 112 120 121
TERMINO_A            : 118
TIPO_P               : 9 57 60
TIPO_S               : 10
VARS                 : 1 64
VARS_A               : 8 22
VARS_B               : 9 10 20
VARS_C               : 11
VARS_CTE             : 140
VARS_CTE_A           : 
VARS_CTE_B           : 147 152 158
VARS_CTE_C           : 157
VARS_CTE_D           : 146 153
VARS_D               : 19
VARS_E               : 11
VARS_F               : 13
WHILE                : 30
addStackO            : 82
add_SB               : 146 153 160
add_con              : 214
add_count            : 1 62
add_equal            : 91
add_ev               : 227 228
add_exp              : 215
add_functionr        : 49
add_inputid          : 162
add_operator         : 120 121
add_parenthesis      : 132
add_relop            : 233
add_s1               : 13
add_s2               : 16
add_sign             : 219
add_start            : 62
add_string           : 207
add_temp             : 208
add_variable         : 11
add_variable_m       : 60
addfunction          : 1
append_bool          : 143 144
append_cte_float     : 142
append_cte_int       : 141
append_id            : 145 146 147
append_operator      : 114 115
bool_for             : 
bool_while           : 
change_scope         : 49
check_bool           : 
check_types          : 74
end_quad             : 1
endproc              : 49
era                  : 68
fill_end             : 94
for_gotof            : 101
for_jump             : 101
get_increment        : 101
gosub                : 68
gotoElse             : 98
goto_while           : 107
if_gotof             : 94
incK                 : 71
param_table          : 62
pop_SB               : 146 153 160
pop_exp              : 112
pop_parenthesis      : 132
pop_term             : 118
print_id             : 
print_quad           : 206
print_string         : 
quad                 : 82
quad_andor           : 225
quad_input           : 162
quad_main            : 1
quad_not             : 94
quad_relop           : 233
release_vars         : 49
repeat_for           : 101
return_quad          : 50
ver_arr              : 85 146 153
ver_mat              : 88 160
while_gotof          : 107
while_jump           : 107

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (4) addfunction -> .

    OPEN_BRACKET    reduce using rule 4 (addfunction -> .)

    addfunction                    shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addfunction . OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    OPEN_BRACKET    shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET . VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 6

state 6

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS . add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (3) add_count -> .

    MODULE          reduce using rule 3 (add_count -> .)
    MAIN            reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 8

state 7

    (8) VARS -> VARS_KEYWORD . OPEN_BRACKET VARS_A

    OPEN_BRACKET    shift and go to state 9


state 8

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count . PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (49) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (237) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 237 (EMPTY -> .)

    PROGRAMA_A                     shift and go to state 10
    MODULO                         shift and go to state 11
    EMPTY                          shift and go to state 12

state 9

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR
    (41) TIPO_S -> . TYPE_GRAPH
    (42) TIPO_S -> . TYPE_PIECHART
    (43) TIPO_S -> . TYPE_BARCHART
    (44) TIPO_S -> . TYPE_HORBARCHART
    (45) TIPO_S -> . TYPE_DONUTGRAPH
    (46) TIPO_S -> . TYPE_NETWORK
    (47) TIPO_S -> . TYPE_VENN
    (48) TIPO_S -> . TYPE_RADARCHART

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_A                         shift and go to state 14
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 10

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A . MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    MAIN            shift and go to state 29


state 11

    (6) PROGRAMA_A -> MODULO . PROGRAMA_A
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (49) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (237) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 237 (EMPTY -> .)

    MODULO                         shift and go to state 11
    PROGRAMA_A                     shift and go to state 30
    EMPTY                          shift and go to state 12

state 12

    (7) PROGRAMA_A -> EMPTY .

    MAIN            reduce using rule 7 (PROGRAMA_A -> EMPTY .)


state 13

    (49) MODULO -> MODULE . MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (56) MODULO_A -> . VOID
    (57) MODULO_A -> . TIPO_P
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    VOID            shift and go to state 32
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_A                       shift and go to state 31
    TIPO_P                         shift and go to state 33

state 14

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .

    MODULE          reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    MAIN            reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    OPEN_BRACKET    reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)


state 15

    (9) VARS_A -> TIPO_P . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 34

state 16

    (10) VARS_A -> TIPO_S . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 36

state 17

    (37) TIPO_P -> INT .

    ID              reduce using rule 37 (TIPO_P -> INT .)


state 18

    (38) TIPO_P -> FLOAT .

    ID              reduce using rule 38 (TIPO_P -> FLOAT .)


state 19

    (39) TIPO_P -> BOOL .

    ID              reduce using rule 39 (TIPO_P -> BOOL .)


state 20

    (40) TIPO_P -> CHAR .

    ID              reduce using rule 40 (TIPO_P -> CHAR .)


state 21

    (41) TIPO_S -> TYPE_GRAPH .

    ID              reduce using rule 41 (TIPO_S -> TYPE_GRAPH .)


state 22

    (42) TIPO_S -> TYPE_PIECHART .

    ID              reduce using rule 42 (TIPO_S -> TYPE_PIECHART .)


state 23

    (43) TIPO_S -> TYPE_BARCHART .

    ID              reduce using rule 43 (TIPO_S -> TYPE_BARCHART .)


state 24

    (44) TIPO_S -> TYPE_HORBARCHART .

    ID              reduce using rule 44 (TIPO_S -> TYPE_HORBARCHART .)


state 25

    (45) TIPO_S -> TYPE_DONUTGRAPH .

    ID              reduce using rule 45 (TIPO_S -> TYPE_DONUTGRAPH .)


state 26

    (46) TIPO_S -> TYPE_NETWORK .

    ID              reduce using rule 46 (TIPO_S -> TYPE_NETWORK .)


state 27

    (47) TIPO_S -> TYPE_VENN .

    ID              reduce using rule 47 (TIPO_S -> TYPE_VENN .)


state 28

    (48) TIPO_S -> TYPE_RADARCHART .

    ID              reduce using rule 48 (TIPO_S -> TYPE_RADARCHART .)


state 29

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN . quad_main BLOQUE CLOSE_BRACKET end_quad
    (5) quad_main -> .

    OPEN_BRACKET    reduce using rule 5 (quad_main -> .)

    quad_main                      shift and go to state 37

state 30

    (6) PROGRAMA_A -> MODULO PROGRAMA_A .

    MAIN            reduce using rule 6 (PROGRAMA_A -> MODULO PROGRAMA_A .)


state 31

    (49) MODULO -> MODULE MODULO_A . ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    ID              shift and go to state 38


state 32

    (56) MODULO_A -> VOID .

    ID              reduce using rule 56 (MODULO_A -> VOID .)


state 33

    (57) MODULO_A -> TIPO_P .

    ID              reduce using rule 57 (MODULO_A -> TIPO_P .)


state 34

    (9) VARS_A -> TIPO_P VARS_B .

    MODULE          reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    MAIN            reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    OPEN_BRACKET    reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)


state 35

    (11) VARS_B -> ID . add_variable VARS_E VARS_C
    (12) add_variable -> .

    OPEN_SQUARE_BRACKET reduce using rule 12 (add_variable -> .)
    SEMICOLON       reduce using rule 12 (add_variable -> .)
    COMMA           reduce using rule 12 (add_variable -> .)

    add_variable                   shift and go to state 39

state 36

    (10) VARS_A -> TIPO_S VARS_B .

    MODULE          reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    MAIN            reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    OPEN_BRACKET    reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)


state 37

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main . BLOQUE CLOSE_BRACKET end_quad
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 41

state 38

    (49) MODULO -> MODULE MODULO_A ID . add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (55) add_functionr -> .

    OPEN_PARENTHESIS reduce using rule 55 (add_functionr -> .)

    add_functionr                  shift and go to state 42

state 39

    (11) VARS_B -> ID add_variable . VARS_E VARS_C
    (13) VARS_E -> . OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F
    (14) VARS_E -> . EMPTY
    (237) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 44
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)

    VARS_E                         shift and go to state 43
    EMPTY                          shift and go to state 45

state 40

    (23) BLOQUE -> OPEN_BRACKET . ESTATUTO_A CLOSE_BRACKET
    (24) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (25) ESTATUTO_A -> . EMPTY
    (26) ESTATUTO -> . ASIGNACION
    (27) ESTATUTO -> . CONDICION
    (28) ESTATUTO -> . NOMBRAR
    (29) ESTATUTO -> . FOR
    (30) ESTATUTO -> . WHILE
    (31) ESTATUTO -> . PRINT
    (32) ESTATUTO -> . PLOT
    (33) ESTATUTO -> . LLAMADAMODULO
    (34) ESTATUTO -> . INPUT
    (35) ESTATUTO -> . COLOR
    (36) ESTATUTO -> . RETURNOP
    (237) EMPTY -> .
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (94) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
    (78) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (101) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (107) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (205) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (168) PLOT -> . PGraph
    (169) PLOT -> . PPie
    (170) PLOT -> . PGBarras
    (171) PLOT -> . PGBarrasHor
    (172) PLOT -> . PDona
    (173) PLOT -> . PRadar
    (174) PLOT -> . PVenn
    (175) PLOT -> . PLOT_B
    (68) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (162) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (124) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (50) RETURNOP -> . RETURN EXPRESIONESVARIAS return_quad SEMICOLON
    (176) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (177) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (178) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (179) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (180) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (181) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (182) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (183) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO_A                     shift and go to state 46
    ESTATUTO                       shift and go to state 47
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 41

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE . CLOSE_BRACKET end_quad

    CLOSE_BRACKET   shift and go to state 75


state 42

    (49) MODULO -> MODULE MODULO_A ID add_functionr . OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    OPEN_PARENTHESIS shift and go to state 76


state 43

    (11) VARS_B -> ID add_variable VARS_E . VARS_C
    (19) VARS_C -> . SEMICOLON VARS_D
    (20) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 78
    COMMA           shift and go to state 79

    VARS_C                         shift and go to state 77

state 44

    (13) VARS_E -> OPEN_SQUARE_BRACKET . CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F

    CTE_INTEGER     shift and go to state 80


state 45

    (14) VARS_E -> EMPTY .

    SEMICOLON       reduce using rule 14 (VARS_E -> EMPTY .)
    COMMA           reduce using rule 14 (VARS_E -> EMPTY .)


state 46

    (23) BLOQUE -> OPEN_BRACKET ESTATUTO_A . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 81


state 47

    (24) ESTATUTO_A -> ESTATUTO . ESTATUTO_A
    (24) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (25) ESTATUTO_A -> . EMPTY
    (26) ESTATUTO -> . ASIGNACION
    (27) ESTATUTO -> . CONDICION
    (28) ESTATUTO -> . NOMBRAR
    (29) ESTATUTO -> . FOR
    (30) ESTATUTO -> . WHILE
    (31) ESTATUTO -> . PRINT
    (32) ESTATUTO -> . PLOT
    (33) ESTATUTO -> . LLAMADAMODULO
    (34) ESTATUTO -> . INPUT
    (35) ESTATUTO -> . COLOR
    (36) ESTATUTO -> . RETURNOP
    (237) EMPTY -> .
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (94) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
    (78) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (101) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (107) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (205) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (168) PLOT -> . PGraph
    (169) PLOT -> . PPie
    (170) PLOT -> . PGBarras
    (171) PLOT -> . PGBarrasHor
    (172) PLOT -> . PDona
    (173) PLOT -> . PRadar
    (174) PLOT -> . PVenn
    (175) PLOT -> . PLOT_B
    (68) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (162) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (124) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (50) RETURNOP -> . RETURN EXPRESIONESVARIAS return_quad SEMICOLON
    (176) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (177) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (178) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (179) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (180) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (181) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (182) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (183) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO                       shift and go to state 47
    ESTATUTO_A                     shift and go to state 82
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 48

    (25) ESTATUTO_A -> EMPTY .

    CLOSE_BRACKET   reduce using rule 25 (ESTATUTO_A -> EMPTY .)


state 49

    (26) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    FOR_KEYWORD     reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    WHILE_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    PRINT_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    INPUT_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    CLOSE_BRACKET   reduce using rule 26 (ESTATUTO -> ASIGNACION .)


state 50

    (27) ESTATUTO -> CONDICION .

    ID              reduce using rule 27 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 27 (ESTATUTO -> CONDICION .)
    FOR_KEYWORD     reduce using rule 27 (ESTATUTO -> CONDICION .)
    WHILE_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    PRINT_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    INPUT_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 27 (ESTATUTO -> CONDICION .)
    CLOSE_BRACKET   reduce using rule 27 (ESTATUTO -> CONDICION .)


state 51

    (28) ESTATUTO -> NOMBRAR .

    ID              reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    IF              reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    FOR_KEYWORD     reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    WHILE_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    PRINT_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    INPUT_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    RETURN          reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    CLOSE_BRACKET   reduce using rule 28 (ESTATUTO -> NOMBRAR .)


state 52

    (29) ESTATUTO -> FOR .

    ID              reduce using rule 29 (ESTATUTO -> FOR .)
    IF              reduce using rule 29 (ESTATUTO -> FOR .)
    FOR_KEYWORD     reduce using rule 29 (ESTATUTO -> FOR .)
    WHILE_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    PRINT_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    INPUT_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    RETURN          reduce using rule 29 (ESTATUTO -> FOR .)
    CLOSE_BRACKET   reduce using rule 29 (ESTATUTO -> FOR .)


state 53

    (30) ESTATUTO -> WHILE .

    ID              reduce using rule 30 (ESTATUTO -> WHILE .)
    IF              reduce using rule 30 (ESTATUTO -> WHILE .)
    FOR_KEYWORD     reduce using rule 30 (ESTATUTO -> WHILE .)
    WHILE_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    PRINT_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    INPUT_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    RETURN          reduce using rule 30 (ESTATUTO -> WHILE .)
    CLOSE_BRACKET   reduce using rule 30 (ESTATUTO -> WHILE .)


state 54

    (31) ESTATUTO -> PRINT .

    ID              reduce using rule 31 (ESTATUTO -> PRINT .)
    IF              reduce using rule 31 (ESTATUTO -> PRINT .)
    FOR_KEYWORD     reduce using rule 31 (ESTATUTO -> PRINT .)
    WHILE_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    PRINT_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    INPUT_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    RETURN          reduce using rule 31 (ESTATUTO -> PRINT .)
    CLOSE_BRACKET   reduce using rule 31 (ESTATUTO -> PRINT .)


state 55

    (32) ESTATUTO -> PLOT .

    ID              reduce using rule 32 (ESTATUTO -> PLOT .)
    IF              reduce using rule 32 (ESTATUTO -> PLOT .)
    FOR_KEYWORD     reduce using rule 32 (ESTATUTO -> PLOT .)
    WHILE_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    PRINT_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    INPUT_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    RETURN          reduce using rule 32 (ESTATUTO -> PLOT .)
    CLOSE_BRACKET   reduce using rule 32 (ESTATUTO -> PLOT .)


state 56

    (33) ESTATUTO -> LLAMADAMODULO .

    ID              reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    IF              reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    FOR_KEYWORD     reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    WHILE_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    PRINT_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    INPUT_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    RETURN          reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    CLOSE_BRACKET   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)


state 57

    (34) ESTATUTO -> INPUT .

    ID              reduce using rule 34 (ESTATUTO -> INPUT .)
    IF              reduce using rule 34 (ESTATUTO -> INPUT .)
    FOR_KEYWORD     reduce using rule 34 (ESTATUTO -> INPUT .)
    WHILE_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    PRINT_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    INPUT_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    RETURN          reduce using rule 34 (ESTATUTO -> INPUT .)
    CLOSE_BRACKET   reduce using rule 34 (ESTATUTO -> INPUT .)


state 58

    (35) ESTATUTO -> COLOR .

    ID              reduce using rule 35 (ESTATUTO -> COLOR .)
    IF              reduce using rule 35 (ESTATUTO -> COLOR .)
    FOR_KEYWORD     reduce using rule 35 (ESTATUTO -> COLOR .)
    WHILE_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    PRINT_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    INPUT_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    RETURN          reduce using rule 35 (ESTATUTO -> COLOR .)
    CLOSE_BRACKET   reduce using rule 35 (ESTATUTO -> COLOR .)


state 59

    (36) ESTATUTO -> RETURNOP .

    ID              reduce using rule 36 (ESTATUTO -> RETURNOP .)
    IF              reduce using rule 36 (ESTATUTO -> RETURNOP .)
    FOR_KEYWORD     reduce using rule 36 (ESTATUTO -> RETURNOP .)
    WHILE_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    PRINT_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    INPUT_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    RETURN          reduce using rule 36 (ESTATUTO -> RETURNOP .)
    CLOSE_BRACKET   reduce using rule 36 (ESTATUTO -> RETURNOP .)


state 60

    (82) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (78) NOMBRAR -> ID . POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (68) LLAMADAMODULO -> ID . era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (124) COLOR -> ID . POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (176) PGraph -> ID . POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (177) PPie -> ID . POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (178) PGBarras -> ID . POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (179) PGBarrasHor -> ID . POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (180) PDona -> ID . POINT CREATED OPEN_PARENTHESIS PLOT_E
    (181) PRadar -> ID . POINT CREATER OPEN_PARENTHESIS PLOT_E
    (182) PVenn -> ID . POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (183) PLOT_B -> ID . POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (84) addStackO -> .
    (70) era -> .

    POINT           shift and go to state 84
    OPEN_SQUARE_BRACKET reduce using rule 84 (addStackO -> .)
    EQUAL           reduce using rule 84 (addStackO -> .)
    OPEN_PARENTHESIS reduce using rule 70 (era -> .)

    addStackO                      shift and go to state 83
    era                            shift and go to state 85

state 61

    (94) CONDICION -> IF . OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end

    OPEN_PARENTHESIS shift and go to state 86


state 62

    (101) FOR -> FOR_KEYWORD . OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for

    OPEN_PARENTHESIS shift and go to state 87


state 63

    (107) WHILE -> WHILE_KEYWORD . OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while

    OPEN_PARENTHESIS shift and go to state 88


state 64

    (205) PRINT -> PRINT_KEYWORD . OPEN_PARENTHESIS PRINT_A

    OPEN_PARENTHESIS shift and go to state 89


state 65

    (168) PLOT -> PGraph .

    ID              reduce using rule 168 (PLOT -> PGraph .)
    IF              reduce using rule 168 (PLOT -> PGraph .)
    FOR_KEYWORD     reduce using rule 168 (PLOT -> PGraph .)
    WHILE_KEYWORD   reduce using rule 168 (PLOT -> PGraph .)
    PRINT_KEYWORD   reduce using rule 168 (PLOT -> PGraph .)
    INPUT_KEYWORD   reduce using rule 168 (PLOT -> PGraph .)
    RETURN          reduce using rule 168 (PLOT -> PGraph .)
    CLOSE_BRACKET   reduce using rule 168 (PLOT -> PGraph .)


state 66

    (169) PLOT -> PPie .

    ID              reduce using rule 169 (PLOT -> PPie .)
    IF              reduce using rule 169 (PLOT -> PPie .)
    FOR_KEYWORD     reduce using rule 169 (PLOT -> PPie .)
    WHILE_KEYWORD   reduce using rule 169 (PLOT -> PPie .)
    PRINT_KEYWORD   reduce using rule 169 (PLOT -> PPie .)
    INPUT_KEYWORD   reduce using rule 169 (PLOT -> PPie .)
    RETURN          reduce using rule 169 (PLOT -> PPie .)
    CLOSE_BRACKET   reduce using rule 169 (PLOT -> PPie .)


state 67

    (170) PLOT -> PGBarras .

    ID              reduce using rule 170 (PLOT -> PGBarras .)
    IF              reduce using rule 170 (PLOT -> PGBarras .)
    FOR_KEYWORD     reduce using rule 170 (PLOT -> PGBarras .)
    WHILE_KEYWORD   reduce using rule 170 (PLOT -> PGBarras .)
    PRINT_KEYWORD   reduce using rule 170 (PLOT -> PGBarras .)
    INPUT_KEYWORD   reduce using rule 170 (PLOT -> PGBarras .)
    RETURN          reduce using rule 170 (PLOT -> PGBarras .)
    CLOSE_BRACKET   reduce using rule 170 (PLOT -> PGBarras .)


state 68

    (171) PLOT -> PGBarrasHor .

    ID              reduce using rule 171 (PLOT -> PGBarrasHor .)
    IF              reduce using rule 171 (PLOT -> PGBarrasHor .)
    FOR_KEYWORD     reduce using rule 171 (PLOT -> PGBarrasHor .)
    WHILE_KEYWORD   reduce using rule 171 (PLOT -> PGBarrasHor .)
    PRINT_KEYWORD   reduce using rule 171 (PLOT -> PGBarrasHor .)
    INPUT_KEYWORD   reduce using rule 171 (PLOT -> PGBarrasHor .)
    RETURN          reduce using rule 171 (PLOT -> PGBarrasHor .)
    CLOSE_BRACKET   reduce using rule 171 (PLOT -> PGBarrasHor .)


state 69

    (172) PLOT -> PDona .

    ID              reduce using rule 172 (PLOT -> PDona .)
    IF              reduce using rule 172 (PLOT -> PDona .)
    FOR_KEYWORD     reduce using rule 172 (PLOT -> PDona .)
    WHILE_KEYWORD   reduce using rule 172 (PLOT -> PDona .)
    PRINT_KEYWORD   reduce using rule 172 (PLOT -> PDona .)
    INPUT_KEYWORD   reduce using rule 172 (PLOT -> PDona .)
    RETURN          reduce using rule 172 (PLOT -> PDona .)
    CLOSE_BRACKET   reduce using rule 172 (PLOT -> PDona .)


state 70

    (173) PLOT -> PRadar .

    ID              reduce using rule 173 (PLOT -> PRadar .)
    IF              reduce using rule 173 (PLOT -> PRadar .)
    FOR_KEYWORD     reduce using rule 173 (PLOT -> PRadar .)
    WHILE_KEYWORD   reduce using rule 173 (PLOT -> PRadar .)
    PRINT_KEYWORD   reduce using rule 173 (PLOT -> PRadar .)
    INPUT_KEYWORD   reduce using rule 173 (PLOT -> PRadar .)
    RETURN          reduce using rule 173 (PLOT -> PRadar .)
    CLOSE_BRACKET   reduce using rule 173 (PLOT -> PRadar .)


state 71

    (174) PLOT -> PVenn .

    ID              reduce using rule 174 (PLOT -> PVenn .)
    IF              reduce using rule 174 (PLOT -> PVenn .)
    FOR_KEYWORD     reduce using rule 174 (PLOT -> PVenn .)
    WHILE_KEYWORD   reduce using rule 174 (PLOT -> PVenn .)
    PRINT_KEYWORD   reduce using rule 174 (PLOT -> PVenn .)
    INPUT_KEYWORD   reduce using rule 174 (PLOT -> PVenn .)
    RETURN          reduce using rule 174 (PLOT -> PVenn .)
    CLOSE_BRACKET   reduce using rule 174 (PLOT -> PVenn .)


state 72

    (175) PLOT -> PLOT_B .

    ID              reduce using rule 175 (PLOT -> PLOT_B .)
    IF              reduce using rule 175 (PLOT -> PLOT_B .)
    FOR_KEYWORD     reduce using rule 175 (PLOT -> PLOT_B .)
    WHILE_KEYWORD   reduce using rule 175 (PLOT -> PLOT_B .)
    PRINT_KEYWORD   reduce using rule 175 (PLOT -> PLOT_B .)
    INPUT_KEYWORD   reduce using rule 175 (PLOT -> PLOT_B .)
    RETURN          reduce using rule 175 (PLOT -> PLOT_B .)
    CLOSE_BRACKET   reduce using rule 175 (PLOT -> PLOT_B .)


state 73

    (162) INPUT -> INPUT_KEYWORD . INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input

    INPUTSYMBOL     shift and go to state 90


state 74

    (50) RETURNOP -> RETURN . EXPRESIONESVARIAS return_quad SEMICOLON
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 91
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 75

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET . end_quad
    (2) end_quad -> .

    $end            reduce using rule 2 (end_quad -> .)

    end_quad                       shift and go to state 110

state 76

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS . MODULO_C release_vars change_scope endproc
    (60) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 111
    TIPO_P                         shift and go to state 112

state 77

    (11) VARS_B -> ID add_variable VARS_E VARS_C .

    MODULE          reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    MAIN            reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    OPEN_BRACKET    reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)


state 78

    (19) VARS_C -> SEMICOLON . VARS_D
    (21) VARS_D -> . CLOSE_BRACKET
    (22) VARS_D -> . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR
    (41) TIPO_S -> . TYPE_GRAPH
    (42) TIPO_S -> . TYPE_PIECHART
    (43) TIPO_S -> . TYPE_BARCHART
    (44) TIPO_S -> . TYPE_HORBARCHART
    (45) TIPO_S -> . TYPE_DONUTGRAPH
    (46) TIPO_S -> . TYPE_NETWORK
    (47) TIPO_S -> . TYPE_VENN
    (48) TIPO_S -> . TYPE_RADARCHART

    CLOSE_BRACKET   shift and go to state 114
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_D                         shift and go to state 113
    VARS_A                         shift and go to state 115
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 79

    (20) VARS_C -> COMMA . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 116

state 80

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER . add_s1 CLOSE_SQUARE_BRACKET VARS_F
    (15) add_s1 -> .

    CLOSE_SQUARE_BRACKET reduce using rule 15 (add_s1 -> .)

    add_s1                         shift and go to state 117

state 81

    (23) BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .

    CLOSE_BRACKET   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ELSE            reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ID              reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    IF              reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    FOR_KEYWORD     reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    RETURN          reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)


state 82

    (24) ESTATUTO_A -> ESTATUTO ESTATUTO_A .

    CLOSE_BRACKET   reduce using rule 24 (ESTATUTO_A -> ESTATUTO ESTATUTO_A .)


state 83

    (82) ASIGNACION -> ID addStackO . ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (85) ASIGNACION_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
    (86) ASIGNACION_A -> . EMPTY
    (237) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 119
    EQUAL           reduce using rule 237 (EMPTY -> .)

    ASIGNACION_A                   shift and go to state 118
    EMPTY                          shift and go to state 120

state 84

    (78) NOMBRAR -> ID POINT . NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (124) COLOR -> ID POINT . COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (176) PGraph -> ID POINT . CREATEG OPEN_PARENTHESIS PLOT_C
    (177) PPie -> ID POINT . CREATEPC OPEN_PARENTHESIS PLOT_E
    (178) PGBarras -> ID POINT . CREATEGB OPEN_PARENTHESIS PLOT_E
    (179) PGBarrasHor -> ID POINT . CREATEGBH OPEN_PARENTHESIS PLOT_E
    (180) PDona -> ID POINT . CREATED OPEN_PARENTHESIS PLOT_E
    (181) PRadar -> ID POINT . CREATER OPEN_PARENTHESIS PLOT_E
    (182) PVenn -> ID POINT . CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (183) PLOT_B -> ID POINT . CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (79) NOMBRAR_A -> . NAME
    (80) NOMBRAR_A -> . NAMEX
    (81) NOMBRAR_A -> . NAMEY

    COLOR_KEYWORD   shift and go to state 122
    CREATEG         shift and go to state 123
    CREATEPC        shift and go to state 124
    CREATEGB        shift and go to state 125
    CREATEGBH       shift and go to state 126
    CREATED         shift and go to state 127
    CREATER         shift and go to state 128
    CREATEV         shift and go to state 129
    CREATEN         shift and go to state 130
    NAME            shift and go to state 131
    NAMEX           shift and go to state 132
    NAMEY           shift and go to state 133

    NOMBRAR_A                      shift and go to state 121

state 85

    (68) LLAMADAMODULO -> ID era . OPEN_PARENTHESIS LLAMADAMODULO_C gosub

    OPEN_PARENTHESIS shift and go to state 134


state 86

    (94) CONDICION -> IF OPEN_PARENTHESIS . EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 135
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 87

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS . ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 137

    ASIGNACION                     shift and go to state 136

state 88

    (107) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS . while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (109) while_jump -> .

    NOT             reduce using rule 109 (while_jump -> .)
    OPEN_PARENTHESIS reduce using rule 109 (while_jump -> .)
    PLUS            reduce using rule 109 (while_jump -> .)
    MINS            reduce using rule 109 (while_jump -> .)
    CTE_INTEGER     reduce using rule 109 (while_jump -> .)
    CTE_FLOAT       reduce using rule 109 (while_jump -> .)
    TRUE            reduce using rule 109 (while_jump -> .)
    FALSE           reduce using rule 109 (while_jump -> .)
    ID              reduce using rule 109 (while_jump -> .)
    CLOSE_PARENTHESIS reduce using rule 109 (while_jump -> .)
    AND             reduce using rule 109 (while_jump -> .)
    OR              reduce using rule 109 (while_jump -> .)
    RELOP           reduce using rule 109 (while_jump -> .)
    TIMES           reduce using rule 109 (while_jump -> .)
    DIVIDE          reduce using rule 109 (while_jump -> .)

    while_jump                     shift and go to state 138

state 89

    (205) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS . PRINT_A
    (206) PRINT_A -> . PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
    (207) PRINT_B -> . CTE_STRING add_string PRINT_C
    (208) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 141
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    PRINT_A                        shift and go to state 139
    PRINT_B                        shift and go to state 140
    EXPRESIONESVARIAS              shift and go to state 142
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 90

    (162) INPUT -> INPUT_KEYWORD INPUTSYMBOL . ID add_inputid INPUT_A SEMICOLON quad_input

    ID              shift and go to state 143


state 91

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS . return_quad SEMICOLON
    (51) return_quad -> .

    SEMICOLON       reduce using rule 51 (return_quad -> .)

    return_quad                    shift and go to state 144

state 92

    (222) EXPRESIONESVARIAS -> NOT . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EV_C                           shift and go to state 145
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 93

    (223) EXPRESIONESVARIAS -> EV_C .

    SEMICOLON       reduce using rule 223 (EXPRESIONESVARIAS -> EV_C .)
    CLOSE_PARENTHESIS reduce using rule 223 (EXPRESIONESVARIAS -> EV_C .)
    CONCATENATE     reduce using rule 223 (EXPRESIONESVARIAS -> EV_C .)


state 94

    (225) EV_C -> EXP_RELOP . quad_andor EV_B
    (226) quad_andor -> .

    AND             reduce using rule 226 (quad_andor -> .)
    OR              reduce using rule 226 (quad_andor -> .)
    SEMICOLON       reduce using rule 226 (quad_andor -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (quad_andor -> .)
    CONCATENATE     reduce using rule 226 (quad_andor -> .)

    quad_andor                     shift and go to state 146

state 95

    (231) EXP_RELOP -> EXP . EXP_RELOP_A
    (233) EXP_RELOP_A -> . RELOP add_relop EXP quad_relop
    (234) EXP_RELOP_A -> . EMPTY
    (237) EMPTY -> .

    RELOP           shift and go to state 148
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)

    EXP_RELOP_A                    shift and go to state 147
    EMPTY                          shift and go to state 149

state 96

    (232) EXP_RELOP -> EMPTY .
    (136) FACTOR_A -> EMPTY .

  ! reduce/reduce conflict for AND resolved using rule 136 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OR resolved using rule 136 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 136 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 136 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 136 (FACTOR_A -> EMPTY .)
    TIMES           reduce using rule 136 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 136 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 136 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 136 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 136 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 136 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 136 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 136 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 136 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 136 (FACTOR_A -> EMPTY .)

  ! AND             [ reduce using rule 232 (EXP_RELOP -> EMPTY .) ]
  ! OR              [ reduce using rule 232 (EXP_RELOP -> EMPTY .) ]
  ! SEMICOLON       [ reduce using rule 232 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 232 (EXP_RELOP -> EMPTY .) ]
  ! CONCATENATE     [ reduce using rule 232 (EXP_RELOP -> EMPTY .) ]


state 97

    (112) EXP -> TERMINO . pop_exp EXP_A
    (113) pop_exp -> .

    PLUS            reduce using rule 113 (pop_exp -> .)
    MINS            reduce using rule 113 (pop_exp -> .)
    RELOP           reduce using rule 113 (pop_exp -> .)
    AND             reduce using rule 113 (pop_exp -> .)
    OR              reduce using rule 113 (pop_exp -> .)
    SEMICOLON       reduce using rule 113 (pop_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 113 (pop_exp -> .)
    CONCATENATE     reduce using rule 113 (pop_exp -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 113 (pop_exp -> .)
    COMMA           reduce using rule 113 (pop_exp -> .)
    ID              reduce using rule 113 (pop_exp -> .)
    IF              reduce using rule 113 (pop_exp -> .)
    FOR_KEYWORD     reduce using rule 113 (pop_exp -> .)
    WHILE_KEYWORD   reduce using rule 113 (pop_exp -> .)
    PRINT_KEYWORD   reduce using rule 113 (pop_exp -> .)
    INPUT_KEYWORD   reduce using rule 113 (pop_exp -> .)
    RETURN          reduce using rule 113 (pop_exp -> .)
    CLOSE_BRACKET   reduce using rule 113 (pop_exp -> .)

    pop_exp                        shift and go to state 150

state 98

    (118) TERMINO -> FACTOR . pop_term TERMINO_A
    (119) pop_term -> .

    TIMES           reduce using rule 119 (pop_term -> .)
    DIVIDE          reduce using rule 119 (pop_term -> .)
    PLUS            reduce using rule 119 (pop_term -> .)
    MINS            reduce using rule 119 (pop_term -> .)
    RELOP           reduce using rule 119 (pop_term -> .)
    AND             reduce using rule 119 (pop_term -> .)
    OR              reduce using rule 119 (pop_term -> .)
    SEMICOLON       reduce using rule 119 (pop_term -> .)
    CLOSE_PARENTHESIS reduce using rule 119 (pop_term -> .)
    CONCATENATE     reduce using rule 119 (pop_term -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 119 (pop_term -> .)
    COMMA           reduce using rule 119 (pop_term -> .)
    ID              reduce using rule 119 (pop_term -> .)
    IF              reduce using rule 119 (pop_term -> .)
    FOR_KEYWORD     reduce using rule 119 (pop_term -> .)
    WHILE_KEYWORD   reduce using rule 119 (pop_term -> .)
    PRINT_KEYWORD   reduce using rule 119 (pop_term -> .)
    INPUT_KEYWORD   reduce using rule 119 (pop_term -> .)
    RETURN          reduce using rule 119 (pop_term -> .)
    CLOSE_BRACKET   reduce using rule 119 (pop_term -> .)

    pop_term                       shift and go to state 151

state 99

    (131) FACTOR -> FACTOR_A .

    TIMES           reduce using rule 131 (FACTOR -> FACTOR_A .)
    DIVIDE          reduce using rule 131 (FACTOR -> FACTOR_A .)
    PLUS            reduce using rule 131 (FACTOR -> FACTOR_A .)
    MINS            reduce using rule 131 (FACTOR -> FACTOR_A .)
    RELOP           reduce using rule 131 (FACTOR -> FACTOR_A .)
    AND             reduce using rule 131 (FACTOR -> FACTOR_A .)
    OR              reduce using rule 131 (FACTOR -> FACTOR_A .)
    SEMICOLON       reduce using rule 131 (FACTOR -> FACTOR_A .)
    CLOSE_PARENTHESIS reduce using rule 131 (FACTOR -> FACTOR_A .)
    CONCATENATE     reduce using rule 131 (FACTOR -> FACTOR_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 131 (FACTOR -> FACTOR_A .)
    COMMA           reduce using rule 131 (FACTOR -> FACTOR_A .)
    ID              reduce using rule 131 (FACTOR -> FACTOR_A .)
    IF              reduce using rule 131 (FACTOR -> FACTOR_A .)
    FOR_KEYWORD     reduce using rule 131 (FACTOR -> FACTOR_A .)
    WHILE_KEYWORD   reduce using rule 131 (FACTOR -> FACTOR_A .)
    PRINT_KEYWORD   reduce using rule 131 (FACTOR -> FACTOR_A .)
    INPUT_KEYWORD   reduce using rule 131 (FACTOR -> FACTOR_A .)
    RETURN          reduce using rule 131 (FACTOR -> FACTOR_A .)
    CLOSE_BRACKET   reduce using rule 131 (FACTOR -> FACTOR_A .)


state 100

    (132) FACTOR_A -> OPEN_PARENTHESIS . add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (137) add_parenthesis -> .

    NOT             reduce using rule 137 (add_parenthesis -> .)
    OPEN_PARENTHESIS reduce using rule 137 (add_parenthesis -> .)
    PLUS            reduce using rule 137 (add_parenthesis -> .)
    MINS            reduce using rule 137 (add_parenthesis -> .)
    CTE_INTEGER     reduce using rule 137 (add_parenthesis -> .)
    CTE_FLOAT       reduce using rule 137 (add_parenthesis -> .)
    TRUE            reduce using rule 137 (add_parenthesis -> .)
    FALSE           reduce using rule 137 (add_parenthesis -> .)
    ID              reduce using rule 137 (add_parenthesis -> .)
    CLOSE_PARENTHESIS reduce using rule 137 (add_parenthesis -> .)
    AND             reduce using rule 137 (add_parenthesis -> .)
    OR              reduce using rule 137 (add_parenthesis -> .)
    RELOP           reduce using rule 137 (add_parenthesis -> .)
    TIMES           reduce using rule 137 (add_parenthesis -> .)
    DIVIDE          reduce using rule 137 (add_parenthesis -> .)

    add_parenthesis                shift and go to state 152

state 101

    (133) FACTOR_A -> PLUS . FACTOR_C
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

    FACTOR_C                       shift and go to state 153
    VARS_CTE                       shift and go to state 104

state 102

    (135) FACTOR_A -> FACTOR_C .

    TIMES           reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    DIVIDE          reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    PLUS            reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    MINS            reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    RELOP           reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    AND             reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    OR              reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    SEMICOLON       reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    CONCATENATE     reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    COMMA           reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    ID              reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    IF              reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    FOR_KEYWORD     reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    RETURN          reduce using rule 135 (FACTOR_A -> FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 135 (FACTOR_A -> FACTOR_C .)


state 103

    (134) FACTOR_A -> MINS . FACTOR_C
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

    FACTOR_C                       shift and go to state 154
    VARS_CTE                       shift and go to state 104

state 104

    (140) FACTOR_C -> VARS_CTE .

    TIMES           reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    DIVIDE          reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    PLUS            reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    MINS            reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    RELOP           reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    AND             reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    OR              reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    SEMICOLON       reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    CLOSE_PARENTHESIS reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    CONCATENATE     reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    CLOSE_SQUARE_BRACKET reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    COMMA           reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    ID              reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    IF              reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    FOR_KEYWORD     reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    WHILE_KEYWORD   reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    PRINT_KEYWORD   reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    INPUT_KEYWORD   reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    RETURN          reduce using rule 140 (FACTOR_C -> VARS_CTE .)
    CLOSE_BRACKET   reduce using rule 140 (FACTOR_C -> VARS_CTE .)


state 105

    (141) VARS_CTE -> CTE_INTEGER . append_cte_int
    (149) append_cte_int -> .

    TIMES           reduce using rule 149 (append_cte_int -> .)
    DIVIDE          reduce using rule 149 (append_cte_int -> .)
    PLUS            reduce using rule 149 (append_cte_int -> .)
    MINS            reduce using rule 149 (append_cte_int -> .)
    RELOP           reduce using rule 149 (append_cte_int -> .)
    AND             reduce using rule 149 (append_cte_int -> .)
    OR              reduce using rule 149 (append_cte_int -> .)
    SEMICOLON       reduce using rule 149 (append_cte_int -> .)
    CLOSE_PARENTHESIS reduce using rule 149 (append_cte_int -> .)
    CONCATENATE     reduce using rule 149 (append_cte_int -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 149 (append_cte_int -> .)
    COMMA           reduce using rule 149 (append_cte_int -> .)
    ID              reduce using rule 149 (append_cte_int -> .)
    IF              reduce using rule 149 (append_cte_int -> .)
    FOR_KEYWORD     reduce using rule 149 (append_cte_int -> .)
    WHILE_KEYWORD   reduce using rule 149 (append_cte_int -> .)
    PRINT_KEYWORD   reduce using rule 149 (append_cte_int -> .)
    INPUT_KEYWORD   reduce using rule 149 (append_cte_int -> .)
    RETURN          reduce using rule 149 (append_cte_int -> .)
    CLOSE_BRACKET   reduce using rule 149 (append_cte_int -> .)

    append_cte_int                 shift and go to state 155

state 106

    (142) VARS_CTE -> CTE_FLOAT . append_cte_float
    (150) append_cte_float -> .

    TIMES           reduce using rule 150 (append_cte_float -> .)
    DIVIDE          reduce using rule 150 (append_cte_float -> .)
    PLUS            reduce using rule 150 (append_cte_float -> .)
    MINS            reduce using rule 150 (append_cte_float -> .)
    RELOP           reduce using rule 150 (append_cte_float -> .)
    AND             reduce using rule 150 (append_cte_float -> .)
    OR              reduce using rule 150 (append_cte_float -> .)
    SEMICOLON       reduce using rule 150 (append_cte_float -> .)
    CLOSE_PARENTHESIS reduce using rule 150 (append_cte_float -> .)
    CONCATENATE     reduce using rule 150 (append_cte_float -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 150 (append_cte_float -> .)
    COMMA           reduce using rule 150 (append_cte_float -> .)
    ID              reduce using rule 150 (append_cte_float -> .)
    IF              reduce using rule 150 (append_cte_float -> .)
    FOR_KEYWORD     reduce using rule 150 (append_cte_float -> .)
    WHILE_KEYWORD   reduce using rule 150 (append_cte_float -> .)
    PRINT_KEYWORD   reduce using rule 150 (append_cte_float -> .)
    INPUT_KEYWORD   reduce using rule 150 (append_cte_float -> .)
    RETURN          reduce using rule 150 (append_cte_float -> .)
    CLOSE_BRACKET   reduce using rule 150 (append_cte_float -> .)

    append_cte_float               shift and go to state 156

state 107

    (143) VARS_CTE -> TRUE . append_bool
    (151) append_bool -> .

    TIMES           reduce using rule 151 (append_bool -> .)
    DIVIDE          reduce using rule 151 (append_bool -> .)
    PLUS            reduce using rule 151 (append_bool -> .)
    MINS            reduce using rule 151 (append_bool -> .)
    RELOP           reduce using rule 151 (append_bool -> .)
    AND             reduce using rule 151 (append_bool -> .)
    OR              reduce using rule 151 (append_bool -> .)
    SEMICOLON       reduce using rule 151 (append_bool -> .)
    CLOSE_PARENTHESIS reduce using rule 151 (append_bool -> .)
    CONCATENATE     reduce using rule 151 (append_bool -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 151 (append_bool -> .)
    COMMA           reduce using rule 151 (append_bool -> .)
    ID              reduce using rule 151 (append_bool -> .)
    IF              reduce using rule 151 (append_bool -> .)
    FOR_KEYWORD     reduce using rule 151 (append_bool -> .)
    WHILE_KEYWORD   reduce using rule 151 (append_bool -> .)
    PRINT_KEYWORD   reduce using rule 151 (append_bool -> .)
    INPUT_KEYWORD   reduce using rule 151 (append_bool -> .)
    RETURN          reduce using rule 151 (append_bool -> .)
    CLOSE_BRACKET   reduce using rule 151 (append_bool -> .)

    append_bool                    shift and go to state 157

state 108

    (144) VARS_CTE -> FALSE . append_bool
    (151) append_bool -> .

    TIMES           reduce using rule 151 (append_bool -> .)
    DIVIDE          reduce using rule 151 (append_bool -> .)
    PLUS            reduce using rule 151 (append_bool -> .)
    MINS            reduce using rule 151 (append_bool -> .)
    RELOP           reduce using rule 151 (append_bool -> .)
    AND             reduce using rule 151 (append_bool -> .)
    OR              reduce using rule 151 (append_bool -> .)
    SEMICOLON       reduce using rule 151 (append_bool -> .)
    CLOSE_PARENTHESIS reduce using rule 151 (append_bool -> .)
    CONCATENATE     reduce using rule 151 (append_bool -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 151 (append_bool -> .)
    COMMA           reduce using rule 151 (append_bool -> .)
    ID              reduce using rule 151 (append_bool -> .)
    IF              reduce using rule 151 (append_bool -> .)
    FOR_KEYWORD     reduce using rule 151 (append_bool -> .)
    WHILE_KEYWORD   reduce using rule 151 (append_bool -> .)
    PRINT_KEYWORD   reduce using rule 151 (append_bool -> .)
    INPUT_KEYWORD   reduce using rule 151 (append_bool -> .)
    RETURN          reduce using rule 151 (append_bool -> .)
    CLOSE_BRACKET   reduce using rule 151 (append_bool -> .)

    append_bool                    shift and go to state 158

state 109

    (145) VARS_CTE -> ID . append_id
    (146) VARS_CTE -> ID . append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> ID . append_id OPEN_PARENTHESIS VARS_CTE_B
    (148) append_id -> .

    OPEN_SQUARE_BRACKET reduce using rule 148 (append_id -> .)
    OPEN_PARENTHESIS reduce using rule 148 (append_id -> .)
    TIMES           reduce using rule 148 (append_id -> .)
    DIVIDE          reduce using rule 148 (append_id -> .)
    PLUS            reduce using rule 148 (append_id -> .)
    MINS            reduce using rule 148 (append_id -> .)
    RELOP           reduce using rule 148 (append_id -> .)
    AND             reduce using rule 148 (append_id -> .)
    OR              reduce using rule 148 (append_id -> .)
    SEMICOLON       reduce using rule 148 (append_id -> .)
    CLOSE_PARENTHESIS reduce using rule 148 (append_id -> .)
    CONCATENATE     reduce using rule 148 (append_id -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 148 (append_id -> .)
    COMMA           reduce using rule 148 (append_id -> .)
    ID              reduce using rule 148 (append_id -> .)
    IF              reduce using rule 148 (append_id -> .)
    FOR_KEYWORD     reduce using rule 148 (append_id -> .)
    WHILE_KEYWORD   reduce using rule 148 (append_id -> .)
    PRINT_KEYWORD   reduce using rule 148 (append_id -> .)
    INPUT_KEYWORD   reduce using rule 148 (append_id -> .)
    RETURN          reduce using rule 148 (append_id -> .)
    CLOSE_BRACKET   reduce using rule 148 (append_id -> .)

    append_id                      shift and go to state 159

state 110

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .)


state 111

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C . release_vars change_scope endproc
    (52) release_vars -> .

    MODULE          reduce using rule 52 (release_vars -> .)
    MAIN            reduce using rule 52 (release_vars -> .)

    release_vars                   shift and go to state 160

state 112

    (60) MODULO_C -> TIPO_P . ID add_variable_m MODULO_B MODULO_D

    ID              shift and go to state 161


state 113

    (19) VARS_C -> SEMICOLON VARS_D .

    MODULE          reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)
    MAIN            reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)
    OPEN_BRACKET    reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)


state 114

    (21) VARS_D -> CLOSE_BRACKET .

    MODULE          reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)
    MAIN            reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)


state 115

    (22) VARS_D -> VARS_A .

    MODULE          reduce using rule 22 (VARS_D -> VARS_A .)
    MAIN            reduce using rule 22 (VARS_D -> VARS_A .)
    OPEN_BRACKET    reduce using rule 22 (VARS_D -> VARS_A .)


state 116

    (20) VARS_C -> COMMA VARS_B .

    MODULE          reduce using rule 20 (VARS_C -> COMMA VARS_B .)
    MAIN            reduce using rule 20 (VARS_C -> COMMA VARS_B .)
    OPEN_BRACKET    reduce using rule 20 (VARS_C -> COMMA VARS_B .)


state 117

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 . CLOSE_SQUARE_BRACKET VARS_F

    CLOSE_SQUARE_BRACKET shift and go to state 162


state 118

    (82) ASIGNACION -> ID addStackO ASIGNACION_A . ASIGNACION_C SEMICOLON quad
    (91) ASIGNACION_C -> . EQUAL add_equal EXPRESIONESVARIAS
    (92) ASIGNACION_C -> . EQUAL CTE_STRING

    EQUAL           shift and go to state 164

    ASIGNACION_C                   shift and go to state 163

state 119

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 165
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 120

    (86) ASIGNACION_A -> EMPTY .

    EQUAL           reduce using rule 86 (ASIGNACION_A -> EMPTY .)


state 121

    (78) NOMBRAR -> ID POINT NOMBRAR_A . OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 167


state 122

    (124) COLOR -> ID POINT COLOR_KEYWORD . OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 168


state 123

    (176) PGraph -> ID POINT CREATEG . OPEN_PARENTHESIS PLOT_C

    OPEN_PARENTHESIS shift and go to state 169


state 124

    (177) PPie -> ID POINT CREATEPC . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 170


state 125

    (178) PGBarras -> ID POINT CREATEGB . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 171


state 126

    (179) PGBarrasHor -> ID POINT CREATEGBH . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 172


state 127

    (180) PDona -> ID POINT CREATED . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 173


state 128

    (181) PRadar -> ID POINT CREATER . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 174


state 129

    (182) PVenn -> ID POINT CREATEV . OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 175


state 130

    (183) PLOT_B -> ID POINT CREATEN . OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    OPEN_PARENTHESIS shift and go to state 176


state 131

    (79) NOMBRAR_A -> NAME .

    OPEN_PARENTHESIS reduce using rule 79 (NOMBRAR_A -> NAME .)


state 132

    (80) NOMBRAR_A -> NAMEX .

    OPEN_PARENTHESIS reduce using rule 80 (NOMBRAR_A -> NAMEX .)


state 133

    (81) NOMBRAR_A -> NAMEY .

    OPEN_PARENTHESIS reduce using rule 81 (NOMBRAR_A -> NAMEY .)


state 134

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS . LLAMADAMODULO_C gosub
    (74) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]
  ! ID              [ reduce using rule 237 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 177
    EXP                            shift and go to state 178
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 135

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS . quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end
    (224) quad_not -> .

    CLOSE_PARENTHESIS reduce using rule 224 (quad_not -> .)

    quad_not                       shift and go to state 179

state 136

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION . for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (103) for_jump -> .

    NOT             reduce using rule 103 (for_jump -> .)
    OPEN_PARENTHESIS reduce using rule 103 (for_jump -> .)
    PLUS            reduce using rule 103 (for_jump -> .)
    MINS            reduce using rule 103 (for_jump -> .)
    CTE_INTEGER     reduce using rule 103 (for_jump -> .)
    CTE_FLOAT       reduce using rule 103 (for_jump -> .)
    TRUE            reduce using rule 103 (for_jump -> .)
    FALSE           reduce using rule 103 (for_jump -> .)
    ID              reduce using rule 103 (for_jump -> .)
    SEMICOLON       reduce using rule 103 (for_jump -> .)
    AND             reduce using rule 103 (for_jump -> .)
    OR              reduce using rule 103 (for_jump -> .)
    RELOP           reduce using rule 103 (for_jump -> .)
    TIMES           reduce using rule 103 (for_jump -> .)
    DIVIDE          reduce using rule 103 (for_jump -> .)

    for_jump                       shift and go to state 180

state 137

    (82) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (84) addStackO -> .

    OPEN_SQUARE_BRACKET reduce using rule 84 (addStackO -> .)
    EQUAL           reduce using rule 84 (addStackO -> .)

    addStackO                      shift and go to state 83

state 138

    (107) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump . EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 181
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 139

    (205) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .

    ID              reduce using rule 205 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    IF              reduce using rule 205 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    FOR_KEYWORD     reduce using rule 205 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    WHILE_KEYWORD   reduce using rule 205 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    PRINT_KEYWORD   reduce using rule 205 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    INPUT_KEYWORD   reduce using rule 205 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    RETURN          reduce using rule 205 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    CLOSE_BRACKET   reduce using rule 205 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)


state 140

    (206) PRINT_A -> PRINT_B . CLOSE_PARENTHESIS print_quad SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 182


state 141

    (207) PRINT_B -> CTE_STRING . add_string PRINT_C
    (210) add_string -> .

    CONCATENATE     reduce using rule 210 (add_string -> .)
    CLOSE_PARENTHESIS reduce using rule 210 (add_string -> .)

    add_string                     shift and go to state 183

state 142

    (208) PRINT_B -> EXPRESIONESVARIAS . add_temp PRINT_C
    (209) add_temp -> .

    CONCATENATE     reduce using rule 209 (add_temp -> .)
    CLOSE_PARENTHESIS reduce using rule 209 (add_temp -> .)

    add_temp                       shift and go to state 184

state 143

    (162) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID . add_inputid INPUT_A SEMICOLON quad_input
    (163) add_inputid -> .

    OPEN_SQUARE_BRACKET reduce using rule 163 (add_inputid -> .)
    SEMICOLON       reduce using rule 163 (add_inputid -> .)

    add_inputid                    shift and go to state 185

state 144

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS return_quad . SEMICOLON

    SEMICOLON       shift and go to state 186


state 145

    (222) EXPRESIONESVARIAS -> NOT EV_C .

    SEMICOLON       reduce using rule 222 (EXPRESIONESVARIAS -> NOT EV_C .)
    CLOSE_PARENTHESIS reduce using rule 222 (EXPRESIONESVARIAS -> NOT EV_C .)
    CONCATENATE     reduce using rule 222 (EXPRESIONESVARIAS -> NOT EV_C .)


state 146

    (225) EV_C -> EXP_RELOP quad_andor . EV_B
    (227) EV_B -> . AND add_ev EV_C
    (228) EV_B -> . OR add_ev EV_C
    (229) EV_B -> . EMPTY
    (237) EMPTY -> .

    AND             shift and go to state 188
    OR              shift and go to state 189
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)

    EV_B                           shift and go to state 187
    EMPTY                          shift and go to state 190

state 147

    (231) EXP_RELOP -> EXP EXP_RELOP_A .

    AND             reduce using rule 231 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OR              reduce using rule 231 (EXP_RELOP -> EXP EXP_RELOP_A .)
    SEMICOLON       reduce using rule 231 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_PARENTHESIS reduce using rule 231 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CONCATENATE     reduce using rule 231 (EXP_RELOP -> EXP EXP_RELOP_A .)


state 148

    (233) EXP_RELOP_A -> RELOP . add_relop EXP quad_relop
    (236) add_relop -> .

    OPEN_PARENTHESIS reduce using rule 236 (add_relop -> .)
    PLUS            reduce using rule 236 (add_relop -> .)
    MINS            reduce using rule 236 (add_relop -> .)
    CTE_INTEGER     reduce using rule 236 (add_relop -> .)
    CTE_FLOAT       reduce using rule 236 (add_relop -> .)
    TRUE            reduce using rule 236 (add_relop -> .)
    FALSE           reduce using rule 236 (add_relop -> .)
    ID              reduce using rule 236 (add_relop -> .)
    TIMES           reduce using rule 236 (add_relop -> .)
    DIVIDE          reduce using rule 236 (add_relop -> .)
    AND             reduce using rule 236 (add_relop -> .)
    OR              reduce using rule 236 (add_relop -> .)
    SEMICOLON       reduce using rule 236 (add_relop -> .)
    CLOSE_PARENTHESIS reduce using rule 236 (add_relop -> .)
    CONCATENATE     reduce using rule 236 (add_relop -> .)

    add_relop                      shift and go to state 191

state 149

    (234) EXP_RELOP_A -> EMPTY .

    AND             reduce using rule 234 (EXP_RELOP_A -> EMPTY .)
    OR              reduce using rule 234 (EXP_RELOP_A -> EMPTY .)
    SEMICOLON       reduce using rule 234 (EXP_RELOP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 234 (EXP_RELOP_A -> EMPTY .)
    CONCATENATE     reduce using rule 234 (EXP_RELOP_A -> EMPTY .)


state 150

    (112) EXP -> TERMINO pop_exp . EXP_A
    (114) EXP_A -> . PLUS append_operator EXP
    (115) EXP_A -> . MINS append_operator EXP
    (116) EXP_A -> . EMPTY
    (237) EMPTY -> .

    PLUS            shift and go to state 193
    MINS            shift and go to state 194
    RELOP           reduce using rule 237 (EMPTY -> .)
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    ID              reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)

    EXP_A                          shift and go to state 192
    EMPTY                          shift and go to state 195

state 151

    (118) TERMINO -> FACTOR pop_term . TERMINO_A
    (120) TERMINO_A -> . TIMES add_operator TERMINO
    (121) TERMINO_A -> . DIVIDE add_operator TERMINO
    (122) TERMINO_A -> . EMPTY
    (237) EMPTY -> .

    TIMES           shift and go to state 197
    DIVIDE          shift and go to state 198
    PLUS            reduce using rule 237 (EMPTY -> .)
    MINS            reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    ID              reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)

    TERMINO_A                      shift and go to state 196
    EMPTY                          shift and go to state 199

state 152

    (132) FACTOR_A -> OPEN_PARENTHESIS add_parenthesis . FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (139) FACTOR_B -> . EXPRESIONESVARIAS
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    FACTOR_B                       shift and go to state 200
    EXPRESIONESVARIAS              shift and go to state 201
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 153

    (133) FACTOR_A -> PLUS FACTOR_C .

    TIMES           reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    DIVIDE          reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    PLUS            reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    MINS            reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    RELOP           reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    AND             reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    OR              reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    SEMICOLON       reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    CONCATENATE     reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    COMMA           reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    ID              reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    IF              reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    RETURN          reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 133 (FACTOR_A -> PLUS FACTOR_C .)


state 154

    (134) FACTOR_A -> MINS FACTOR_C .

    TIMES           reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    DIVIDE          reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    PLUS            reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    MINS            reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    RELOP           reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    AND             reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    OR              reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    SEMICOLON       reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    CONCATENATE     reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    COMMA           reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    ID              reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    IF              reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    RETURN          reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 134 (FACTOR_A -> MINS FACTOR_C .)


state 155

    (141) VARS_CTE -> CTE_INTEGER append_cte_int .

    TIMES           reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    DIVIDE          reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    PLUS            reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    MINS            reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    RELOP           reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    AND             reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    OR              reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    SEMICOLON       reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_PARENTHESIS reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CONCATENATE     reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_SQUARE_BRACKET reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    COMMA           reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    ID              reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    IF              reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    FOR_KEYWORD     reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    WHILE_KEYWORD   reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    PRINT_KEYWORD   reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    INPUT_KEYWORD   reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    RETURN          reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_BRACKET   reduce using rule 141 (VARS_CTE -> CTE_INTEGER append_cte_int .)


state 156

    (142) VARS_CTE -> CTE_FLOAT append_cte_float .

    TIMES           reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    DIVIDE          reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    PLUS            reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    MINS            reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    RELOP           reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    AND             reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    OR              reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    SEMICOLON       reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_PARENTHESIS reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CONCATENATE     reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_SQUARE_BRACKET reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    COMMA           reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    ID              reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    IF              reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    FOR_KEYWORD     reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    WHILE_KEYWORD   reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    PRINT_KEYWORD   reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    INPUT_KEYWORD   reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    RETURN          reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_BRACKET   reduce using rule 142 (VARS_CTE -> CTE_FLOAT append_cte_float .)


state 157

    (143) VARS_CTE -> TRUE append_bool .

    TIMES           reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    DIVIDE          reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    PLUS            reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    MINS            reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    RELOP           reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    AND             reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    OR              reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    SEMICOLON       reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    CLOSE_PARENTHESIS reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    CONCATENATE     reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    CLOSE_SQUARE_BRACKET reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    COMMA           reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    ID              reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    IF              reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    FOR_KEYWORD     reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    WHILE_KEYWORD   reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    PRINT_KEYWORD   reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    INPUT_KEYWORD   reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    RETURN          reduce using rule 143 (VARS_CTE -> TRUE append_bool .)
    CLOSE_BRACKET   reduce using rule 143 (VARS_CTE -> TRUE append_bool .)


state 158

    (144) VARS_CTE -> FALSE append_bool .

    TIMES           reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    DIVIDE          reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    PLUS            reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    MINS            reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    RELOP           reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    AND             reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    OR              reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    SEMICOLON       reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    CLOSE_PARENTHESIS reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    CONCATENATE     reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    CLOSE_SQUARE_BRACKET reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    COMMA           reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    ID              reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    IF              reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    FOR_KEYWORD     reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    WHILE_KEYWORD   reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    PRINT_KEYWORD   reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    INPUT_KEYWORD   reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    RETURN          reduce using rule 144 (VARS_CTE -> FALSE append_bool .)
    CLOSE_BRACKET   reduce using rule 144 (VARS_CTE -> FALSE append_bool .)


state 159

    (145) VARS_CTE -> ID append_id .
    (146) VARS_CTE -> ID append_id . OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> ID append_id . OPEN_PARENTHESIS VARS_CTE_B

    TIMES           reduce using rule 145 (VARS_CTE -> ID append_id .)
    DIVIDE          reduce using rule 145 (VARS_CTE -> ID append_id .)
    PLUS            reduce using rule 145 (VARS_CTE -> ID append_id .)
    MINS            reduce using rule 145 (VARS_CTE -> ID append_id .)
    RELOP           reduce using rule 145 (VARS_CTE -> ID append_id .)
    AND             reduce using rule 145 (VARS_CTE -> ID append_id .)
    OR              reduce using rule 145 (VARS_CTE -> ID append_id .)
    SEMICOLON       reduce using rule 145 (VARS_CTE -> ID append_id .)
    CLOSE_PARENTHESIS reduce using rule 145 (VARS_CTE -> ID append_id .)
    CONCATENATE     reduce using rule 145 (VARS_CTE -> ID append_id .)
    CLOSE_SQUARE_BRACKET reduce using rule 145 (VARS_CTE -> ID append_id .)
    COMMA           reduce using rule 145 (VARS_CTE -> ID append_id .)
    ID              reduce using rule 145 (VARS_CTE -> ID append_id .)
    IF              reduce using rule 145 (VARS_CTE -> ID append_id .)
    FOR_KEYWORD     reduce using rule 145 (VARS_CTE -> ID append_id .)
    WHILE_KEYWORD   reduce using rule 145 (VARS_CTE -> ID append_id .)
    PRINT_KEYWORD   reduce using rule 145 (VARS_CTE -> ID append_id .)
    INPUT_KEYWORD   reduce using rule 145 (VARS_CTE -> ID append_id .)
    RETURN          reduce using rule 145 (VARS_CTE -> ID append_id .)
    CLOSE_BRACKET   reduce using rule 145 (VARS_CTE -> ID append_id .)
    OPEN_SQUARE_BRACKET shift and go to state 202
    OPEN_PARENTHESIS shift and go to state 203


state 160

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars . change_scope endproc
    (54) change_scope -> .

    MODULE          reduce using rule 54 (change_scope -> .)
    MAIN            reduce using rule 54 (change_scope -> .)

    change_scope                   shift and go to state 204

state 161

    (60) MODULO_C -> TIPO_P ID . add_variable_m MODULO_B MODULO_D
    (61) add_variable_m -> .

    COMMA           reduce using rule 61 (add_variable_m -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (add_variable_m -> .)
    MODULE          reduce using rule 61 (add_variable_m -> .)
    MAIN            reduce using rule 61 (add_variable_m -> .)

    add_variable_m                 shift and go to state 205

state 162

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET . VARS_F
    (16) VARS_F -> . OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET
    (17) VARS_F -> . EMPTY
    (237) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 206
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)

    VARS_F                         shift and go to state 207
    EMPTY                          shift and go to state 208

state 163

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C . SEMICOLON quad

    SEMICOLON       shift and go to state 209


state 164

    (91) ASIGNACION_C -> EQUAL . add_equal EXPRESIONESVARIAS
    (92) ASIGNACION_C -> EQUAL . CTE_STRING
    (93) add_equal -> .

    CTE_STRING      shift and go to state 211
    NOT             reduce using rule 93 (add_equal -> .)
    OPEN_PARENTHESIS reduce using rule 93 (add_equal -> .)
    PLUS            reduce using rule 93 (add_equal -> .)
    MINS            reduce using rule 93 (add_equal -> .)
    CTE_INTEGER     reduce using rule 93 (add_equal -> .)
    CTE_FLOAT       reduce using rule 93 (add_equal -> .)
    TRUE            reduce using rule 93 (add_equal -> .)
    FALSE           reduce using rule 93 (add_equal -> .)
    ID              reduce using rule 93 (add_equal -> .)
    AND             reduce using rule 93 (add_equal -> .)
    OR              reduce using rule 93 (add_equal -> .)
    RELOP           reduce using rule 93 (add_equal -> .)
    TIMES           reduce using rule 93 (add_equal -> .)
    DIVIDE          reduce using rule 93 (add_equal -> .)
    SEMICOLON       reduce using rule 93 (add_equal -> .)

    add_equal                      shift and go to state 210

state 165

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B

    CLOSE_SQUARE_BRACKET shift and go to state 212


state 166

    (136) FACTOR_A -> EMPTY .

    TIMES           reduce using rule 136 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 136 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 136 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 136 (FACTOR_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 136 (FACTOR_A -> EMPTY .)
    COMMA           reduce using rule 136 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 136 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 136 (FACTOR_A -> EMPTY .)
    IF              reduce using rule 136 (FACTOR_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 136 (FACTOR_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 136 (FACTOR_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 136 (FACTOR_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 136 (FACTOR_A -> EMPTY .)
    RETURN          reduce using rule 136 (FACTOR_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 136 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 136 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 136 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 136 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 136 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 136 (FACTOR_A -> EMPTY .)


state 167

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 213


state 168

    (124) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS . COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (125) COLOR_A -> . COLOR_RED
    (126) COLOR_A -> . COLOR_BLACK
    (127) COLOR_A -> . COLOR_BLUE
    (128) COLOR_A -> . COLOR_PURPLE
    (129) COLOR_A -> . COLOR_GREEN
    (130) COLOR_A -> . COLOR_ORANGE

    COLOR_RED       shift and go to state 215
    COLOR_BLACK     shift and go to state 216
    COLOR_BLUE      shift and go to state 217
    COLOR_PURPLE    shift and go to state 218
    COLOR_GREEN     shift and go to state 219
    COLOR_ORANGE    shift and go to state 220

    COLOR_A                        shift and go to state 214

state 169

    (176) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS . PLOT_C
    (184) PLOT_C -> . PLOT_I CLOSE_PARENTHESIS SEMICOLON
    (185) PLOT_I -> . CTE_INTEGER PLOT_D
    (186) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 223
    CTE_FLOAT       shift and go to state 224

    PLOT_C                         shift and go to state 221
    PLOT_I                         shift and go to state 222

state 170

    (177) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS . PLOT_E
    (189) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (190) PLOT_F -> . CTE_INTEGER PLOT_J
    (191) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 227
    CTE_FLOAT       shift and go to state 228

    PLOT_E                         shift and go to state 225
    PLOT_F                         shift and go to state 226

state 171

    (178) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS . PLOT_E
    (189) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (190) PLOT_F -> . CTE_INTEGER PLOT_J
    (191) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 227
    CTE_FLOAT       shift and go to state 228

    PLOT_E                         shift and go to state 229
    PLOT_F                         shift and go to state 226

state 172

    (179) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS . PLOT_E
    (189) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (190) PLOT_F -> . CTE_INTEGER PLOT_J
    (191) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 227
    CTE_FLOAT       shift and go to state 228

    PLOT_E                         shift and go to state 230
    PLOT_F                         shift and go to state 226

state 173

    (180) PDona -> ID POINT CREATED OPEN_PARENTHESIS . PLOT_E
    (189) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (190) PLOT_F -> . CTE_INTEGER PLOT_J
    (191) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 227
    CTE_FLOAT       shift and go to state 228

    PLOT_E                         shift and go to state 231
    PLOT_F                         shift and go to state 226

state 174

    (181) PRadar -> ID POINT CREATER OPEN_PARENTHESIS . PLOT_E
    (189) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (190) PLOT_F -> . CTE_INTEGER PLOT_J
    (191) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 227
    CTE_FLOAT       shift and go to state 228

    PLOT_E                         shift and go to state 232
    PLOT_F                         shift and go to state 226

state 175

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS . CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 233


state 176

    (183) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS . OPEN_SQUARE_BRACKET PLOT_M

    OPEN_SQUARE_BRACKET shift and go to state 234


state 177

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C . gosub
    (69) gosub -> .

    ID              reduce using rule 69 (gosub -> .)
    IF              reduce using rule 69 (gosub -> .)
    FOR_KEYWORD     reduce using rule 69 (gosub -> .)
    WHILE_KEYWORD   reduce using rule 69 (gosub -> .)
    PRINT_KEYWORD   reduce using rule 69 (gosub -> .)
    INPUT_KEYWORD   reduce using rule 69 (gosub -> .)
    RETURN          reduce using rule 69 (gosub -> .)
    CLOSE_BRACKET   reduce using rule 69 (gosub -> .)

    gosub                          shift and go to state 235

state 178

    (74) LLAMADAMODULO_C -> EXP . check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (75) check_types -> .

    COMMA           reduce using rule 75 (check_types -> .)
    CLOSE_PARENTHESIS reduce using rule 75 (check_types -> .)
    ID              reduce using rule 75 (check_types -> .)
    IF              reduce using rule 75 (check_types -> .)
    FOR_KEYWORD     reduce using rule 75 (check_types -> .)
    WHILE_KEYWORD   reduce using rule 75 (check_types -> .)
    PRINT_KEYWORD   reduce using rule 75 (check_types -> .)
    INPUT_KEYWORD   reduce using rule 75 (check_types -> .)
    RETURN          reduce using rule 75 (check_types -> .)
    CLOSE_BRACKET   reduce using rule 75 (check_types -> .)

    check_types                    shift and go to state 236

state 179

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not . CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end

    CLOSE_PARENTHESIS shift and go to state 237


state 180

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump . EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 238
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 181

    (107) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS . while_gotof CLOSE_PARENTHESIS BLOQUE goto_while
    (108) while_gotof -> .

    CLOSE_PARENTHESIS reduce using rule 108 (while_gotof -> .)

    while_gotof                    shift and go to state 239

state 182

    (206) PRINT_A -> PRINT_B CLOSE_PARENTHESIS . print_quad SEMICOLON
    (211) print_quad -> .

    SEMICOLON       reduce using rule 211 (print_quad -> .)

    print_quad                     shift and go to state 240

state 183

    (207) PRINT_B -> CTE_STRING add_string . PRINT_C
    (214) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (215) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (216) PRINT_C -> . EMPTY
    (237) EMPTY -> .

    CONCATENATE     shift and go to state 242
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)

    PRINT_C                        shift and go to state 241
    EMPTY                          shift and go to state 243

state 184

    (208) PRINT_B -> EXPRESIONESVARIAS add_temp . PRINT_C
    (214) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (215) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (216) PRINT_C -> . EMPTY
    (237) EMPTY -> .

    CONCATENATE     shift and go to state 242
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)

    PRINT_C                        shift and go to state 244
    EMPTY                          shift and go to state 243

state 185

    (162) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid . INPUT_A SEMICOLON quad_input
    (165) INPUT_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
    (166) INPUT_A -> . EMPTY
    (237) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 246
    SEMICOLON       reduce using rule 237 (EMPTY -> .)

    INPUT_A                        shift and go to state 245
    EMPTY                          shift and go to state 247

state 186

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .

    ID              reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    IF              reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    RETURN          reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)


state 187

    (225) EV_C -> EXP_RELOP quad_andor EV_B .

    SEMICOLON       reduce using rule 225 (EV_C -> EXP_RELOP quad_andor EV_B .)
    CLOSE_PARENTHESIS reduce using rule 225 (EV_C -> EXP_RELOP quad_andor EV_B .)
    CONCATENATE     reduce using rule 225 (EV_C -> EXP_RELOP quad_andor EV_B .)


state 188

    (227) EV_B -> AND . add_ev EV_C
    (230) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 230 (add_ev -> .)
    PLUS            reduce using rule 230 (add_ev -> .)
    MINS            reduce using rule 230 (add_ev -> .)
    CTE_INTEGER     reduce using rule 230 (add_ev -> .)
    CTE_FLOAT       reduce using rule 230 (add_ev -> .)
    TRUE            reduce using rule 230 (add_ev -> .)
    FALSE           reduce using rule 230 (add_ev -> .)
    ID              reduce using rule 230 (add_ev -> .)
    AND             reduce using rule 230 (add_ev -> .)
    OR              reduce using rule 230 (add_ev -> .)
    RELOP           reduce using rule 230 (add_ev -> .)
    TIMES           reduce using rule 230 (add_ev -> .)
    DIVIDE          reduce using rule 230 (add_ev -> .)
    SEMICOLON       reduce using rule 230 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 230 (add_ev -> .)
    CONCATENATE     reduce using rule 230 (add_ev -> .)

    add_ev                         shift and go to state 248

state 189

    (228) EV_B -> OR . add_ev EV_C
    (230) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 230 (add_ev -> .)
    PLUS            reduce using rule 230 (add_ev -> .)
    MINS            reduce using rule 230 (add_ev -> .)
    CTE_INTEGER     reduce using rule 230 (add_ev -> .)
    CTE_FLOAT       reduce using rule 230 (add_ev -> .)
    TRUE            reduce using rule 230 (add_ev -> .)
    FALSE           reduce using rule 230 (add_ev -> .)
    ID              reduce using rule 230 (add_ev -> .)
    AND             reduce using rule 230 (add_ev -> .)
    OR              reduce using rule 230 (add_ev -> .)
    RELOP           reduce using rule 230 (add_ev -> .)
    TIMES           reduce using rule 230 (add_ev -> .)
    DIVIDE          reduce using rule 230 (add_ev -> .)
    SEMICOLON       reduce using rule 230 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 230 (add_ev -> .)
    CONCATENATE     reduce using rule 230 (add_ev -> .)

    add_ev                         shift and go to state 249

state 190

    (229) EV_B -> EMPTY .

    SEMICOLON       reduce using rule 229 (EV_B -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 229 (EV_B -> EMPTY .)
    CONCATENATE     reduce using rule 229 (EV_B -> EMPTY .)


state 191

    (233) EXP_RELOP_A -> RELOP add_relop . EXP quad_relop
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 250
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 192

    (112) EXP -> TERMINO pop_exp EXP_A .

    RELOP           reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    AND             reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    OR              reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    SEMICOLON       reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_PARENTHESIS reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    CONCATENATE     reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    COMMA           reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    ID              reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    IF              reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    FOR_KEYWORD     reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    WHILE_KEYWORD   reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    PRINT_KEYWORD   reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    INPUT_KEYWORD   reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    RETURN          reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_BRACKET   reduce using rule 112 (EXP -> TERMINO pop_exp EXP_A .)


state 193

    (114) EXP_A -> PLUS . append_operator EXP
    (117) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 117 (append_operator -> .)
    PLUS            reduce using rule 117 (append_operator -> .)
    MINS            reduce using rule 117 (append_operator -> .)
    CTE_INTEGER     reduce using rule 117 (append_operator -> .)
    CTE_FLOAT       reduce using rule 117 (append_operator -> .)
    TRUE            reduce using rule 117 (append_operator -> .)
    FALSE           reduce using rule 117 (append_operator -> .)
    ID              reduce using rule 117 (append_operator -> .)
    TIMES           reduce using rule 117 (append_operator -> .)
    DIVIDE          reduce using rule 117 (append_operator -> .)
    RELOP           reduce using rule 117 (append_operator -> .)
    AND             reduce using rule 117 (append_operator -> .)
    OR              reduce using rule 117 (append_operator -> .)
    SEMICOLON       reduce using rule 117 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 117 (append_operator -> .)
    CONCATENATE     reduce using rule 117 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 117 (append_operator -> .)
    COMMA           reduce using rule 117 (append_operator -> .)
    IF              reduce using rule 117 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 117 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 117 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 117 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 117 (append_operator -> .)
    RETURN          reduce using rule 117 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 117 (append_operator -> .)

    append_operator                shift and go to state 251

state 194

    (115) EXP_A -> MINS . append_operator EXP
    (117) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 117 (append_operator -> .)
    PLUS            reduce using rule 117 (append_operator -> .)
    MINS            reduce using rule 117 (append_operator -> .)
    CTE_INTEGER     reduce using rule 117 (append_operator -> .)
    CTE_FLOAT       reduce using rule 117 (append_operator -> .)
    TRUE            reduce using rule 117 (append_operator -> .)
    FALSE           reduce using rule 117 (append_operator -> .)
    ID              reduce using rule 117 (append_operator -> .)
    TIMES           reduce using rule 117 (append_operator -> .)
    DIVIDE          reduce using rule 117 (append_operator -> .)
    RELOP           reduce using rule 117 (append_operator -> .)
    AND             reduce using rule 117 (append_operator -> .)
    OR              reduce using rule 117 (append_operator -> .)
    SEMICOLON       reduce using rule 117 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 117 (append_operator -> .)
    CONCATENATE     reduce using rule 117 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 117 (append_operator -> .)
    COMMA           reduce using rule 117 (append_operator -> .)
    IF              reduce using rule 117 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 117 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 117 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 117 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 117 (append_operator -> .)
    RETURN          reduce using rule 117 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 117 (append_operator -> .)

    append_operator                shift and go to state 252

state 195

    (116) EXP_A -> EMPTY .

    RELOP           reduce using rule 116 (EXP_A -> EMPTY .)
    AND             reduce using rule 116 (EXP_A -> EMPTY .)
    OR              reduce using rule 116 (EXP_A -> EMPTY .)
    SEMICOLON       reduce using rule 116 (EXP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 116 (EXP_A -> EMPTY .)
    CONCATENATE     reduce using rule 116 (EXP_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 116 (EXP_A -> EMPTY .)
    COMMA           reduce using rule 116 (EXP_A -> EMPTY .)
    ID              reduce using rule 116 (EXP_A -> EMPTY .)
    IF              reduce using rule 116 (EXP_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 116 (EXP_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 116 (EXP_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 116 (EXP_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 116 (EXP_A -> EMPTY .)
    RETURN          reduce using rule 116 (EXP_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 116 (EXP_A -> EMPTY .)


state 196

    (118) TERMINO -> FACTOR pop_term TERMINO_A .

    PLUS            reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    MINS            reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RELOP           reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    AND             reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    OR              reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    SEMICOLON       reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_PARENTHESIS reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CONCATENATE     reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    COMMA           reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    ID              reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    IF              reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    FOR_KEYWORD     reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    WHILE_KEYWORD   reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    PRINT_KEYWORD   reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    INPUT_KEYWORD   reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RETURN          reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_BRACKET   reduce using rule 118 (TERMINO -> FACTOR pop_term TERMINO_A .)


state 197

    (120) TERMINO_A -> TIMES . add_operator TERMINO
    (123) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 123 (add_operator -> .)
    PLUS            reduce using rule 123 (add_operator -> .)
    MINS            reduce using rule 123 (add_operator -> .)
    CTE_INTEGER     reduce using rule 123 (add_operator -> .)
    CTE_FLOAT       reduce using rule 123 (add_operator -> .)
    TRUE            reduce using rule 123 (add_operator -> .)
    FALSE           reduce using rule 123 (add_operator -> .)
    ID              reduce using rule 123 (add_operator -> .)
    TIMES           reduce using rule 123 (add_operator -> .)
    DIVIDE          reduce using rule 123 (add_operator -> .)
    RELOP           reduce using rule 123 (add_operator -> .)
    AND             reduce using rule 123 (add_operator -> .)
    OR              reduce using rule 123 (add_operator -> .)
    SEMICOLON       reduce using rule 123 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 123 (add_operator -> .)
    CONCATENATE     reduce using rule 123 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 123 (add_operator -> .)
    COMMA           reduce using rule 123 (add_operator -> .)
    IF              reduce using rule 123 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 123 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 123 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 123 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 123 (add_operator -> .)
    RETURN          reduce using rule 123 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 123 (add_operator -> .)

    add_operator                   shift and go to state 253

state 198

    (121) TERMINO_A -> DIVIDE . add_operator TERMINO
    (123) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 123 (add_operator -> .)
    PLUS            reduce using rule 123 (add_operator -> .)
    MINS            reduce using rule 123 (add_operator -> .)
    CTE_INTEGER     reduce using rule 123 (add_operator -> .)
    CTE_FLOAT       reduce using rule 123 (add_operator -> .)
    TRUE            reduce using rule 123 (add_operator -> .)
    FALSE           reduce using rule 123 (add_operator -> .)
    ID              reduce using rule 123 (add_operator -> .)
    TIMES           reduce using rule 123 (add_operator -> .)
    DIVIDE          reduce using rule 123 (add_operator -> .)
    RELOP           reduce using rule 123 (add_operator -> .)
    AND             reduce using rule 123 (add_operator -> .)
    OR              reduce using rule 123 (add_operator -> .)
    SEMICOLON       reduce using rule 123 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 123 (add_operator -> .)
    CONCATENATE     reduce using rule 123 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 123 (add_operator -> .)
    COMMA           reduce using rule 123 (add_operator -> .)
    IF              reduce using rule 123 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 123 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 123 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 123 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 123 (add_operator -> .)
    RETURN          reduce using rule 123 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 123 (add_operator -> .)

    add_operator                   shift and go to state 254

state 199

    (122) TERMINO_A -> EMPTY .

    PLUS            reduce using rule 122 (TERMINO_A -> EMPTY .)
    MINS            reduce using rule 122 (TERMINO_A -> EMPTY .)
    RELOP           reduce using rule 122 (TERMINO_A -> EMPTY .)
    AND             reduce using rule 122 (TERMINO_A -> EMPTY .)
    OR              reduce using rule 122 (TERMINO_A -> EMPTY .)
    SEMICOLON       reduce using rule 122 (TERMINO_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 122 (TERMINO_A -> EMPTY .)
    CONCATENATE     reduce using rule 122 (TERMINO_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 122 (TERMINO_A -> EMPTY .)
    COMMA           reduce using rule 122 (TERMINO_A -> EMPTY .)
    ID              reduce using rule 122 (TERMINO_A -> EMPTY .)
    IF              reduce using rule 122 (TERMINO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 122 (TERMINO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 122 (TERMINO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 122 (TERMINO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 122 (TERMINO_A -> EMPTY .)
    RETURN          reduce using rule 122 (TERMINO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 122 (TERMINO_A -> EMPTY .)


state 200

    (132) FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B . CLOSE_PARENTHESIS pop_parenthesis

    CLOSE_PARENTHESIS shift and go to state 255


state 201

    (139) FACTOR_B -> EXPRESIONESVARIAS .

    CLOSE_PARENTHESIS reduce using rule 139 (FACTOR_B -> EXPRESIONESVARIAS .)


state 202

    (146) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET . add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (155) add_SB -> .

    OPEN_PARENTHESIS reduce using rule 155 (add_SB -> .)
    PLUS            reduce using rule 155 (add_SB -> .)
    MINS            reduce using rule 155 (add_SB -> .)
    CTE_INTEGER     reduce using rule 155 (add_SB -> .)
    CTE_FLOAT       reduce using rule 155 (add_SB -> .)
    TRUE            reduce using rule 155 (add_SB -> .)
    FALSE           reduce using rule 155 (add_SB -> .)
    ID              reduce using rule 155 (add_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 155 (add_SB -> .)
    TIMES           reduce using rule 155 (add_SB -> .)
    DIVIDE          reduce using rule 155 (add_SB -> .)

    add_SB                         shift and go to state 256

state 203

    (147) VARS_CTE -> ID append_id OPEN_PARENTHESIS . VARS_CTE_B
    (157) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 257
    EXP                            shift and go to state 258
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 204

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope . endproc
    (53) endproc -> .

    MODULE          reduce using rule 53 (endproc -> .)
    MAIN            reduce using rule 53 (endproc -> .)

    endproc                        shift and go to state 259

state 205

    (60) MODULO_C -> TIPO_P ID add_variable_m . MODULO_B MODULO_D
    (58) MODULO_B -> . COMMA MODULO_C
    (59) MODULO_B -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 261
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    MODULE          reduce using rule 237 (EMPTY -> .)
    MAIN            reduce using rule 237 (EMPTY -> .)

    MODULO_B                       shift and go to state 260
    EMPTY                          shift and go to state 262

state 206

    (16) VARS_F -> OPEN_SQUARE_BRACKET . CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET

    CTE_INTEGER     shift and go to state 263


state 207

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .

    SEMICOLON       reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .)
    COMMA           reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .)


state 208

    (17) VARS_F -> EMPTY .

    SEMICOLON       reduce using rule 17 (VARS_F -> EMPTY .)
    COMMA           reduce using rule 17 (VARS_F -> EMPTY .)


state 209

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON . quad
    (83) quad -> .

    ID              reduce using rule 83 (quad -> .)
    IF              reduce using rule 83 (quad -> .)
    FOR_KEYWORD     reduce using rule 83 (quad -> .)
    WHILE_KEYWORD   reduce using rule 83 (quad -> .)
    PRINT_KEYWORD   reduce using rule 83 (quad -> .)
    INPUT_KEYWORD   reduce using rule 83 (quad -> .)
    RETURN          reduce using rule 83 (quad -> .)
    CLOSE_BRACKET   reduce using rule 83 (quad -> .)
    NOT             reduce using rule 83 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 83 (quad -> .)
    PLUS            reduce using rule 83 (quad -> .)
    MINS            reduce using rule 83 (quad -> .)
    CTE_INTEGER     reduce using rule 83 (quad -> .)
    CTE_FLOAT       reduce using rule 83 (quad -> .)
    TRUE            reduce using rule 83 (quad -> .)
    FALSE           reduce using rule 83 (quad -> .)
    SEMICOLON       reduce using rule 83 (quad -> .)
    AND             reduce using rule 83 (quad -> .)
    OR              reduce using rule 83 (quad -> .)
    RELOP           reduce using rule 83 (quad -> .)
    TIMES           reduce using rule 83 (quad -> .)
    DIVIDE          reduce using rule 83 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (quad -> .)

    quad                           shift and go to state 264

state 210

    (91) ASIGNACION_C -> EQUAL add_equal . EXPRESIONESVARIAS
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 265
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 211

    (92) ASIGNACION_C -> EQUAL CTE_STRING .

    SEMICOLON       reduce using rule 92 (ASIGNACION_C -> EQUAL CTE_STRING .)


state 212

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ver_arr ASIGNACION_B
    (87) ver_arr -> .

    OPEN_SQUARE_BRACKET reduce using rule 87 (ver_arr -> .)
    EQUAL           reduce using rule 87 (ver_arr -> .)

    ver_arr                        shift and go to state 266

state 213

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 267


state 214

    (124) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 268


state 215

    (125) COLOR_A -> COLOR_RED .

    CLOSE_PARENTHESIS reduce using rule 125 (COLOR_A -> COLOR_RED .)


state 216

    (126) COLOR_A -> COLOR_BLACK .

    CLOSE_PARENTHESIS reduce using rule 126 (COLOR_A -> COLOR_BLACK .)


state 217

    (127) COLOR_A -> COLOR_BLUE .

    CLOSE_PARENTHESIS reduce using rule 127 (COLOR_A -> COLOR_BLUE .)


state 218

    (128) COLOR_A -> COLOR_PURPLE .

    CLOSE_PARENTHESIS reduce using rule 128 (COLOR_A -> COLOR_PURPLE .)


state 219

    (129) COLOR_A -> COLOR_GREEN .

    CLOSE_PARENTHESIS reduce using rule 129 (COLOR_A -> COLOR_GREEN .)


state 220

    (130) COLOR_A -> COLOR_ORANGE .

    CLOSE_PARENTHESIS reduce using rule 130 (COLOR_A -> COLOR_ORANGE .)


state 221

    (176) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .

    ID              reduce using rule 176 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    IF              reduce using rule 176 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    FOR_KEYWORD     reduce using rule 176 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    WHILE_KEYWORD   reduce using rule 176 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    PRINT_KEYWORD   reduce using rule 176 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    INPUT_KEYWORD   reduce using rule 176 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    RETURN          reduce using rule 176 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    CLOSE_BRACKET   reduce using rule 176 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)


state 222

    (184) PLOT_C -> PLOT_I . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 269


state 223

    (185) PLOT_I -> CTE_INTEGER . PLOT_D
    (187) PLOT_D -> . COMMA PLOT_I
    (188) PLOT_D -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 271
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)

    PLOT_D                         shift and go to state 270
    EMPTY                          shift and go to state 272

state 224

    (186) PLOT_I -> CTE_FLOAT . PLOT_D
    (187) PLOT_D -> . COMMA PLOT_I
    (188) PLOT_D -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 271
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)

    PLOT_D                         shift and go to state 273
    EMPTY                          shift and go to state 272

state 225

    (177) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 177 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 177 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 177 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 177 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 177 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 177 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 177 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 177 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)


state 226

    (189) PLOT_E -> PLOT_F . SEMICOLON PLOT_G

    SEMICOLON       shift and go to state 274


state 227

    (190) PLOT_F -> CTE_INTEGER . PLOT_J
    (192) PLOT_J -> . COMMA PLOT_F
    (193) PLOT_J -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 276
    SEMICOLON       reduce using rule 237 (EMPTY -> .)

    PLOT_J                         shift and go to state 275
    EMPTY                          shift and go to state 277

state 228

    (191) PLOT_F -> CTE_FLOAT . PLOT_J
    (192) PLOT_J -> . COMMA PLOT_F
    (193) PLOT_J -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 276
    SEMICOLON       reduce using rule 237 (EMPTY -> .)

    PLOT_J                         shift and go to state 278
    EMPTY                          shift and go to state 277

state 229

    (178) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 178 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 178 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 178 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 178 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 178 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 178 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 178 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 178 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)


state 230

    (179) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 179 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 179 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 179 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 179 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 179 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 179 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 179 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 179 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)


state 231

    (180) PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 180 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 180 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 180 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 180 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 180 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 180 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 180 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 180 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)


state 232

    (181) PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 181 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 181 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 181 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 181 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 181 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 181 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 181 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 181 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)


state 233

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER . COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 279


state 234

    (183) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET . PLOT_M
    (198) PLOT_M -> . PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (199) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 282

    PLOT_M                         shift and go to state 280
    PLOT_N                         shift and go to state 281

state 235

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .

    ID              reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    IF              reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    FOR_KEYWORD     reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    WHILE_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    PRINT_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    INPUT_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    RETURN          reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    CLOSE_BRACKET   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)


state 236

    (74) LLAMADAMODULO_C -> EXP check_types . LLAMADAMODULO_A LLAMADAMODULO_D
    (71) LLAMADAMODULO_A -> . COMMA incK LLAMADAMODULO_C
    (72) LLAMADAMODULO_A -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 284
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    ID              reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)

    LLAMADAMODULO_A                shift and go to state 283
    EMPTY                          shift and go to state 285

state 237

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS . if_gotof BLOQUE CONDICION_A fill_end
    (95) if_gotof -> .

    OPEN_BRACKET    reduce using rule 95 (if_gotof -> .)

    if_gotof                       shift and go to state 286

state 238

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS . for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (104) for_gotof -> .

    SEMICOLON       reduce using rule 104 (for_gotof -> .)

    for_gotof                      shift and go to state 287

state 239

    (107) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof . CLOSE_PARENTHESIS BLOQUE goto_while

    CLOSE_PARENTHESIS shift and go to state 288


state 240

    (206) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad . SEMICOLON

    SEMICOLON       shift and go to state 289


state 241

    (207) PRINT_B -> CTE_STRING add_string PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 207 (PRINT_B -> CTE_STRING add_string PRINT_C .)


state 242

    (214) PRINT_C -> CONCATENATE . EXPRESIONESVARIAS add_con PRINT_D
    (215) PRINT_C -> CONCATENATE . CTE_STRING add_exp PRINT_D
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 291
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 290
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 243

    (216) PRINT_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 216 (PRINT_C -> EMPTY .)


state 244

    (208) PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 208 (PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .)


state 245

    (162) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A . SEMICOLON quad_input

    SEMICOLON       shift and go to state 292


state 246

    (165) INPUT_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET INPUT_B
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 293
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 247

    (166) INPUT_A -> EMPTY .

    SEMICOLON       reduce using rule 166 (INPUT_A -> EMPTY .)


state 248

    (227) EV_B -> AND add_ev . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EV_C                           shift and go to state 294
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 249

    (228) EV_B -> OR add_ev . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EV_C                           shift and go to state 295
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 250

    (233) EXP_RELOP_A -> RELOP add_relop EXP . quad_relop
    (235) quad_relop -> .

    AND             reduce using rule 235 (quad_relop -> .)
    OR              reduce using rule 235 (quad_relop -> .)
    SEMICOLON       reduce using rule 235 (quad_relop -> .)
    CLOSE_PARENTHESIS reduce using rule 235 (quad_relop -> .)
    CONCATENATE     reduce using rule 235 (quad_relop -> .)

    quad_relop                     shift and go to state 296

state 251

    (114) EXP_A -> PLUS append_operator . EXP
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]
  ! ID              [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 297
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 252

    (115) EXP_A -> MINS append_operator . EXP
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]
  ! ID              [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 298
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 253

    (120) TERMINO_A -> TIMES add_operator . TERMINO
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]
  ! ID              [ reduce using rule 237 (EMPTY -> .) ]

    TERMINO                        shift and go to state 299
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 254

    (121) TERMINO_A -> DIVIDE add_operator . TERMINO
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]
  ! ID              [ reduce using rule 237 (EMPTY -> .) ]

    TERMINO                        shift and go to state 300
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 255

    (132) FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS . pop_parenthesis
    (138) pop_parenthesis -> .

    TIMES           reduce using rule 138 (pop_parenthesis -> .)
    DIVIDE          reduce using rule 138 (pop_parenthesis -> .)
    PLUS            reduce using rule 138 (pop_parenthesis -> .)
    MINS            reduce using rule 138 (pop_parenthesis -> .)
    RELOP           reduce using rule 138 (pop_parenthesis -> .)
    AND             reduce using rule 138 (pop_parenthesis -> .)
    OR              reduce using rule 138 (pop_parenthesis -> .)
    SEMICOLON       reduce using rule 138 (pop_parenthesis -> .)
    CLOSE_PARENTHESIS reduce using rule 138 (pop_parenthesis -> .)
    CONCATENATE     reduce using rule 138 (pop_parenthesis -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 138 (pop_parenthesis -> .)
    COMMA           reduce using rule 138 (pop_parenthesis -> .)
    ID              reduce using rule 138 (pop_parenthesis -> .)
    IF              reduce using rule 138 (pop_parenthesis -> .)
    FOR_KEYWORD     reduce using rule 138 (pop_parenthesis -> .)
    WHILE_KEYWORD   reduce using rule 138 (pop_parenthesis -> .)
    PRINT_KEYWORD   reduce using rule 138 (pop_parenthesis -> .)
    INPUT_KEYWORD   reduce using rule 138 (pop_parenthesis -> .)
    RETURN          reduce using rule 138 (pop_parenthesis -> .)
    CLOSE_BRACKET   reduce using rule 138 (pop_parenthesis -> .)

    pop_parenthesis                shift and go to state 301

state 256

    (146) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB . EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 302
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 257

    (147) VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .

    TIMES           reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    DIVIDE          reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    PLUS            reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    MINS            reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    RELOP           reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    AND             reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    OR              reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    SEMICOLON       reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CONCATENATE     reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_SQUARE_BRACKET reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    COMMA           reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    ID              reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    IF              reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    FOR_KEYWORD     reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    WHILE_KEYWORD   reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    PRINT_KEYWORD   reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    INPUT_KEYWORD   reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    RETURN          reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_BRACKET   reduce using rule 147 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)


state 258

    (157) VARS_CTE_B -> EXP . VARS_CTE_C CLOSE_PARENTHESIS
    (158) VARS_CTE_C -> . COMMA VARS_CTE_B
    (159) VARS_CTE_C -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 304
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)

    VARS_CTE_C                     shift and go to state 303
    EMPTY                          shift and go to state 305

state 259

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .

    MODULE          reduce using rule 49 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)
    MAIN            reduce using rule 49 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)


state 260

    (60) MODULO_C -> TIPO_P ID add_variable_m MODULO_B . MODULO_D
    (62) MODULO_D -> . CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (63) MODULO_D -> . EMPTY
    (237) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 307
    MODULE          reduce using rule 237 (EMPTY -> .)
    MAIN            reduce using rule 237 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 237 (EMPTY -> .) ]

    MODULO_D                       shift and go to state 306
    EMPTY                          shift and go to state 308

state 261

    (58) MODULO_B -> COMMA . MODULO_C
    (60) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 309
    TIPO_P                         shift and go to state 112

state 262

    (59) MODULO_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 59 (MODULO_B -> EMPTY .)
    MODULE          reduce using rule 59 (MODULO_B -> EMPTY .)
    MAIN            reduce using rule 59 (MODULO_B -> EMPTY .)


state 263

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER . add_s2 CLOSE_SQUARE_BRACKET
    (18) add_s2 -> .

    CLOSE_SQUARE_BRACKET reduce using rule 18 (add_s2 -> .)

    add_s2                         shift and go to state 310

state 264

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .

    ID              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    IF              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FOR_KEYWORD     reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    WHILE_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PRINT_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    INPUT_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RETURN          reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_BRACKET   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    NOT             reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OPEN_PARENTHESIS reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PLUS            reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    MINS            reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_INTEGER     reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_FLOAT       reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TRUE            reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FALSE           reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    SEMICOLON       reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    AND             reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OR              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RELOP           reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TIMES           reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    DIVIDE          reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_PARENTHESIS reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)


state 265

    (91) ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .

    SEMICOLON       reduce using rule 91 (ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .)


state 266

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr . ASIGNACION_B
    (88) ASIGNACION_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat
    (89) ASIGNACION_B -> . EMPTY
    (237) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 311
    EQUAL           reduce using rule 237 (EMPTY -> .)

    ASIGNACION_B                   shift and go to state 312
    EMPTY                          shift and go to state 313

state 267

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 314


state 268

    (124) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 315


state 269

    (184) PLOT_C -> PLOT_I CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 316


state 270

    (185) PLOT_I -> CTE_INTEGER PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 185 (PLOT_I -> CTE_INTEGER PLOT_D .)


state 271

    (187) PLOT_D -> COMMA . PLOT_I
    (185) PLOT_I -> . CTE_INTEGER PLOT_D
    (186) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 223
    CTE_FLOAT       shift and go to state 224

    PLOT_I                         shift and go to state 317

state 272

    (188) PLOT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 188 (PLOT_D -> EMPTY .)


state 273

    (186) PLOT_I -> CTE_FLOAT PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 186 (PLOT_I -> CTE_FLOAT PLOT_D .)


state 274

    (189) PLOT_E -> PLOT_F SEMICOLON . PLOT_G
    (194) PLOT_G -> . PLOT_K CLOSE_PARENTHESIS SEMICOLON
    (195) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 320

    PLOT_G                         shift and go to state 318
    PLOT_K                         shift and go to state 319

state 275

    (190) PLOT_F -> CTE_INTEGER PLOT_J .

    SEMICOLON       reduce using rule 190 (PLOT_F -> CTE_INTEGER PLOT_J .)


state 276

    (192) PLOT_J -> COMMA . PLOT_F
    (190) PLOT_F -> . CTE_INTEGER PLOT_J
    (191) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 227
    CTE_FLOAT       shift and go to state 228

    PLOT_F                         shift and go to state 321

state 277

    (193) PLOT_J -> EMPTY .

    SEMICOLON       reduce using rule 193 (PLOT_J -> EMPTY .)


state 278

    (191) PLOT_F -> CTE_FLOAT PLOT_J .

    SEMICOLON       reduce using rule 191 (PLOT_F -> CTE_FLOAT PLOT_J .)


state 279

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA . CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 322


state 280

    (183) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .

    ID              reduce using rule 183 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    IF              reduce using rule 183 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    FOR_KEYWORD     reduce using rule 183 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    WHILE_KEYWORD   reduce using rule 183 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    PRINT_KEYWORD   reduce using rule 183 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    INPUT_KEYWORD   reduce using rule 183 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    RETURN          reduce using rule 183 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    CLOSE_BRACKET   reduce using rule 183 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)


state 281

    (198) PLOT_M -> PLOT_N . CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 323


state 282

    (199) PLOT_N -> CTE_STRING . PLOT_O
    (200) PLOT_O -> . COMMA PLOT_N
    (201) PLOT_O -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 325
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)

    PLOT_O                         shift and go to state 324
    EMPTY                          shift and go to state 326

state 283

    (74) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A . LLAMADAMODULO_D
    (76) LLAMADAMODULO_D -> . CLOSE_PARENTHESIS SEMICOLON
    (77) LLAMADAMODULO_D -> . EMPTY
    (237) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 328
    ID              reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 237 (EMPTY -> .) ]

    LLAMADAMODULO_D                shift and go to state 327
    EMPTY                          shift and go to state 329

state 284

    (71) LLAMADAMODULO_A -> COMMA . incK LLAMADAMODULO_C
    (73) incK -> .

    OPEN_PARENTHESIS reduce using rule 73 (incK -> .)
    PLUS            reduce using rule 73 (incK -> .)
    MINS            reduce using rule 73 (incK -> .)
    CTE_INTEGER     reduce using rule 73 (incK -> .)
    CTE_FLOAT       reduce using rule 73 (incK -> .)
    TRUE            reduce using rule 73 (incK -> .)
    FALSE           reduce using rule 73 (incK -> .)
    ID              reduce using rule 73 (incK -> .)
    COMMA           reduce using rule 73 (incK -> .)
    CLOSE_PARENTHESIS reduce using rule 73 (incK -> .)
    TIMES           reduce using rule 73 (incK -> .)
    DIVIDE          reduce using rule 73 (incK -> .)
    IF              reduce using rule 73 (incK -> .)
    FOR_KEYWORD     reduce using rule 73 (incK -> .)
    WHILE_KEYWORD   reduce using rule 73 (incK -> .)
    PRINT_KEYWORD   reduce using rule 73 (incK -> .)
    INPUT_KEYWORD   reduce using rule 73 (incK -> .)
    RETURN          reduce using rule 73 (incK -> .)
    CLOSE_BRACKET   reduce using rule 73 (incK -> .)

    incK                           shift and go to state 330

state 285

    (72) LLAMADAMODULO_A -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    ID              reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    IF              reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    RETURN          reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)


state 286

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof . BLOQUE CONDICION_A fill_end
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 331

state 287

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof . SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for

    SEMICOLON       shift and go to state 332


state 288

    (107) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS . BLOQUE goto_while
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 333

state 289

    (206) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .

    ID              reduce using rule 206 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    IF              reduce using rule 206 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 206 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 206 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 206 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 206 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    RETURN          reduce using rule 206 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 206 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)


state 290

    (214) PRINT_C -> CONCATENATE EXPRESIONESVARIAS . add_con PRINT_D
    (218) add_con -> .

    CONCATENATE     reduce using rule 218 (add_con -> .)
    CLOSE_PARENTHESIS reduce using rule 218 (add_con -> .)

    add_con                        shift and go to state 334

state 291

    (215) PRINT_C -> CONCATENATE CTE_STRING . add_exp PRINT_D
    (217) add_exp -> .

    CONCATENATE     reduce using rule 217 (add_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 217 (add_exp -> .)

    add_exp                        shift and go to state 335

state 292

    (162) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON . quad_input
    (164) quad_input -> .

    ID              reduce using rule 164 (quad_input -> .)
    IF              reduce using rule 164 (quad_input -> .)
    FOR_KEYWORD     reduce using rule 164 (quad_input -> .)
    WHILE_KEYWORD   reduce using rule 164 (quad_input -> .)
    PRINT_KEYWORD   reduce using rule 164 (quad_input -> .)
    INPUT_KEYWORD   reduce using rule 164 (quad_input -> .)
    RETURN          reduce using rule 164 (quad_input -> .)
    CLOSE_BRACKET   reduce using rule 164 (quad_input -> .)

    quad_input                     shift and go to state 336

state 293

    (165) INPUT_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET INPUT_B

    CLOSE_SQUARE_BRACKET shift and go to state 337


state 294

    (227) EV_B -> AND add_ev EV_C .

    SEMICOLON       reduce using rule 227 (EV_B -> AND add_ev EV_C .)
    CLOSE_PARENTHESIS reduce using rule 227 (EV_B -> AND add_ev EV_C .)
    CONCATENATE     reduce using rule 227 (EV_B -> AND add_ev EV_C .)


state 295

    (228) EV_B -> OR add_ev EV_C .

    SEMICOLON       reduce using rule 228 (EV_B -> OR add_ev EV_C .)
    CLOSE_PARENTHESIS reduce using rule 228 (EV_B -> OR add_ev EV_C .)
    CONCATENATE     reduce using rule 228 (EV_B -> OR add_ev EV_C .)


state 296

    (233) EXP_RELOP_A -> RELOP add_relop EXP quad_relop .

    AND             reduce using rule 233 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)
    OR              reduce using rule 233 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)
    SEMICOLON       reduce using rule 233 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)
    CLOSE_PARENTHESIS reduce using rule 233 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)
    CONCATENATE     reduce using rule 233 (EXP_RELOP_A -> RELOP add_relop EXP quad_relop .)


state 297

    (114) EXP_A -> PLUS append_operator EXP .

    RELOP           reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    AND             reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    OR              reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    SEMICOLON       reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    CONCATENATE     reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    COMMA           reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    ID              reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    IF              reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    RETURN          reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 114 (EXP_A -> PLUS append_operator EXP .)


state 298

    (115) EXP_A -> MINS append_operator EXP .

    RELOP           reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    AND             reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    OR              reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    SEMICOLON       reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    CONCATENATE     reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    COMMA           reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    ID              reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    IF              reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    RETURN          reduce using rule 115 (EXP_A -> MINS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 115 (EXP_A -> MINS append_operator EXP .)


state 299

    (120) TERMINO_A -> TIMES add_operator TERMINO .

    PLUS            reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    MINS            reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    RELOP           reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    AND             reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    OR              reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    SEMICOLON       reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    CONCATENATE     reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    COMMA           reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    ID              reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    IF              reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    RETURN          reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 120 (TERMINO_A -> TIMES add_operator TERMINO .)


state 300

    (121) TERMINO_A -> DIVIDE add_operator TERMINO .

    PLUS            reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    MINS            reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RELOP           reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    AND             reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    OR              reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    SEMICOLON       reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CONCATENATE     reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    COMMA           reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    ID              reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    IF              reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RETURN          reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 121 (TERMINO_A -> DIVIDE add_operator TERMINO .)


state 301

    (132) FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .

    TIMES           reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    DIVIDE          reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    PLUS            reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    MINS            reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    RELOP           reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    AND             reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    OR              reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    SEMICOLON       reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    CONCATENATE     reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    CLOSE_SQUARE_BRACKET reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    COMMA           reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    ID              reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    IF              reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    FOR_KEYWORD     reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    WHILE_KEYWORD   reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    PRINT_KEYWORD   reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    INPUT_KEYWORD   reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    RETURN          reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)
    CLOSE_BRACKET   reduce using rule 132 (FACTOR_A -> OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis .)


state 302

    (146) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP . CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D

    CLOSE_SQUARE_BRACKET shift and go to state 338


state 303

    (157) VARS_CTE_B -> EXP VARS_CTE_C . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 339


state 304

    (158) VARS_CTE_C -> COMMA . VARS_CTE_B
    (157) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 340
    EXP                            shift and go to state 258
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 305

    (159) VARS_CTE_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 159 (VARS_CTE_C -> EMPTY .)


state 306

    (60) MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .

    MODULE          reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    MAIN            reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)


state 307

    (62) MODULO_D -> CLOSE_PARENTHESIS . param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (67) param_table -> .

    OPEN_BRACKET    reduce using rule 67 (param_table -> .)

    param_table                    shift and go to state 341

state 308

    (63) MODULO_D -> EMPTY .

    MODULE          reduce using rule 63 (MODULO_D -> EMPTY .)
    MAIN            reduce using rule 63 (MODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 63 (MODULO_D -> EMPTY .)


state 309

    (58) MODULO_B -> COMMA MODULO_C .

    CLOSE_PARENTHESIS reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)
    MODULE          reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)
    MAIN            reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)


state 310

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 342


state 311

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ver_mat
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 343
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 312

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B .

    EQUAL           reduce using rule 85 (ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B .)


state 313

    (89) ASIGNACION_B -> EMPTY .

    EQUAL           reduce using rule 89 (ASIGNACION_B -> EMPTY .)


state 314

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 315

    (124) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 124 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 124 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 124 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 124 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 124 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 124 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 124 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 124 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)


state 316

    (184) PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 184 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 184 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 184 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 184 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 184 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 184 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 184 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 184 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)


state 317

    (187) PLOT_D -> COMMA PLOT_I .

    CLOSE_PARENTHESIS reduce using rule 187 (PLOT_D -> COMMA PLOT_I .)


state 318

    (189) PLOT_E -> PLOT_F SEMICOLON PLOT_G .

    ID              reduce using rule 189 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    IF              reduce using rule 189 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    FOR_KEYWORD     reduce using rule 189 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    WHILE_KEYWORD   reduce using rule 189 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    PRINT_KEYWORD   reduce using rule 189 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    INPUT_KEYWORD   reduce using rule 189 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    RETURN          reduce using rule 189 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    CLOSE_BRACKET   reduce using rule 189 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)


state 319

    (194) PLOT_G -> PLOT_K . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 344


state 320

    (195) PLOT_K -> CTE_STRING . PLOT_H
    (196) PLOT_H -> . COMMA PLOT_K
    (197) PLOT_H -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 346
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)

    PLOT_H                         shift and go to state 345
    EMPTY                          shift and go to state 347

state 321

    (192) PLOT_J -> COMMA PLOT_F .

    SEMICOLON       reduce using rule 192 (PLOT_J -> COMMA PLOT_F .)


state 322

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER . COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 348


state 323

    (198) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET . SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 349


state 324

    (199) PLOT_N -> CTE_STRING PLOT_O .

    CLOSE_SQUARE_BRACKET reduce using rule 199 (PLOT_N -> CTE_STRING PLOT_O .)


state 325

    (200) PLOT_O -> COMMA . PLOT_N
    (199) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 282

    PLOT_N                         shift and go to state 350

state 326

    (201) PLOT_O -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 201 (PLOT_O -> EMPTY .)


state 327

    (74) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .

    ID              reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    IF              reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    FOR_KEYWORD     reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    WHILE_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    PRINT_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    INPUT_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    RETURN          reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_BRACKET   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)


state 328

    (76) LLAMADAMODULO_D -> CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 351


state 329

    (77) LLAMADAMODULO_D -> EMPTY .

    ID              reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    IF              reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    RETURN          reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)


state 330

    (71) LLAMADAMODULO_A -> COMMA incK . LLAMADAMODULO_C
    (74) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]
  ! ID              [ reduce using rule 237 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 352
    EXP                            shift and go to state 178
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 331

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE . CONDICION_A fill_end
    (98) CONDICION_A -> . gotoElse ELSE BLOQUE
    (99) CONDICION_A -> . EMPTY
    (100) gotoElse -> .
    (237) EMPTY -> .

    ELSE            reduce using rule 100 (gotoElse -> .)
    ID              reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)

    CONDICION_A                    shift and go to state 353
    gotoElse                       shift and go to state 354
    EMPTY                          shift and go to state 355

state 332

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON . ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 137

    ASIGNACION                     shift and go to state 356

state 333

    (107) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE . goto_while
    (110) goto_while -> .

    ID              reduce using rule 110 (goto_while -> .)
    IF              reduce using rule 110 (goto_while -> .)
    FOR_KEYWORD     reduce using rule 110 (goto_while -> .)
    WHILE_KEYWORD   reduce using rule 110 (goto_while -> .)
    PRINT_KEYWORD   reduce using rule 110 (goto_while -> .)
    INPUT_KEYWORD   reduce using rule 110 (goto_while -> .)
    RETURN          reduce using rule 110 (goto_while -> .)
    CLOSE_BRACKET   reduce using rule 110 (goto_while -> .)

    goto_while                     shift and go to state 357

state 334

    (214) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con . PRINT_D
    (219) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (220) PRINT_D -> . EMPTY
    (237) EMPTY -> .

    CONCATENATE     shift and go to state 358
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)

    PRINT_D                        shift and go to state 359
    EMPTY                          shift and go to state 360

state 335

    (215) PRINT_C -> CONCATENATE CTE_STRING add_exp . PRINT_D
    (219) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (220) PRINT_D -> . EMPTY
    (237) EMPTY -> .

    CONCATENATE     shift and go to state 358
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)

    PRINT_D                        shift and go to state 361
    EMPTY                          shift and go to state 360

state 336

    (162) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .

    ID              reduce using rule 162 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    IF              reduce using rule 162 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    FOR_KEYWORD     reduce using rule 162 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    WHILE_KEYWORD   reduce using rule 162 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    PRINT_KEYWORD   reduce using rule 162 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    INPUT_KEYWORD   reduce using rule 162 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    RETURN          reduce using rule 162 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    CLOSE_BRACKET   reduce using rule 162 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)


state 337

    (165) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . INPUT_B
    (167) INPUT_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET shift and go to state 362

    INPUT_B                        shift and go to state 363

state 338

    (146) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET . pop_SB ver_arr VARS_CTE_D
    (156) pop_SB -> .

    OPEN_SQUARE_BRACKET reduce using rule 156 (pop_SB -> .)
    TIMES           reduce using rule 156 (pop_SB -> .)
    DIVIDE          reduce using rule 156 (pop_SB -> .)
    PLUS            reduce using rule 156 (pop_SB -> .)
    MINS            reduce using rule 156 (pop_SB -> .)
    RELOP           reduce using rule 156 (pop_SB -> .)
    AND             reduce using rule 156 (pop_SB -> .)
    OR              reduce using rule 156 (pop_SB -> .)
    SEMICOLON       reduce using rule 156 (pop_SB -> .)
    CLOSE_PARENTHESIS reduce using rule 156 (pop_SB -> .)
    CONCATENATE     reduce using rule 156 (pop_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 156 (pop_SB -> .)
    COMMA           reduce using rule 156 (pop_SB -> .)
    ID              reduce using rule 156 (pop_SB -> .)
    IF              reduce using rule 156 (pop_SB -> .)
    FOR_KEYWORD     reduce using rule 156 (pop_SB -> .)
    WHILE_KEYWORD   reduce using rule 156 (pop_SB -> .)
    PRINT_KEYWORD   reduce using rule 156 (pop_SB -> .)
    INPUT_KEYWORD   reduce using rule 156 (pop_SB -> .)
    RETURN          reduce using rule 156 (pop_SB -> .)
    CLOSE_BRACKET   reduce using rule 156 (pop_SB -> .)

    pop_SB                         shift and go to state 364

state 339

    (157) VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .

    TIMES           reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    MINS            reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    AND             reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    OR              reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CONCATENATE     reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    ID              reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    IF              reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 157 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)


state 340

    (158) VARS_CTE_C -> COMMA VARS_CTE_B .

    CLOSE_PARENTHESIS reduce using rule 158 (VARS_CTE_C -> COMMA VARS_CTE_B .)


state 341

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table . OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 365


state 342

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 16 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 16 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .)


state 343

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ver_mat

    CLOSE_SQUARE_BRACKET shift and go to state 366


state 344

    (194) PLOT_G -> PLOT_K CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 367


state 345

    (195) PLOT_K -> CTE_STRING PLOT_H .

    CLOSE_PARENTHESIS reduce using rule 195 (PLOT_K -> CTE_STRING PLOT_H .)


state 346

    (196) PLOT_H -> COMMA . PLOT_K
    (195) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 320

    PLOT_K                         shift and go to state 368

state 347

    (197) PLOT_H -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 197 (PLOT_H -> EMPTY .)


state 348

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA . CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 369


state 349

    (198) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON . OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    OPEN_SQUARE_BRACKET shift and go to state 370


state 350

    (200) PLOT_O -> COMMA PLOT_N .

    CLOSE_SQUARE_BRACKET reduce using rule 200 (PLOT_O -> COMMA PLOT_N .)


state 351

    (76) LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_PARENTHESIS reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)


state 352

    (71) LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .

    CLOSE_PARENTHESIS reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    ID              reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    IF              reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    FOR_KEYWORD     reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    WHILE_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    PRINT_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    INPUT_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    RETURN          reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    CLOSE_BRACKET   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)


state 353

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A . fill_end
    (96) fill_end -> .

    ID              reduce using rule 96 (fill_end -> .)
    IF              reduce using rule 96 (fill_end -> .)
    FOR_KEYWORD     reduce using rule 96 (fill_end -> .)
    WHILE_KEYWORD   reduce using rule 96 (fill_end -> .)
    PRINT_KEYWORD   reduce using rule 96 (fill_end -> .)
    INPUT_KEYWORD   reduce using rule 96 (fill_end -> .)
    RETURN          reduce using rule 96 (fill_end -> .)
    CLOSE_BRACKET   reduce using rule 96 (fill_end -> .)

    fill_end                       shift and go to state 371

state 354

    (98) CONDICION_A -> gotoElse . ELSE BLOQUE

    ELSE            shift and go to state 372


state 355

    (99) CONDICION_A -> EMPTY .

    ID              reduce using rule 99 (CONDICION_A -> EMPTY .)
    IF              reduce using rule 99 (CONDICION_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 99 (CONDICION_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 99 (CONDICION_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 99 (CONDICION_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 99 (CONDICION_A -> EMPTY .)
    RETURN          reduce using rule 99 (CONDICION_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 99 (CONDICION_A -> EMPTY .)


state 356

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION . get_increment CLOSE_PARENTHESIS BLOQUE repeat_for
    (102) get_increment -> .

    CLOSE_PARENTHESIS reduce using rule 102 (get_increment -> .)

    get_increment                  shift and go to state 373

state 357

    (107) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .

    ID              reduce using rule 107 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    IF              reduce using rule 107 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    FOR_KEYWORD     reduce using rule 107 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    WHILE_KEYWORD   reduce using rule 107 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    PRINT_KEYWORD   reduce using rule 107 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    INPUT_KEYWORD   reduce using rule 107 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    RETURN          reduce using rule 107 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)
    CLOSE_BRACKET   reduce using rule 107 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS while_jump EXPRESIONESVARIAS while_gotof CLOSE_PARENTHESIS BLOQUE goto_while .)


state 358

    (219) PRINT_D -> CONCATENATE . add_sign PRINT_B
    (221) add_sign -> .

    CTE_STRING      reduce using rule 221 (add_sign -> .)
    NOT             reduce using rule 221 (add_sign -> .)
    OPEN_PARENTHESIS reduce using rule 221 (add_sign -> .)
    PLUS            reduce using rule 221 (add_sign -> .)
    MINS            reduce using rule 221 (add_sign -> .)
    CTE_INTEGER     reduce using rule 221 (add_sign -> .)
    CTE_FLOAT       reduce using rule 221 (add_sign -> .)
    TRUE            reduce using rule 221 (add_sign -> .)
    FALSE           reduce using rule 221 (add_sign -> .)
    ID              reduce using rule 221 (add_sign -> .)
    CONCATENATE     reduce using rule 221 (add_sign -> .)
    AND             reduce using rule 221 (add_sign -> .)
    OR              reduce using rule 221 (add_sign -> .)
    RELOP           reduce using rule 221 (add_sign -> .)
    TIMES           reduce using rule 221 (add_sign -> .)
    DIVIDE          reduce using rule 221 (add_sign -> .)
    CLOSE_PARENTHESIS reduce using rule 221 (add_sign -> .)

    add_sign                       shift and go to state 374

state 359

    (214) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 214 (PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .)


state 360

    (220) PRINT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 220 (PRINT_D -> EMPTY .)


state 361

    (215) PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 215 (PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .)


state 362

    (167) INPUT_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 375
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 363

    (165) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .

    SEMICOLON       reduce using rule 165 (INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .)


state 364

    (146) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB . ver_arr VARS_CTE_D
    (87) ver_arr -> .

    OPEN_SQUARE_BRACKET reduce using rule 87 (ver_arr -> .)
    TIMES           reduce using rule 87 (ver_arr -> .)
    DIVIDE          reduce using rule 87 (ver_arr -> .)
    PLUS            reduce using rule 87 (ver_arr -> .)
    MINS            reduce using rule 87 (ver_arr -> .)
    RELOP           reduce using rule 87 (ver_arr -> .)
    AND             reduce using rule 87 (ver_arr -> .)
    OR              reduce using rule 87 (ver_arr -> .)
    SEMICOLON       reduce using rule 87 (ver_arr -> .)
    CLOSE_PARENTHESIS reduce using rule 87 (ver_arr -> .)
    CONCATENATE     reduce using rule 87 (ver_arr -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 87 (ver_arr -> .)
    COMMA           reduce using rule 87 (ver_arr -> .)
    ID              reduce using rule 87 (ver_arr -> .)
    IF              reduce using rule 87 (ver_arr -> .)
    FOR_KEYWORD     reduce using rule 87 (ver_arr -> .)
    WHILE_KEYWORD   reduce using rule 87 (ver_arr -> .)
    PRINT_KEYWORD   reduce using rule 87 (ver_arr -> .)
    INPUT_KEYWORD   reduce using rule 87 (ver_arr -> .)
    RETURN          reduce using rule 87 (ver_arr -> .)
    CLOSE_BRACKET   reduce using rule 87 (ver_arr -> .)

    ver_arr                        shift and go to state 376

state 365

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET . OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (64) OPVARS -> . VARS
    (65) OPVARS -> . EMPTY
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A
    (237) EMPTY -> .

    VARS_KEYWORD    shift and go to state 7
    OPEN_BRACKET    reduce using rule 237 (EMPTY -> .)

    OPVARS                         shift and go to state 377
    VARS                           shift and go to state 378
    EMPTY                          shift and go to state 379

state 366

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ver_mat
    (90) ver_mat -> .

    EQUAL           reduce using rule 90 (ver_mat -> .)

    ver_mat                        shift and go to state 380

state 367

    (194) PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 194 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 194 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 194 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 194 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 194 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 194 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 194 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 194 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)


state 368

    (196) PLOT_H -> COMMA PLOT_K .

    CLOSE_PARENTHESIS reduce using rule 196 (PLOT_H -> COMMA PLOT_K .)


state 369

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER . SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 381


state 370

    (198) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET . PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (202) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 383

    PLOT_P                         shift and go to state 382

state 371

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .

    ID              reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    IF              reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    FOR_KEYWORD     reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    WHILE_KEYWORD   reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    PRINT_KEYWORD   reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    INPUT_KEYWORD   reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    RETURN          reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)
    CLOSE_BRACKET   reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS quad_not CLOSE_PARENTHESIS if_gotof BLOQUE CONDICION_A fill_end .)


state 372

    (98) CONDICION_A -> gotoElse ELSE . BLOQUE
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 384

state 373

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment . CLOSE_PARENTHESIS BLOQUE repeat_for

    CLOSE_PARENTHESIS shift and go to state 385


state 374

    (219) PRINT_D -> CONCATENATE add_sign . PRINT_B
    (207) PRINT_B -> . CTE_STRING add_string PRINT_C
    (208) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (222) EXPRESIONESVARIAS -> . NOT EV_C
    (223) EXPRESIONESVARIAS -> . EV_C
    (225) EV_C -> . EXP_RELOP quad_andor EV_B
    (231) EXP_RELOP -> . EXP EXP_RELOP_A
    (232) EXP_RELOP -> . EMPTY
    (112) EXP -> . TERMINO pop_exp EXP_A
    (237) EMPTY -> .
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 141
    NOT             shift and go to state 92
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    PRINT_B                        shift and go to state 386
    EXPRESIONESVARIAS              shift and go to state 142
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 375

    (167) INPUT_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 387


state 376

    (146) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr . VARS_CTE_D
    (160) VARS_CTE_D -> . OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat
    (161) VARS_CTE_D -> . EMPTY
    (237) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 388
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    PLUS            reduce using rule 237 (EMPTY -> .)
    MINS            reduce using rule 237 (EMPTY -> .)
    RELOP           reduce using rule 237 (EMPTY -> .)
    AND             reduce using rule 237 (EMPTY -> .)
    OR              reduce using rule 237 (EMPTY -> .)
    SEMICOLON       reduce using rule 237 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 237 (EMPTY -> .)
    CONCATENATE     reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    COMMA           reduce using rule 237 (EMPTY -> .)
    ID              reduce using rule 237 (EMPTY -> .)
    IF              reduce using rule 237 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 237 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 237 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 237 (EMPTY -> .)
    RETURN          reduce using rule 237 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 237 (EMPTY -> .)

    VARS_CTE_D                     shift and go to state 389
    EMPTY                          shift and go to state 390

state 377

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS . add_count add_start BLOQUE CLOSE_BRACKET
    (3) add_count -> .

    OPEN_BRACKET    reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 391

state 378

    (64) OPVARS -> VARS .

    OPEN_BRACKET    reduce using rule 64 (OPVARS -> VARS .)


state 379

    (65) OPVARS -> EMPTY .

    OPEN_BRACKET    reduce using rule 65 (OPVARS -> EMPTY .)


state 380

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .

    EQUAL           reduce using rule 88 (ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)


state 381

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON . CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 392


state 382

    (198) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 393


state 383

    (202) PLOT_P -> CTE_STRING . PLOT_Q
    (203) PLOT_Q -> . COMMA PLOT_P
    (204) PLOT_Q -> . EMPTY
    (237) EMPTY -> .

    COMMA           shift and go to state 395
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)

    PLOT_Q                         shift and go to state 394
    EMPTY                          shift and go to state 396

state 384

    (98) CONDICION_A -> gotoElse ELSE BLOQUE .

    ID              reduce using rule 98 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    IF              reduce using rule 98 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    FOR_KEYWORD     reduce using rule 98 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    WHILE_KEYWORD   reduce using rule 98 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    PRINT_KEYWORD   reduce using rule 98 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    INPUT_KEYWORD   reduce using rule 98 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    RETURN          reduce using rule 98 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    CLOSE_BRACKET   reduce using rule 98 (CONDICION_A -> gotoElse ELSE BLOQUE .)


state 385

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS . BLOQUE repeat_for
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 397

state 386

    (219) PRINT_D -> CONCATENATE add_sign PRINT_B .

    CLOSE_PARENTHESIS reduce using rule 219 (PRINT_D -> CONCATENATE add_sign PRINT_B .)


state 387

    (167) INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 167 (INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 388

    (160) VARS_CTE_D -> OPEN_SQUARE_BRACKET . add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat
    (155) add_SB -> .

    OPEN_PARENTHESIS reduce using rule 155 (add_SB -> .)
    PLUS            reduce using rule 155 (add_SB -> .)
    MINS            reduce using rule 155 (add_SB -> .)
    CTE_INTEGER     reduce using rule 155 (add_SB -> .)
    CTE_FLOAT       reduce using rule 155 (add_SB -> .)
    TRUE            reduce using rule 155 (add_SB -> .)
    FALSE           reduce using rule 155 (add_SB -> .)
    ID              reduce using rule 155 (add_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 155 (add_SB -> .)
    TIMES           reduce using rule 155 (add_SB -> .)
    DIVIDE          reduce using rule 155 (add_SB -> .)

    add_SB                         shift and go to state 398

state 389

    (146) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .

    TIMES           reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    DIVIDE          reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    PLUS            reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    MINS            reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    RELOP           reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    AND             reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    OR              reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    SEMICOLON       reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_PARENTHESIS reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CONCATENATE     reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_SQUARE_BRACKET reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    COMMA           reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    ID              reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    IF              reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    FOR_KEYWORD     reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    WHILE_KEYWORD   reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    PRINT_KEYWORD   reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    INPUT_KEYWORD   reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    RETURN          reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_BRACKET   reduce using rule 146 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)


state 390

    (161) VARS_CTE_D -> EMPTY .

    TIMES           reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    DIVIDE          reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    PLUS            reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    MINS            reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    RELOP           reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    AND             reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    OR              reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    SEMICOLON       reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    CONCATENATE     reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    COMMA           reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    ID              reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    IF              reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    RETURN          reduce using rule 161 (VARS_CTE_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 161 (VARS_CTE_D -> EMPTY .)


state 391

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count . add_start BLOQUE CLOSE_BRACKET
    (66) add_start -> .

    OPEN_BRACKET    reduce using rule 66 (add_start -> .)

    add_start                      shift and go to state 399

state 392

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING . COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 400


state 393

    (198) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 401


state 394

    (202) PLOT_P -> CTE_STRING PLOT_Q .

    CLOSE_SQUARE_BRACKET reduce using rule 202 (PLOT_P -> CTE_STRING PLOT_Q .)


state 395

    (203) PLOT_Q -> COMMA . PLOT_P
    (202) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 383

    PLOT_P                         shift and go to state 402

state 396

    (204) PLOT_Q -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 204 (PLOT_Q -> EMPTY .)


state 397

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE . repeat_for
    (105) repeat_for -> .

    ID              reduce using rule 105 (repeat_for -> .)
    IF              reduce using rule 105 (repeat_for -> .)
    FOR_KEYWORD     reduce using rule 105 (repeat_for -> .)
    WHILE_KEYWORD   reduce using rule 105 (repeat_for -> .)
    PRINT_KEYWORD   reduce using rule 105 (repeat_for -> .)
    INPUT_KEYWORD   reduce using rule 105 (repeat_for -> .)
    RETURN          reduce using rule 105 (repeat_for -> .)
    CLOSE_BRACKET   reduce using rule 105 (repeat_for -> .)

    repeat_for                     shift and go to state 403

state 398

    (160) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB . EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat
    (112) EXP -> . TERMINO pop_exp EXP_A
    (118) TERMINO -> . FACTOR pop_term TERMINO_A
    (131) FACTOR -> . FACTOR_A
    (132) FACTOR_A -> . OPEN_PARENTHESIS add_parenthesis FACTOR_B CLOSE_PARENTHESIS pop_parenthesis
    (133) FACTOR_A -> . PLUS FACTOR_C
    (134) FACTOR_A -> . MINS FACTOR_C
    (135) FACTOR_A -> . FACTOR_C
    (136) FACTOR_A -> . EMPTY
    (140) FACTOR_C -> . VARS_CTE
    (237) EMPTY -> .
    (141) VARS_CTE -> . CTE_INTEGER append_cte_int
    (142) VARS_CTE -> . CTE_FLOAT append_cte_float
    (143) VARS_CTE -> . TRUE append_bool
    (144) VARS_CTE -> . FALSE append_bool
    (145) VARS_CTE -> . ID append_id
    (146) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 237 (EMPTY -> .)
    DIVIDE          reduce using rule 237 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 237 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 237 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 237 (EMPTY -> .) ]

    EXP                            shift and go to state 404
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 166
    VARS_CTE                       shift and go to state 104

state 399

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start . BLOQUE CLOSE_BRACKET
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 405

state 400

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 406


state 401

    (198) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 407


state 402

    (203) PLOT_Q -> COMMA PLOT_P .

    CLOSE_SQUARE_BRACKET reduce using rule 203 (PLOT_Q -> COMMA PLOT_P .)


state 403

    (101) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .

    ID              reduce using rule 101 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    IF              reduce using rule 101 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    FOR_KEYWORD     reduce using rule 101 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    WHILE_KEYWORD   reduce using rule 101 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    PRINT_KEYWORD   reduce using rule 101 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    INPUT_KEYWORD   reduce using rule 101 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    RETURN          reduce using rule 101 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)
    CLOSE_BRACKET   reduce using rule 101 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION for_jump EXPRESIONESVARIAS for_gotof SEMICOLON ASIGNACION get_increment CLOSE_PARENTHESIS BLOQUE repeat_for .)


state 404

    (160) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP . CLOSE_SQUARE_BRACKET pop_SB ver_mat

    CLOSE_SQUARE_BRACKET shift and go to state 408


state 405

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 409


state 406

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 410


state 407

    (198) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 198 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 198 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 198 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 198 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 198 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 198 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 198 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 198 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)


state 408

    (160) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET . pop_SB ver_mat
    (156) pop_SB -> .

    TIMES           reduce using rule 156 (pop_SB -> .)
    DIVIDE          reduce using rule 156 (pop_SB -> .)
    PLUS            reduce using rule 156 (pop_SB -> .)
    MINS            reduce using rule 156 (pop_SB -> .)
    RELOP           reduce using rule 156 (pop_SB -> .)
    AND             reduce using rule 156 (pop_SB -> .)
    OR              reduce using rule 156 (pop_SB -> .)
    SEMICOLON       reduce using rule 156 (pop_SB -> .)
    CLOSE_PARENTHESIS reduce using rule 156 (pop_SB -> .)
    CONCATENATE     reduce using rule 156 (pop_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 156 (pop_SB -> .)
    COMMA           reduce using rule 156 (pop_SB -> .)
    ID              reduce using rule 156 (pop_SB -> .)
    IF              reduce using rule 156 (pop_SB -> .)
    FOR_KEYWORD     reduce using rule 156 (pop_SB -> .)
    WHILE_KEYWORD   reduce using rule 156 (pop_SB -> .)
    PRINT_KEYWORD   reduce using rule 156 (pop_SB -> .)
    INPUT_KEYWORD   reduce using rule 156 (pop_SB -> .)
    RETURN          reduce using rule 156 (pop_SB -> .)
    CLOSE_BRACKET   reduce using rule 156 (pop_SB -> .)

    pop_SB                         shift and go to state 411

state 409

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .

    MODULE          reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)
    MAIN            reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)


state 410

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 412


state 411

    (160) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB . ver_mat
    (90) ver_mat -> .

    TIMES           reduce using rule 90 (ver_mat -> .)
    DIVIDE          reduce using rule 90 (ver_mat -> .)
    PLUS            reduce using rule 90 (ver_mat -> .)
    MINS            reduce using rule 90 (ver_mat -> .)
    RELOP           reduce using rule 90 (ver_mat -> .)
    AND             reduce using rule 90 (ver_mat -> .)
    OR              reduce using rule 90 (ver_mat -> .)
    SEMICOLON       reduce using rule 90 (ver_mat -> .)
    CLOSE_PARENTHESIS reduce using rule 90 (ver_mat -> .)
    CONCATENATE     reduce using rule 90 (ver_mat -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 90 (ver_mat -> .)
    COMMA           reduce using rule 90 (ver_mat -> .)
    ID              reduce using rule 90 (ver_mat -> .)
    IF              reduce using rule 90 (ver_mat -> .)
    FOR_KEYWORD     reduce using rule 90 (ver_mat -> .)
    WHILE_KEYWORD   reduce using rule 90 (ver_mat -> .)
    PRINT_KEYWORD   reduce using rule 90 (ver_mat -> .)
    INPUT_KEYWORD   reduce using rule 90 (ver_mat -> .)
    RETURN          reduce using rule 90 (ver_mat -> .)
    CLOSE_BRACKET   reduce using rule 90 (ver_mat -> .)

    ver_mat                        shift and go to state 413

state 412

    (182) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 182 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 182 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 182 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 182 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 182 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 182 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 182 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 182 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 413

    (160) VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .

    TIMES           reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    DIVIDE          reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    PLUS            reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    MINS            reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    RELOP           reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    AND             reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    OR              reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    SEMICOLON       reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    CLOSE_PARENTHESIS reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    CONCATENATE     reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    CLOSE_SQUARE_BRACKET reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    COMMA           reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    ID              reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    IF              reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    FOR_KEYWORD     reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    WHILE_KEYWORD   reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    PRINT_KEYWORD   reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    INPUT_KEYWORD   reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    RETURN          reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)
    CLOSE_BRACKET   reduce using rule 160 (VARS_CTE_D -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_mat .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINS in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINS in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINS in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINS in state 134 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINS in state 138 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 152 resolved as shift
WARNING: shift/reduce conflict for MINS in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 180 resolved as shift
WARNING: shift/reduce conflict for MINS in state 180 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 191 resolved as shift
WARNING: shift/reduce conflict for MINS in state 191 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 203 resolved as shift
WARNING: shift/reduce conflict for MINS in state 203 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 210 resolved as shift
WARNING: shift/reduce conflict for MINS in state 210 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 242 resolved as shift
WARNING: shift/reduce conflict for MINS in state 242 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 246 resolved as shift
WARNING: shift/reduce conflict for MINS in state 246 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 248 resolved as shift
WARNING: shift/reduce conflict for MINS in state 248 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 249 resolved as shift
WARNING: shift/reduce conflict for MINS in state 249 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 251 resolved as shift
WARNING: shift/reduce conflict for MINS in state 251 resolved as shift
WARNING: shift/reduce conflict for ID in state 251 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 252 resolved as shift
WARNING: shift/reduce conflict for MINS in state 252 resolved as shift
WARNING: shift/reduce conflict for ID in state 252 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 253 resolved as shift
WARNING: shift/reduce conflict for MINS in state 253 resolved as shift
WARNING: shift/reduce conflict for ID in state 253 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 254 resolved as shift
WARNING: shift/reduce conflict for MINS in state 254 resolved as shift
WARNING: shift/reduce conflict for ID in state 254 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 256 resolved as shift
WARNING: shift/reduce conflict for MINS in state 256 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 260 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 283 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 304 resolved as shift
WARNING: shift/reduce conflict for MINS in state 304 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 311 resolved as shift
WARNING: shift/reduce conflict for MINS in state 311 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 330 resolved as shift
WARNING: shift/reduce conflict for MINS in state 330 resolved as shift
WARNING: shift/reduce conflict for ID in state 330 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 362 resolved as shift
WARNING: shift/reduce conflict for MINS in state 362 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 374 resolved as shift
WARNING: shift/reduce conflict for MINS in state 374 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 398 resolved as shift
WARNING: shift/reduce conflict for MINS in state 398 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (FACTOR_A -> EMPTY)
WARNING: rejected rule (EXP_RELOP -> EMPTY) in state 96
WARNING: Rule (EXP_RELOP -> EMPTY) is never reduced
