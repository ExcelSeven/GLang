Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN
    CREATE
    CTE_CHAR
    E
    PI
    QUOTE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
Rule 2     end_quad -> <empty>
Rule 3     add_count -> <empty>
Rule 4     addfunction -> <empty>
Rule 5     quad_main -> <empty>
Rule 6     PROGRAMA_A -> MODULO PROGRAMA_A
Rule 7     PROGRAMA_A -> EMPTY
Rule 8     VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A
Rule 9     VARS_A -> TIPO_P VARS_B
Rule 10    VARS_A -> TIPO_S VARS_B
Rule 11    VARS_B -> ID add_variable VARS_E VARS_C
Rule 12    add_variable -> <empty>
Rule 13    VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F
Rule 14    VARS_E -> EMPTY
Rule 15    add_s1 -> <empty>
Rule 16    VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET
Rule 17    VARS_F -> EMPTY
Rule 18    add_s2 -> <empty>
Rule 19    VARS_C -> SEMICOLON VARS_D
Rule 20    VARS_C -> COMMA VARS_B
Rule 21    VARS_D -> CLOSE_BRACKET
Rule 22    VARS_D -> VARS_A
Rule 23    BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET
Rule 24    ESTATUTO_A -> ESTATUTO ESTATUTO_A
Rule 25    ESTATUTO_A -> EMPTY
Rule 26    ESTATUTO -> ASIGNACION
Rule 27    ESTATUTO -> CONDICION
Rule 28    ESTATUTO -> NOMBRAR
Rule 29    ESTATUTO -> FOR
Rule 30    ESTATUTO -> WHILE
Rule 31    ESTATUTO -> PRINT
Rule 32    ESTATUTO -> PLOT
Rule 33    ESTATUTO -> LLAMADAMODULO
Rule 34    ESTATUTO -> INPUT
Rule 35    ESTATUTO -> COLOR
Rule 36    ESTATUTO -> RETURNOP
Rule 37    TIPO_P -> INT
Rule 38    TIPO_P -> FLOAT
Rule 39    TIPO_P -> BOOL
Rule 40    TIPO_P -> CHAR
Rule 41    TIPO_S -> TYPE_GRAPH
Rule 42    TIPO_S -> TYPE_PIECHART
Rule 43    TIPO_S -> TYPE_BARCHART
Rule 44    TIPO_S -> TYPE_HORBARCHART
Rule 45    TIPO_S -> TYPE_DONUTGRAPH
Rule 46    TIPO_S -> TYPE_NETWORK
Rule 47    TIPO_S -> TYPE_VENN
Rule 48    TIPO_S -> TYPE_RADARCHART
Rule 49    MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
Rule 50    RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON
Rule 51    return_quad -> <empty>
Rule 52    release_vars -> <empty>
Rule 53    endproc -> <empty>
Rule 54    change_scope -> <empty>
Rule 55    add_functionr -> <empty>
Rule 56    MODULO_A -> VOID
Rule 57    MODULO_A -> TIPO_P
Rule 58    MODULO_B -> COMMA MODULO_C
Rule 59    MODULO_B -> EMPTY
Rule 60    MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D
Rule 61    add_variable_m -> <empty>
Rule 62    MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
Rule 63    MODULO_D -> EMPTY
Rule 64    OPVARS -> VARS
Rule 65    OPVARS -> EMPTY
Rule 66    add_start -> <empty>
Rule 67    param_table -> <empty>
Rule 68    LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
Rule 69    gosub -> <empty>
Rule 70    era -> <empty>
Rule 71    LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C
Rule 72    LLAMADAMODULO_A -> EMPTY
Rule 73    incK -> <empty>
Rule 74    LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
Rule 75    check_types -> <empty>
Rule 76    LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON
Rule 77    LLAMADAMODULO_D -> EMPTY
Rule 78    NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 79    NOMBRAR_A -> NAME
Rule 80    NOMBRAR_A -> NAMEX
Rule 81    NOMBRAR_A -> NAMEY
Rule 82    ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
Rule 83    quad -> <empty>
Rule 84    addStackO -> <empty>
Rule 85    ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
Rule 86    ASIGNACION_A -> EMPTY
Rule 87    ver_arr -> <empty>
Rule 88    ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat
Rule 89    ASIGNACION_B -> EMPTY
Rule 90    ver_mat -> <empty>
Rule 91    ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS
Rule 92    ASIGNACION_C -> EQUAL CTE_STRING
Rule 93    add_equal -> <empty>
Rule 94    CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
Rule 95    fill_end -> <empty>
Rule 96    check_bool -> <empty>
Rule 97    CONDICION_A -> gotoElse ELSE BLOQUE
Rule 98    CONDICION_A -> EMPTY
Rule 99    gotoElse -> <empty>
Rule 100   FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
Rule 101   repeat_for -> <empty>
Rule 102   bool_for -> <empty>
Rule 103   WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
Rule 104   goto_while -> <empty>
Rule 105   bool_while -> <empty>
Rule 106   EXP -> TERMINO pop_exp EXP_A
Rule 107   pop_exp -> <empty>
Rule 108   EXP_A -> PLUS append_operator EXP
Rule 109   EXP_A -> MINS append_operator EXP
Rule 110   EXP_A -> EMPTY
Rule 111   append_operator -> <empty>
Rule 112   TERMINO -> FACTOR pop_term TERMINO_A
Rule 113   pop_term -> <empty>
Rule 114   TERMINO_A -> TIMES add_operator TERMINO
Rule 115   TERMINO_A -> DIVIDE add_operator TERMINO
Rule 116   TERMINO_A -> EMPTY
Rule 117   add_operator -> <empty>
Rule 118   COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
Rule 119   COLOR_A -> COLOR_RED
Rule 120   COLOR_A -> COLOR_BLACK
Rule 121   COLOR_A -> COLOR_BLUE
Rule 122   COLOR_A -> COLOR_PURPLE
Rule 123   COLOR_A -> COLOR_GREEN
Rule 124   COLOR_A -> COLOR_ORANGE
Rule 125   FACTOR -> FACTOR_A
Rule 126   FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
Rule 127   FACTOR_A -> PLUS FACTOR_C
Rule 128   FACTOR_A -> MINS FACTOR_C
Rule 129   FACTOR_A -> FACTOR_C
Rule 130   FACTOR_A -> EMPTY
Rule 131   FACTOR_B -> EXPRESIONESVARIAS FACTOR_C
Rule 132   FACTOR_C -> VARS_CTE
Rule 133   VARS_CTE -> CTE_INTEGER append_cte_int
Rule 134   VARS_CTE -> CTE_FLOAT append_cte_float
Rule 135   VARS_CTE -> TRUE append_bool
Rule 136   VARS_CTE -> FALSE append_bool
Rule 137   VARS_CTE -> ID append_id
Rule 138   VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
Rule 139   VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B
Rule 140   append_id -> <empty>
Rule 141   append_cte_int -> <empty>
Rule 142   append_cte_float -> <empty>
Rule 143   append_bool -> <empty>
Rule 144   VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B
Rule 145   VARS_CTE_A -> OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
Rule 146   VARS_CTE_A -> EMPTY
Rule 147   add_SB -> <empty>
Rule 148   pop_SB -> <empty>
Rule 149   VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS
Rule 150   VARS_CTE_C -> COMMA VARS_CTE_B
Rule 151   VARS_CTE_C -> EMPTY
Rule 152   VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat
Rule 153   VARS_CTE_D -> EMPTY
Rule 154   INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
Rule 155   add_inputid -> <empty>
Rule 156   quad_input -> <empty>
Rule 157   INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
Rule 158   INPUT_A -> EMPTY
Rule 159   INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 160   PLOT -> PGraph
Rule 161   PLOT -> PPie
Rule 162   PLOT -> PGBarras
Rule 163   PLOT -> PGBarrasHor
Rule 164   PLOT -> PDona
Rule 165   PLOT -> PRadar
Rule 166   PLOT -> PVenn
Rule 167   PLOT -> PLOT_B
Rule 168   PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
Rule 169   PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
Rule 170   PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
Rule 171   PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
Rule 172   PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E
Rule 173   PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E
Rule 174   PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 175   PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
Rule 176   PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON
Rule 177   PLOT_I -> CTE_INTEGER PLOT_D
Rule 178   PLOT_I -> CTE_FLOAT PLOT_D
Rule 179   PLOT_D -> COMMA PLOT_I
Rule 180   PLOT_D -> EMPTY
Rule 181   PLOT_E -> PLOT_F SEMICOLON PLOT_G
Rule 182   PLOT_F -> CTE_INTEGER PLOT_J
Rule 183   PLOT_F -> CTE_FLOAT PLOT_J
Rule 184   PLOT_J -> COMMA PLOT_F
Rule 185   PLOT_J -> EMPTY
Rule 186   PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON
Rule 187   PLOT_K -> CTE_STRING PLOT_H
Rule 188   PLOT_H -> COMMA PLOT_K
Rule 189   PLOT_H -> EMPTY
Rule 190   PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
Rule 191   PLOT_N -> CTE_STRING PLOT_O
Rule 192   PLOT_O -> COMMA PLOT_N
Rule 193   PLOT_O -> EMPTY
Rule 194   PLOT_P -> CTE_STRING PLOT_Q
Rule 195   PLOT_Q -> COMMA PLOT_P
Rule 196   PLOT_Q -> EMPTY
Rule 197   PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
Rule 198   PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
Rule 199   PRINT_B -> CTE_STRING add_string PRINT_C
Rule 200   PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C
Rule 201   add_temp -> <empty>
Rule 202   add_string -> <empty>
Rule 203   print_quad -> <empty>
Rule 204   print_string -> <empty>
Rule 205   print_id -> <empty>
Rule 206   PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
Rule 207   PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D
Rule 208   PRINT_C -> EMPTY
Rule 209   add_exp -> <empty>
Rule 210   add_con -> <empty>
Rule 211   PRINT_D -> CONCATENATE add_sign PRINT_B
Rule 212   PRINT_D -> EMPTY
Rule 213   add_sign -> <empty>
Rule 214   EXPRESIONESVARIAS -> NOT EV_C
Rule 215   EXPRESIONESVARIAS -> EV_C
Rule 216   EV_C -> EXP_RELOP EV_B
Rule 217   EV_B -> AND add_ev EV_C
Rule 218   EV_B -> OR add_ev EV_C
Rule 219   EV_B -> EMPTY
Rule 220   add_ev -> <empty>
Rule 221   EXP_RELOP -> EXP EXP_RELOP_A
Rule 222   EXP_RELOP -> EMPTY
Rule 223   EXP_RELOP_A -> RELOP add_relop EXP
Rule 224   EXP_RELOP_A -> EMPTY
Rule 225   add_relop -> <empty>
Rule 226   EMPTY -> <empty>

Terminals, with rules where they appear

AND                  : 217
BOOL                 : 39
BOOLEAN              : 
CHAR                 : 40
CLOSE_BRACKET        : 1 21 23 62
CLOSE_PARENTHESIS    : 62 76 78 94 100 103 118 126 149 174 176 186 190 198
CLOSE_SQUARE_BRACKET : 13 16 85 88 138 145 152 157 159 190 190
COLOR_BLACK          : 120
COLOR_BLUE           : 121
COLOR_GREEN          : 123
COLOR_KEYWORD        : 118
COLOR_ORANGE         : 124
COLOR_PURPLE         : 122
COLOR_RED            : 119
COMMA                : 20 58 71 150 174 174 174 179 184 188 192 195
CONCATENATE          : 206 207 211
CREATE               : 
CREATED              : 172
CREATEG              : 168
CREATEGB             : 170
CREATEGBH            : 171
CREATEN              : 175
CREATEPC             : 169
CREATER              : 173
CREATEV              : 174
CTE_CHAR             : 
CTE_FLOAT            : 134 178 183
CTE_INTEGER          : 13 16 133 174 174 174 177 182
CTE_STRING           : 78 92 174 174 187 191 194 199 207
DIVIDE               : 115
E                    : 
ELSE                 : 97
EQUAL                : 91 92
FALSE                : 136
FLOAT                : 38
FOR_KEYWORD          : 100
ID                   : 1 11 49 60 68 78 82 118 137 138 139 154 168 169 170 171 172 173 174 175
IF                   : 94
INPUTSYMBOL          : 154
INPUT_KEYWORD        : 154
INT                  : 37
MAIN                 : 1
MINS                 : 109 128
MODULE               : 49
NAME                 : 79
NAMEX                : 80
NAMEY                : 81
NOT                  : 214
OPEN_BRACKET         : 1 8 23 62
OPEN_PARENTHESIS     : 49 68 78 94 100 103 118 126 139 144 168 169 170 171 172 173 174 175 197
OPEN_SQUARE_BRACKET  : 13 16 85 88 138 145 152 157 159 175 190
OR                   : 218
PI                   : 
PLUS                 : 108 127
POINT                : 78 118 168 169 170 171 172 173 174 175
PRINT_KEYWORD        : 197
PROGRAM              : 1
QUOTE                : 
RELOP                : 223
RETURN               : 50
SEMICOLON            : 19 50 76 78 82 100 118 154 174 174 176 181 186 190 190 198
TIMES                : 114
TRUE                 : 135
TYPE_BARCHART        : 43
TYPE_DONUTGRAPH      : 45
TYPE_GRAPH           : 41
TYPE_HORBARCHART     : 44
TYPE_NETWORK         : 46
TYPE_PIECHART        : 42
TYPE_RADARCHART      : 48
TYPE_VENN            : 47
VARS_KEYWORD         : 8
VOID                 : 56
WHILE_KEYWORD        : 103
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 26 100 100
ASIGNACION_A         : 82
ASIGNACION_B         : 85
ASIGNACION_C         : 82
BLOQUE               : 1 62 94 97 100 103
COLOR                : 35
COLOR_A              : 118
CONDICION            : 27
CONDICION_A          : 94
EMPTY                : 7 14 17 25 59 63 65 72 77 86 89 98 110 116 130 146 151 153 158 180 185 189 193 196 208 212 219 222 224
ESTATUTO             : 24
ESTATUTO_A           : 23 24
EV_B                 : 216
EV_C                 : 214 215 217 218
EXP                  : 74 85 88 108 109 138 145 149 152 157 159 221 223
EXPRESIONESVARIAS    : 50 91 94 100 103 131 200 206
EXP_A                : 106
EXP_RELOP            : 216
EXP_RELOP_A          : 221
FACTOR               : 112
FACTOR_A             : 125
FACTOR_B             : 126
FACTOR_C             : 127 128 129 131
FOR                  : 29
INPUT                : 34
INPUT_A              : 154
INPUT_B              : 157
LLAMADAMODULO        : 33
LLAMADAMODULO_A      : 74
LLAMADAMODULO_C      : 68 71
LLAMADAMODULO_D      : 74
MODULO               : 6
MODULO_A             : 49
MODULO_B             : 60
MODULO_C             : 49 58
MODULO_D             : 60
NOMBRAR              : 28
NOMBRAR_A            : 78
OPVARS               : 62
PDona                : 164
PGBarras             : 162
PGBarrasHor          : 163
PGraph               : 160
PLOT                 : 32
PLOT_B               : 167
PLOT_C               : 168
PLOT_D               : 177 178
PLOT_E               : 169 170 171 172 173
PLOT_F               : 181 184
PLOT_G               : 181
PLOT_H               : 187
PLOT_I               : 176 179
PLOT_J               : 182 183
PLOT_K               : 186 188
PLOT_M               : 175
PLOT_N               : 190 192
PLOT_O               : 191
PLOT_P               : 190 195
PLOT_Q               : 194
PPie                 : 161
PRINT                : 31
PRINT_A              : 197
PRINT_B              : 198 211
PRINT_C              : 199 200
PRINT_D              : 206 207
PROGRAMA             : 0
PROGRAMA_A           : 1 6
PRadar               : 165
PVenn                : 166
RETURNOP             : 36
TERMINO              : 106 114 115
TERMINO_A            : 112
TIPO_P               : 9 57 60
TIPO_S               : 10
VARS                 : 1 64
VARS_A               : 8 22
VARS_B               : 9 10 20
VARS_C               : 11
VARS_CTE             : 132
VARS_CTE_A           : 
VARS_CTE_B           : 139 144 150
VARS_CTE_C           : 149
VARS_CTE_D           : 138 145
VARS_D               : 19
VARS_E               : 11
VARS_F               : 13
WHILE                : 30
addStackO            : 82
add_SB               : 138 145
add_con              : 206
add_count            : 1 62
add_equal            : 91
add_ev               : 217 218
add_exp              : 207
add_functionr        : 49
add_inputid          : 154
add_operator         : 114 115
add_relop            : 223
add_s1               : 13
add_s2               : 16
add_sign             : 211
add_start            : 62
add_string           : 199
add_temp             : 200
add_variable         : 11
add_variable_m       : 60
addfunction          : 1
append_bool          : 135 136
append_cte_float     : 134
append_cte_int       : 133
append_id            : 137 138 139
append_operator      : 108 109
bool_for             : 100
bool_while           : 103
change_scope         : 49
check_bool           : 94
check_types          : 74
end_quad             : 1
endproc              : 49
era                  : 68
fill_end             : 94
gosub                : 68
gotoElse             : 97
goto_while           : 103
incK                 : 71
param_table          : 62
pop_SB               : 138 145
pop_exp              : 106
pop_term             : 112
print_id             : 
print_quad           : 198
print_string         : 
quad                 : 82
quad_input           : 154
quad_main            : 1
release_vars         : 49
repeat_for           : 100
return_quad          : 50
ver_arr              : 85 138 145
ver_mat              : 88 152

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (4) addfunction -> .

    OPEN_BRACKET    reduce using rule 4 (addfunction -> .)

    addfunction                    shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addfunction . OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    OPEN_BRACKET    shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET . VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 6

state 6

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS . add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (3) add_count -> .

    MODULE          reduce using rule 3 (add_count -> .)
    MAIN            reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 8

state 7

    (8) VARS -> VARS_KEYWORD . OPEN_BRACKET VARS_A

    OPEN_BRACKET    shift and go to state 9


state 8

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count . PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (49) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (226) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 226 (EMPTY -> .)

    PROGRAMA_A                     shift and go to state 10
    MODULO                         shift and go to state 11
    EMPTY                          shift and go to state 12

state 9

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR
    (41) TIPO_S -> . TYPE_GRAPH
    (42) TIPO_S -> . TYPE_PIECHART
    (43) TIPO_S -> . TYPE_BARCHART
    (44) TIPO_S -> . TYPE_HORBARCHART
    (45) TIPO_S -> . TYPE_DONUTGRAPH
    (46) TIPO_S -> . TYPE_NETWORK
    (47) TIPO_S -> . TYPE_VENN
    (48) TIPO_S -> . TYPE_RADARCHART

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_A                         shift and go to state 14
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 10

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A . MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    MAIN            shift and go to state 29


state 11

    (6) PROGRAMA_A -> MODULO . PROGRAMA_A
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (49) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (226) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 226 (EMPTY -> .)

    MODULO                         shift and go to state 11
    PROGRAMA_A                     shift and go to state 30
    EMPTY                          shift and go to state 12

state 12

    (7) PROGRAMA_A -> EMPTY .

    MAIN            reduce using rule 7 (PROGRAMA_A -> EMPTY .)


state 13

    (49) MODULO -> MODULE . MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (56) MODULO_A -> . VOID
    (57) MODULO_A -> . TIPO_P
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    VOID            shift and go to state 32
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_A                       shift and go to state 31
    TIPO_P                         shift and go to state 33

state 14

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .

    MODULE          reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    MAIN            reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    OPEN_BRACKET    reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)


state 15

    (9) VARS_A -> TIPO_P . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 34

state 16

    (10) VARS_A -> TIPO_S . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 36

state 17

    (37) TIPO_P -> INT .

    ID              reduce using rule 37 (TIPO_P -> INT .)


state 18

    (38) TIPO_P -> FLOAT .

    ID              reduce using rule 38 (TIPO_P -> FLOAT .)


state 19

    (39) TIPO_P -> BOOL .

    ID              reduce using rule 39 (TIPO_P -> BOOL .)


state 20

    (40) TIPO_P -> CHAR .

    ID              reduce using rule 40 (TIPO_P -> CHAR .)


state 21

    (41) TIPO_S -> TYPE_GRAPH .

    ID              reduce using rule 41 (TIPO_S -> TYPE_GRAPH .)


state 22

    (42) TIPO_S -> TYPE_PIECHART .

    ID              reduce using rule 42 (TIPO_S -> TYPE_PIECHART .)


state 23

    (43) TIPO_S -> TYPE_BARCHART .

    ID              reduce using rule 43 (TIPO_S -> TYPE_BARCHART .)


state 24

    (44) TIPO_S -> TYPE_HORBARCHART .

    ID              reduce using rule 44 (TIPO_S -> TYPE_HORBARCHART .)


state 25

    (45) TIPO_S -> TYPE_DONUTGRAPH .

    ID              reduce using rule 45 (TIPO_S -> TYPE_DONUTGRAPH .)


state 26

    (46) TIPO_S -> TYPE_NETWORK .

    ID              reduce using rule 46 (TIPO_S -> TYPE_NETWORK .)


state 27

    (47) TIPO_S -> TYPE_VENN .

    ID              reduce using rule 47 (TIPO_S -> TYPE_VENN .)


state 28

    (48) TIPO_S -> TYPE_RADARCHART .

    ID              reduce using rule 48 (TIPO_S -> TYPE_RADARCHART .)


state 29

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN . quad_main BLOQUE CLOSE_BRACKET end_quad
    (5) quad_main -> .

    OPEN_BRACKET    reduce using rule 5 (quad_main -> .)

    quad_main                      shift and go to state 37

state 30

    (6) PROGRAMA_A -> MODULO PROGRAMA_A .

    MAIN            reduce using rule 6 (PROGRAMA_A -> MODULO PROGRAMA_A .)


state 31

    (49) MODULO -> MODULE MODULO_A . ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    ID              shift and go to state 38


state 32

    (56) MODULO_A -> VOID .

    ID              reduce using rule 56 (MODULO_A -> VOID .)


state 33

    (57) MODULO_A -> TIPO_P .

    ID              reduce using rule 57 (MODULO_A -> TIPO_P .)


state 34

    (9) VARS_A -> TIPO_P VARS_B .

    MODULE          reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    MAIN            reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    OPEN_BRACKET    reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)


state 35

    (11) VARS_B -> ID . add_variable VARS_E VARS_C
    (12) add_variable -> .

    OPEN_SQUARE_BRACKET reduce using rule 12 (add_variable -> .)
    SEMICOLON       reduce using rule 12 (add_variable -> .)
    COMMA           reduce using rule 12 (add_variable -> .)

    add_variable                   shift and go to state 39

state 36

    (10) VARS_A -> TIPO_S VARS_B .

    MODULE          reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    MAIN            reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    OPEN_BRACKET    reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)


state 37

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main . BLOQUE CLOSE_BRACKET end_quad
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 41

state 38

    (49) MODULO -> MODULE MODULO_A ID . add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (55) add_functionr -> .

    OPEN_PARENTHESIS reduce using rule 55 (add_functionr -> .)

    add_functionr                  shift and go to state 42

state 39

    (11) VARS_B -> ID add_variable . VARS_E VARS_C
    (13) VARS_E -> . OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F
    (14) VARS_E -> . EMPTY
    (226) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 44
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)

    VARS_E                         shift and go to state 43
    EMPTY                          shift and go to state 45

state 40

    (23) BLOQUE -> OPEN_BRACKET . ESTATUTO_A CLOSE_BRACKET
    (24) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (25) ESTATUTO_A -> . EMPTY
    (26) ESTATUTO -> . ASIGNACION
    (27) ESTATUTO -> . CONDICION
    (28) ESTATUTO -> . NOMBRAR
    (29) ESTATUTO -> . FOR
    (30) ESTATUTO -> . WHILE
    (31) ESTATUTO -> . PRINT
    (32) ESTATUTO -> . PLOT
    (33) ESTATUTO -> . LLAMADAMODULO
    (34) ESTATUTO -> . INPUT
    (35) ESTATUTO -> . COLOR
    (36) ESTATUTO -> . RETURNOP
    (226) EMPTY -> .
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (94) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (78) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (100) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (103) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (197) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (160) PLOT -> . PGraph
    (161) PLOT -> . PPie
    (162) PLOT -> . PGBarras
    (163) PLOT -> . PGBarrasHor
    (164) PLOT -> . PDona
    (165) PLOT -> . PRadar
    (166) PLOT -> . PVenn
    (167) PLOT -> . PLOT_B
    (68) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (154) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (118) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (50) RETURNOP -> . RETURN EXPRESIONESVARIAS return_quad SEMICOLON
    (168) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (169) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (170) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (171) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (172) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (173) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (174) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (175) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO_A                     shift and go to state 46
    ESTATUTO                       shift and go to state 47
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 41

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE . CLOSE_BRACKET end_quad

    CLOSE_BRACKET   shift and go to state 75


state 42

    (49) MODULO -> MODULE MODULO_A ID add_functionr . OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    OPEN_PARENTHESIS shift and go to state 76


state 43

    (11) VARS_B -> ID add_variable VARS_E . VARS_C
    (19) VARS_C -> . SEMICOLON VARS_D
    (20) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 78
    COMMA           shift and go to state 79

    VARS_C                         shift and go to state 77

state 44

    (13) VARS_E -> OPEN_SQUARE_BRACKET . CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F

    CTE_INTEGER     shift and go to state 80


state 45

    (14) VARS_E -> EMPTY .

    SEMICOLON       reduce using rule 14 (VARS_E -> EMPTY .)
    COMMA           reduce using rule 14 (VARS_E -> EMPTY .)


state 46

    (23) BLOQUE -> OPEN_BRACKET ESTATUTO_A . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 81


state 47

    (24) ESTATUTO_A -> ESTATUTO . ESTATUTO_A
    (24) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (25) ESTATUTO_A -> . EMPTY
    (26) ESTATUTO -> . ASIGNACION
    (27) ESTATUTO -> . CONDICION
    (28) ESTATUTO -> . NOMBRAR
    (29) ESTATUTO -> . FOR
    (30) ESTATUTO -> . WHILE
    (31) ESTATUTO -> . PRINT
    (32) ESTATUTO -> . PLOT
    (33) ESTATUTO -> . LLAMADAMODULO
    (34) ESTATUTO -> . INPUT
    (35) ESTATUTO -> . COLOR
    (36) ESTATUTO -> . RETURNOP
    (226) EMPTY -> .
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (94) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (78) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (100) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (103) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (197) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (160) PLOT -> . PGraph
    (161) PLOT -> . PPie
    (162) PLOT -> . PGBarras
    (163) PLOT -> . PGBarrasHor
    (164) PLOT -> . PDona
    (165) PLOT -> . PRadar
    (166) PLOT -> . PVenn
    (167) PLOT -> . PLOT_B
    (68) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (154) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (118) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (50) RETURNOP -> . RETURN EXPRESIONESVARIAS return_quad SEMICOLON
    (168) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (169) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (170) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (171) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (172) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (173) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (174) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (175) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO                       shift and go to state 47
    ESTATUTO_A                     shift and go to state 82
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 48

    (25) ESTATUTO_A -> EMPTY .

    CLOSE_BRACKET   reduce using rule 25 (ESTATUTO_A -> EMPTY .)


state 49

    (26) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    FOR_KEYWORD     reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    WHILE_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    PRINT_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    INPUT_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    CLOSE_BRACKET   reduce using rule 26 (ESTATUTO -> ASIGNACION .)


state 50

    (27) ESTATUTO -> CONDICION .

    ID              reduce using rule 27 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 27 (ESTATUTO -> CONDICION .)
    FOR_KEYWORD     reduce using rule 27 (ESTATUTO -> CONDICION .)
    WHILE_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    PRINT_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    INPUT_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 27 (ESTATUTO -> CONDICION .)
    CLOSE_BRACKET   reduce using rule 27 (ESTATUTO -> CONDICION .)


state 51

    (28) ESTATUTO -> NOMBRAR .

    ID              reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    IF              reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    FOR_KEYWORD     reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    WHILE_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    PRINT_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    INPUT_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    RETURN          reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    CLOSE_BRACKET   reduce using rule 28 (ESTATUTO -> NOMBRAR .)


state 52

    (29) ESTATUTO -> FOR .

    ID              reduce using rule 29 (ESTATUTO -> FOR .)
    IF              reduce using rule 29 (ESTATUTO -> FOR .)
    FOR_KEYWORD     reduce using rule 29 (ESTATUTO -> FOR .)
    WHILE_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    PRINT_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    INPUT_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    RETURN          reduce using rule 29 (ESTATUTO -> FOR .)
    CLOSE_BRACKET   reduce using rule 29 (ESTATUTO -> FOR .)


state 53

    (30) ESTATUTO -> WHILE .

    ID              reduce using rule 30 (ESTATUTO -> WHILE .)
    IF              reduce using rule 30 (ESTATUTO -> WHILE .)
    FOR_KEYWORD     reduce using rule 30 (ESTATUTO -> WHILE .)
    WHILE_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    PRINT_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    INPUT_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    RETURN          reduce using rule 30 (ESTATUTO -> WHILE .)
    CLOSE_BRACKET   reduce using rule 30 (ESTATUTO -> WHILE .)


state 54

    (31) ESTATUTO -> PRINT .

    ID              reduce using rule 31 (ESTATUTO -> PRINT .)
    IF              reduce using rule 31 (ESTATUTO -> PRINT .)
    FOR_KEYWORD     reduce using rule 31 (ESTATUTO -> PRINT .)
    WHILE_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    PRINT_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    INPUT_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    RETURN          reduce using rule 31 (ESTATUTO -> PRINT .)
    CLOSE_BRACKET   reduce using rule 31 (ESTATUTO -> PRINT .)


state 55

    (32) ESTATUTO -> PLOT .

    ID              reduce using rule 32 (ESTATUTO -> PLOT .)
    IF              reduce using rule 32 (ESTATUTO -> PLOT .)
    FOR_KEYWORD     reduce using rule 32 (ESTATUTO -> PLOT .)
    WHILE_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    PRINT_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    INPUT_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    RETURN          reduce using rule 32 (ESTATUTO -> PLOT .)
    CLOSE_BRACKET   reduce using rule 32 (ESTATUTO -> PLOT .)


state 56

    (33) ESTATUTO -> LLAMADAMODULO .

    ID              reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    IF              reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    FOR_KEYWORD     reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    WHILE_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    PRINT_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    INPUT_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    RETURN          reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    CLOSE_BRACKET   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)


state 57

    (34) ESTATUTO -> INPUT .

    ID              reduce using rule 34 (ESTATUTO -> INPUT .)
    IF              reduce using rule 34 (ESTATUTO -> INPUT .)
    FOR_KEYWORD     reduce using rule 34 (ESTATUTO -> INPUT .)
    WHILE_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    PRINT_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    INPUT_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    RETURN          reduce using rule 34 (ESTATUTO -> INPUT .)
    CLOSE_BRACKET   reduce using rule 34 (ESTATUTO -> INPUT .)


state 58

    (35) ESTATUTO -> COLOR .

    ID              reduce using rule 35 (ESTATUTO -> COLOR .)
    IF              reduce using rule 35 (ESTATUTO -> COLOR .)
    FOR_KEYWORD     reduce using rule 35 (ESTATUTO -> COLOR .)
    WHILE_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    PRINT_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    INPUT_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    RETURN          reduce using rule 35 (ESTATUTO -> COLOR .)
    CLOSE_BRACKET   reduce using rule 35 (ESTATUTO -> COLOR .)


state 59

    (36) ESTATUTO -> RETURNOP .

    ID              reduce using rule 36 (ESTATUTO -> RETURNOP .)
    IF              reduce using rule 36 (ESTATUTO -> RETURNOP .)
    FOR_KEYWORD     reduce using rule 36 (ESTATUTO -> RETURNOP .)
    WHILE_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    PRINT_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    INPUT_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    RETURN          reduce using rule 36 (ESTATUTO -> RETURNOP .)
    CLOSE_BRACKET   reduce using rule 36 (ESTATUTO -> RETURNOP .)


state 60

    (82) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (78) NOMBRAR -> ID . POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (68) LLAMADAMODULO -> ID . era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (118) COLOR -> ID . POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (168) PGraph -> ID . POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (169) PPie -> ID . POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (170) PGBarras -> ID . POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (171) PGBarrasHor -> ID . POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (172) PDona -> ID . POINT CREATED OPEN_PARENTHESIS PLOT_E
    (173) PRadar -> ID . POINT CREATER OPEN_PARENTHESIS PLOT_E
    (174) PVenn -> ID . POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (175) PLOT_B -> ID . POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (84) addStackO -> .
    (70) era -> .

    POINT           shift and go to state 84
    OPEN_SQUARE_BRACKET reduce using rule 84 (addStackO -> .)
    EQUAL           reduce using rule 84 (addStackO -> .)
    OPEN_PARENTHESIS reduce using rule 70 (era -> .)

    addStackO                      shift and go to state 83
    era                            shift and go to state 85

state 61

    (94) CONDICION -> IF . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    OPEN_PARENTHESIS shift and go to state 86


state 62

    (100) FOR -> FOR_KEYWORD . OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    OPEN_PARENTHESIS shift and go to state 87


state 63

    (103) WHILE -> WHILE_KEYWORD . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    OPEN_PARENTHESIS shift and go to state 88


state 64

    (197) PRINT -> PRINT_KEYWORD . OPEN_PARENTHESIS PRINT_A

    OPEN_PARENTHESIS shift and go to state 89


state 65

    (160) PLOT -> PGraph .

    ID              reduce using rule 160 (PLOT -> PGraph .)
    IF              reduce using rule 160 (PLOT -> PGraph .)
    FOR_KEYWORD     reduce using rule 160 (PLOT -> PGraph .)
    WHILE_KEYWORD   reduce using rule 160 (PLOT -> PGraph .)
    PRINT_KEYWORD   reduce using rule 160 (PLOT -> PGraph .)
    INPUT_KEYWORD   reduce using rule 160 (PLOT -> PGraph .)
    RETURN          reduce using rule 160 (PLOT -> PGraph .)
    CLOSE_BRACKET   reduce using rule 160 (PLOT -> PGraph .)


state 66

    (161) PLOT -> PPie .

    ID              reduce using rule 161 (PLOT -> PPie .)
    IF              reduce using rule 161 (PLOT -> PPie .)
    FOR_KEYWORD     reduce using rule 161 (PLOT -> PPie .)
    WHILE_KEYWORD   reduce using rule 161 (PLOT -> PPie .)
    PRINT_KEYWORD   reduce using rule 161 (PLOT -> PPie .)
    INPUT_KEYWORD   reduce using rule 161 (PLOT -> PPie .)
    RETURN          reduce using rule 161 (PLOT -> PPie .)
    CLOSE_BRACKET   reduce using rule 161 (PLOT -> PPie .)


state 67

    (162) PLOT -> PGBarras .

    ID              reduce using rule 162 (PLOT -> PGBarras .)
    IF              reduce using rule 162 (PLOT -> PGBarras .)
    FOR_KEYWORD     reduce using rule 162 (PLOT -> PGBarras .)
    WHILE_KEYWORD   reduce using rule 162 (PLOT -> PGBarras .)
    PRINT_KEYWORD   reduce using rule 162 (PLOT -> PGBarras .)
    INPUT_KEYWORD   reduce using rule 162 (PLOT -> PGBarras .)
    RETURN          reduce using rule 162 (PLOT -> PGBarras .)
    CLOSE_BRACKET   reduce using rule 162 (PLOT -> PGBarras .)


state 68

    (163) PLOT -> PGBarrasHor .

    ID              reduce using rule 163 (PLOT -> PGBarrasHor .)
    IF              reduce using rule 163 (PLOT -> PGBarrasHor .)
    FOR_KEYWORD     reduce using rule 163 (PLOT -> PGBarrasHor .)
    WHILE_KEYWORD   reduce using rule 163 (PLOT -> PGBarrasHor .)
    PRINT_KEYWORD   reduce using rule 163 (PLOT -> PGBarrasHor .)
    INPUT_KEYWORD   reduce using rule 163 (PLOT -> PGBarrasHor .)
    RETURN          reduce using rule 163 (PLOT -> PGBarrasHor .)
    CLOSE_BRACKET   reduce using rule 163 (PLOT -> PGBarrasHor .)


state 69

    (164) PLOT -> PDona .

    ID              reduce using rule 164 (PLOT -> PDona .)
    IF              reduce using rule 164 (PLOT -> PDona .)
    FOR_KEYWORD     reduce using rule 164 (PLOT -> PDona .)
    WHILE_KEYWORD   reduce using rule 164 (PLOT -> PDona .)
    PRINT_KEYWORD   reduce using rule 164 (PLOT -> PDona .)
    INPUT_KEYWORD   reduce using rule 164 (PLOT -> PDona .)
    RETURN          reduce using rule 164 (PLOT -> PDona .)
    CLOSE_BRACKET   reduce using rule 164 (PLOT -> PDona .)


state 70

    (165) PLOT -> PRadar .

    ID              reduce using rule 165 (PLOT -> PRadar .)
    IF              reduce using rule 165 (PLOT -> PRadar .)
    FOR_KEYWORD     reduce using rule 165 (PLOT -> PRadar .)
    WHILE_KEYWORD   reduce using rule 165 (PLOT -> PRadar .)
    PRINT_KEYWORD   reduce using rule 165 (PLOT -> PRadar .)
    INPUT_KEYWORD   reduce using rule 165 (PLOT -> PRadar .)
    RETURN          reduce using rule 165 (PLOT -> PRadar .)
    CLOSE_BRACKET   reduce using rule 165 (PLOT -> PRadar .)


state 71

    (166) PLOT -> PVenn .

    ID              reduce using rule 166 (PLOT -> PVenn .)
    IF              reduce using rule 166 (PLOT -> PVenn .)
    FOR_KEYWORD     reduce using rule 166 (PLOT -> PVenn .)
    WHILE_KEYWORD   reduce using rule 166 (PLOT -> PVenn .)
    PRINT_KEYWORD   reduce using rule 166 (PLOT -> PVenn .)
    INPUT_KEYWORD   reduce using rule 166 (PLOT -> PVenn .)
    RETURN          reduce using rule 166 (PLOT -> PVenn .)
    CLOSE_BRACKET   reduce using rule 166 (PLOT -> PVenn .)


state 72

    (167) PLOT -> PLOT_B .

    ID              reduce using rule 167 (PLOT -> PLOT_B .)
    IF              reduce using rule 167 (PLOT -> PLOT_B .)
    FOR_KEYWORD     reduce using rule 167 (PLOT -> PLOT_B .)
    WHILE_KEYWORD   reduce using rule 167 (PLOT -> PLOT_B .)
    PRINT_KEYWORD   reduce using rule 167 (PLOT -> PLOT_B .)
    INPUT_KEYWORD   reduce using rule 167 (PLOT -> PLOT_B .)
    RETURN          reduce using rule 167 (PLOT -> PLOT_B .)
    CLOSE_BRACKET   reduce using rule 167 (PLOT -> PLOT_B .)


state 73

    (154) INPUT -> INPUT_KEYWORD . INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input

    INPUTSYMBOL     shift and go to state 90


state 74

    (50) RETURNOP -> RETURN . EXPRESIONESVARIAS return_quad SEMICOLON
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 91
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 75

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET . end_quad
    (2) end_quad -> .

    $end            reduce using rule 2 (end_quad -> .)

    end_quad                       shift and go to state 110

state 76

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS . MODULO_C release_vars change_scope endproc
    (60) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 111
    TIPO_P                         shift and go to state 112

state 77

    (11) VARS_B -> ID add_variable VARS_E VARS_C .

    MODULE          reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    MAIN            reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    OPEN_BRACKET    reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)


state 78

    (19) VARS_C -> SEMICOLON . VARS_D
    (21) VARS_D -> . CLOSE_BRACKET
    (22) VARS_D -> . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR
    (41) TIPO_S -> . TYPE_GRAPH
    (42) TIPO_S -> . TYPE_PIECHART
    (43) TIPO_S -> . TYPE_BARCHART
    (44) TIPO_S -> . TYPE_HORBARCHART
    (45) TIPO_S -> . TYPE_DONUTGRAPH
    (46) TIPO_S -> . TYPE_NETWORK
    (47) TIPO_S -> . TYPE_VENN
    (48) TIPO_S -> . TYPE_RADARCHART

    CLOSE_BRACKET   shift and go to state 114
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_D                         shift and go to state 113
    VARS_A                         shift and go to state 115
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 79

    (20) VARS_C -> COMMA . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 116

state 80

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER . add_s1 CLOSE_SQUARE_BRACKET VARS_F
    (15) add_s1 -> .

    CLOSE_SQUARE_BRACKET reduce using rule 15 (add_s1 -> .)

    add_s1                         shift and go to state 117

state 81

    (23) BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .

    CLOSE_BRACKET   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ELSE            reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ID              reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    IF              reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    FOR_KEYWORD     reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    RETURN          reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)


state 82

    (24) ESTATUTO_A -> ESTATUTO ESTATUTO_A .

    CLOSE_BRACKET   reduce using rule 24 (ESTATUTO_A -> ESTATUTO ESTATUTO_A .)


state 83

    (82) ASIGNACION -> ID addStackO . ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (85) ASIGNACION_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
    (86) ASIGNACION_A -> . EMPTY
    (226) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 119
    EQUAL           reduce using rule 226 (EMPTY -> .)

    ASIGNACION_A                   shift and go to state 118
    EMPTY                          shift and go to state 120

state 84

    (78) NOMBRAR -> ID POINT . NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (118) COLOR -> ID POINT . COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (168) PGraph -> ID POINT . CREATEG OPEN_PARENTHESIS PLOT_C
    (169) PPie -> ID POINT . CREATEPC OPEN_PARENTHESIS PLOT_E
    (170) PGBarras -> ID POINT . CREATEGB OPEN_PARENTHESIS PLOT_E
    (171) PGBarrasHor -> ID POINT . CREATEGBH OPEN_PARENTHESIS PLOT_E
    (172) PDona -> ID POINT . CREATED OPEN_PARENTHESIS PLOT_E
    (173) PRadar -> ID POINT . CREATER OPEN_PARENTHESIS PLOT_E
    (174) PVenn -> ID POINT . CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (175) PLOT_B -> ID POINT . CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (79) NOMBRAR_A -> . NAME
    (80) NOMBRAR_A -> . NAMEX
    (81) NOMBRAR_A -> . NAMEY

    COLOR_KEYWORD   shift and go to state 122
    CREATEG         shift and go to state 123
    CREATEPC        shift and go to state 124
    CREATEGB        shift and go to state 125
    CREATEGBH       shift and go to state 126
    CREATED         shift and go to state 127
    CREATER         shift and go to state 128
    CREATEV         shift and go to state 129
    CREATEN         shift and go to state 130
    NAME            shift and go to state 131
    NAMEX           shift and go to state 132
    NAMEY           shift and go to state 133

    NOMBRAR_A                      shift and go to state 121

state 85

    (68) LLAMADAMODULO -> ID era . OPEN_PARENTHESIS LLAMADAMODULO_C gosub

    OPEN_PARENTHESIS shift and go to state 134


state 86

    (94) CONDICION -> IF OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 135
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 87

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS . ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 137

    ASIGNACION                     shift and go to state 136

state 88

    (103) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 138
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 89

    (197) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS . PRINT_A
    (198) PRINT_A -> . PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
    (199) PRINT_B -> . CTE_STRING add_string PRINT_C
    (200) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 141
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    PRINT_A                        shift and go to state 139
    PRINT_B                        shift and go to state 140
    EXPRESIONESVARIAS              shift and go to state 142
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 90

    (154) INPUT -> INPUT_KEYWORD INPUTSYMBOL . ID add_inputid INPUT_A SEMICOLON quad_input

    ID              shift and go to state 143


state 91

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS . return_quad SEMICOLON
    (51) return_quad -> .

    SEMICOLON       reduce using rule 51 (return_quad -> .)

    return_quad                    shift and go to state 144

state 92

    (214) EXPRESIONESVARIAS -> NOT . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EV_C                           shift and go to state 145
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 93

    (215) EXPRESIONESVARIAS -> EV_C .

    SEMICOLON       reduce using rule 215 (EXPRESIONESVARIAS -> EV_C .)
    CLOSE_PARENTHESIS reduce using rule 215 (EXPRESIONESVARIAS -> EV_C .)
    CONCATENATE     reduce using rule 215 (EXPRESIONESVARIAS -> EV_C .)
    CTE_INTEGER     reduce using rule 215 (EXPRESIONESVARIAS -> EV_C .)
    CTE_FLOAT       reduce using rule 215 (EXPRESIONESVARIAS -> EV_C .)
    TRUE            reduce using rule 215 (EXPRESIONESVARIAS -> EV_C .)
    FALSE           reduce using rule 215 (EXPRESIONESVARIAS -> EV_C .)
    ID              reduce using rule 215 (EXPRESIONESVARIAS -> EV_C .)


state 94

    (216) EV_C -> EXP_RELOP . EV_B
    (217) EV_B -> . AND add_ev EV_C
    (218) EV_B -> . OR add_ev EV_C
    (219) EV_B -> . EMPTY
    (226) EMPTY -> .

    AND             shift and go to state 147
    OR              shift and go to state 148
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 226 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 226 (EMPTY -> .)
    TRUE            reduce using rule 226 (EMPTY -> .)
    FALSE           reduce using rule 226 (EMPTY -> .)
    ID              reduce using rule 226 (EMPTY -> .)

    EV_B                           shift and go to state 146
    EMPTY                          shift and go to state 149

state 95

    (221) EXP_RELOP -> EXP . EXP_RELOP_A
    (223) EXP_RELOP_A -> . RELOP add_relop EXP
    (224) EXP_RELOP_A -> . EMPTY
    (226) EMPTY -> .

    RELOP           shift and go to state 151
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 226 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 226 (EMPTY -> .)
    TRUE            reduce using rule 226 (EMPTY -> .)
    FALSE           reduce using rule 226 (EMPTY -> .)
    ID              reduce using rule 226 (EMPTY -> .)

    EXP_RELOP_A                    shift and go to state 150
    EMPTY                          shift and go to state 152

state 96

    (222) EXP_RELOP -> EMPTY .
    (130) FACTOR_A -> EMPTY .

  ! reduce/reduce conflict for AND resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OR resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_INTEGER resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_FLOAT resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for TRUE resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for FALSE resolved using rule 130 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for ID resolved using rule 130 (FACTOR_A -> EMPTY .)
    TIMES           reduce using rule 130 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 130 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 130 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 130 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 130 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 130 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 130 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 130 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 130 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 130 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 130 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 130 (FACTOR_A -> EMPTY .)
    TRUE            reduce using rule 130 (FACTOR_A -> EMPTY .)
    FALSE           reduce using rule 130 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 130 (FACTOR_A -> EMPTY .)

  ! AND             [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! OR              [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! SEMICOLON       [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! CONCATENATE     [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! CTE_INTEGER     [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! CTE_FLOAT       [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! TRUE            [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! FALSE           [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]
  ! ID              [ reduce using rule 222 (EXP_RELOP -> EMPTY .) ]


state 97

    (106) EXP -> TERMINO . pop_exp EXP_A
    (107) pop_exp -> .

    PLUS            reduce using rule 107 (pop_exp -> .)
    MINS            reduce using rule 107 (pop_exp -> .)
    RELOP           reduce using rule 107 (pop_exp -> .)
    AND             reduce using rule 107 (pop_exp -> .)
    OR              reduce using rule 107 (pop_exp -> .)
    SEMICOLON       reduce using rule 107 (pop_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 107 (pop_exp -> .)
    CONCATENATE     reduce using rule 107 (pop_exp -> .)
    CTE_INTEGER     reduce using rule 107 (pop_exp -> .)
    CTE_FLOAT       reduce using rule 107 (pop_exp -> .)
    TRUE            reduce using rule 107 (pop_exp -> .)
    FALSE           reduce using rule 107 (pop_exp -> .)
    ID              reduce using rule 107 (pop_exp -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 107 (pop_exp -> .)
    COMMA           reduce using rule 107 (pop_exp -> .)
    IF              reduce using rule 107 (pop_exp -> .)
    FOR_KEYWORD     reduce using rule 107 (pop_exp -> .)
    WHILE_KEYWORD   reduce using rule 107 (pop_exp -> .)
    PRINT_KEYWORD   reduce using rule 107 (pop_exp -> .)
    INPUT_KEYWORD   reduce using rule 107 (pop_exp -> .)
    RETURN          reduce using rule 107 (pop_exp -> .)
    CLOSE_BRACKET   reduce using rule 107 (pop_exp -> .)

    pop_exp                        shift and go to state 153

state 98

    (112) TERMINO -> FACTOR . pop_term TERMINO_A
    (113) pop_term -> .

    TIMES           reduce using rule 113 (pop_term -> .)
    DIVIDE          reduce using rule 113 (pop_term -> .)
    PLUS            reduce using rule 113 (pop_term -> .)
    MINS            reduce using rule 113 (pop_term -> .)
    RELOP           reduce using rule 113 (pop_term -> .)
    AND             reduce using rule 113 (pop_term -> .)
    OR              reduce using rule 113 (pop_term -> .)
    SEMICOLON       reduce using rule 113 (pop_term -> .)
    CLOSE_PARENTHESIS reduce using rule 113 (pop_term -> .)
    CONCATENATE     reduce using rule 113 (pop_term -> .)
    CTE_INTEGER     reduce using rule 113 (pop_term -> .)
    CTE_FLOAT       reduce using rule 113 (pop_term -> .)
    TRUE            reduce using rule 113 (pop_term -> .)
    FALSE           reduce using rule 113 (pop_term -> .)
    ID              reduce using rule 113 (pop_term -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 113 (pop_term -> .)
    COMMA           reduce using rule 113 (pop_term -> .)
    IF              reduce using rule 113 (pop_term -> .)
    FOR_KEYWORD     reduce using rule 113 (pop_term -> .)
    WHILE_KEYWORD   reduce using rule 113 (pop_term -> .)
    PRINT_KEYWORD   reduce using rule 113 (pop_term -> .)
    INPUT_KEYWORD   reduce using rule 113 (pop_term -> .)
    RETURN          reduce using rule 113 (pop_term -> .)
    CLOSE_BRACKET   reduce using rule 113 (pop_term -> .)

    pop_term                       shift and go to state 154

state 99

    (125) FACTOR -> FACTOR_A .

    TIMES           reduce using rule 125 (FACTOR -> FACTOR_A .)
    DIVIDE          reduce using rule 125 (FACTOR -> FACTOR_A .)
    PLUS            reduce using rule 125 (FACTOR -> FACTOR_A .)
    MINS            reduce using rule 125 (FACTOR -> FACTOR_A .)
    RELOP           reduce using rule 125 (FACTOR -> FACTOR_A .)
    AND             reduce using rule 125 (FACTOR -> FACTOR_A .)
    OR              reduce using rule 125 (FACTOR -> FACTOR_A .)
    SEMICOLON       reduce using rule 125 (FACTOR -> FACTOR_A .)
    CLOSE_PARENTHESIS reduce using rule 125 (FACTOR -> FACTOR_A .)
    CONCATENATE     reduce using rule 125 (FACTOR -> FACTOR_A .)
    CTE_INTEGER     reduce using rule 125 (FACTOR -> FACTOR_A .)
    CTE_FLOAT       reduce using rule 125 (FACTOR -> FACTOR_A .)
    TRUE            reduce using rule 125 (FACTOR -> FACTOR_A .)
    FALSE           reduce using rule 125 (FACTOR -> FACTOR_A .)
    ID              reduce using rule 125 (FACTOR -> FACTOR_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 125 (FACTOR -> FACTOR_A .)
    COMMA           reduce using rule 125 (FACTOR -> FACTOR_A .)
    IF              reduce using rule 125 (FACTOR -> FACTOR_A .)
    FOR_KEYWORD     reduce using rule 125 (FACTOR -> FACTOR_A .)
    WHILE_KEYWORD   reduce using rule 125 (FACTOR -> FACTOR_A .)
    PRINT_KEYWORD   reduce using rule 125 (FACTOR -> FACTOR_A .)
    INPUT_KEYWORD   reduce using rule 125 (FACTOR -> FACTOR_A .)
    RETURN          reduce using rule 125 (FACTOR -> FACTOR_A .)
    CLOSE_BRACKET   reduce using rule 125 (FACTOR -> FACTOR_A .)


state 100

    (126) FACTOR_A -> OPEN_PARENTHESIS . FACTOR_B CLOSE_PARENTHESIS
    (131) FACTOR_B -> . EXPRESIONESVARIAS FACTOR_C
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    FACTOR_B                       shift and go to state 155
    EXPRESIONESVARIAS              shift and go to state 156
    FACTOR_C                       shift and go to state 102
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    VARS_CTE                       shift and go to state 104

state 101

    (127) FACTOR_A -> PLUS . FACTOR_C
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

    FACTOR_C                       shift and go to state 157
    VARS_CTE                       shift and go to state 104

state 102

    (129) FACTOR_A -> FACTOR_C .

    TIMES           reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    DIVIDE          reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    PLUS            reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    MINS            reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    RELOP           reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    AND             reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    OR              reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    SEMICOLON       reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    CONCATENATE     reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    CTE_INTEGER     reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    CTE_FLOAT       reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    TRUE            reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    FALSE           reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    ID              reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    COMMA           reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    IF              reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    FOR_KEYWORD     reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    RETURN          reduce using rule 129 (FACTOR_A -> FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 129 (FACTOR_A -> FACTOR_C .)


state 103

    (128) FACTOR_A -> MINS . FACTOR_C
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

    FACTOR_C                       shift and go to state 158
    VARS_CTE                       shift and go to state 104

state 104

    (132) FACTOR_C -> VARS_CTE .

    TIMES           reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    DIVIDE          reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    PLUS            reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    MINS            reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    RELOP           reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    AND             reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    OR              reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    SEMICOLON       reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    CLOSE_PARENTHESIS reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    CONCATENATE     reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    CTE_INTEGER     reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    CTE_FLOAT       reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    TRUE            reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    FALSE           reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    ID              reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    CLOSE_SQUARE_BRACKET reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    COMMA           reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    IF              reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    FOR_KEYWORD     reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    WHILE_KEYWORD   reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    PRINT_KEYWORD   reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    INPUT_KEYWORD   reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    RETURN          reduce using rule 132 (FACTOR_C -> VARS_CTE .)
    CLOSE_BRACKET   reduce using rule 132 (FACTOR_C -> VARS_CTE .)


state 105

    (133) VARS_CTE -> CTE_INTEGER . append_cte_int
    (141) append_cte_int -> .

    TIMES           reduce using rule 141 (append_cte_int -> .)
    DIVIDE          reduce using rule 141 (append_cte_int -> .)
    PLUS            reduce using rule 141 (append_cte_int -> .)
    MINS            reduce using rule 141 (append_cte_int -> .)
    RELOP           reduce using rule 141 (append_cte_int -> .)
    AND             reduce using rule 141 (append_cte_int -> .)
    OR              reduce using rule 141 (append_cte_int -> .)
    SEMICOLON       reduce using rule 141 (append_cte_int -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (append_cte_int -> .)
    CONCATENATE     reduce using rule 141 (append_cte_int -> .)
    CTE_INTEGER     reduce using rule 141 (append_cte_int -> .)
    CTE_FLOAT       reduce using rule 141 (append_cte_int -> .)
    TRUE            reduce using rule 141 (append_cte_int -> .)
    FALSE           reduce using rule 141 (append_cte_int -> .)
    ID              reduce using rule 141 (append_cte_int -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 141 (append_cte_int -> .)
    COMMA           reduce using rule 141 (append_cte_int -> .)
    IF              reduce using rule 141 (append_cte_int -> .)
    FOR_KEYWORD     reduce using rule 141 (append_cte_int -> .)
    WHILE_KEYWORD   reduce using rule 141 (append_cte_int -> .)
    PRINT_KEYWORD   reduce using rule 141 (append_cte_int -> .)
    INPUT_KEYWORD   reduce using rule 141 (append_cte_int -> .)
    RETURN          reduce using rule 141 (append_cte_int -> .)
    CLOSE_BRACKET   reduce using rule 141 (append_cte_int -> .)

    append_cte_int                 shift and go to state 159

state 106

    (134) VARS_CTE -> CTE_FLOAT . append_cte_float
    (142) append_cte_float -> .

    TIMES           reduce using rule 142 (append_cte_float -> .)
    DIVIDE          reduce using rule 142 (append_cte_float -> .)
    PLUS            reduce using rule 142 (append_cte_float -> .)
    MINS            reduce using rule 142 (append_cte_float -> .)
    RELOP           reduce using rule 142 (append_cte_float -> .)
    AND             reduce using rule 142 (append_cte_float -> .)
    OR              reduce using rule 142 (append_cte_float -> .)
    SEMICOLON       reduce using rule 142 (append_cte_float -> .)
    CLOSE_PARENTHESIS reduce using rule 142 (append_cte_float -> .)
    CONCATENATE     reduce using rule 142 (append_cte_float -> .)
    CTE_INTEGER     reduce using rule 142 (append_cte_float -> .)
    CTE_FLOAT       reduce using rule 142 (append_cte_float -> .)
    TRUE            reduce using rule 142 (append_cte_float -> .)
    FALSE           reduce using rule 142 (append_cte_float -> .)
    ID              reduce using rule 142 (append_cte_float -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 142 (append_cte_float -> .)
    COMMA           reduce using rule 142 (append_cte_float -> .)
    IF              reduce using rule 142 (append_cte_float -> .)
    FOR_KEYWORD     reduce using rule 142 (append_cte_float -> .)
    WHILE_KEYWORD   reduce using rule 142 (append_cte_float -> .)
    PRINT_KEYWORD   reduce using rule 142 (append_cte_float -> .)
    INPUT_KEYWORD   reduce using rule 142 (append_cte_float -> .)
    RETURN          reduce using rule 142 (append_cte_float -> .)
    CLOSE_BRACKET   reduce using rule 142 (append_cte_float -> .)

    append_cte_float               shift and go to state 160

state 107

    (135) VARS_CTE -> TRUE . append_bool
    (143) append_bool -> .

    TIMES           reduce using rule 143 (append_bool -> .)
    DIVIDE          reduce using rule 143 (append_bool -> .)
    PLUS            reduce using rule 143 (append_bool -> .)
    MINS            reduce using rule 143 (append_bool -> .)
    RELOP           reduce using rule 143 (append_bool -> .)
    AND             reduce using rule 143 (append_bool -> .)
    OR              reduce using rule 143 (append_bool -> .)
    SEMICOLON       reduce using rule 143 (append_bool -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (append_bool -> .)
    CONCATENATE     reduce using rule 143 (append_bool -> .)
    CTE_INTEGER     reduce using rule 143 (append_bool -> .)
    CTE_FLOAT       reduce using rule 143 (append_bool -> .)
    TRUE            reduce using rule 143 (append_bool -> .)
    FALSE           reduce using rule 143 (append_bool -> .)
    ID              reduce using rule 143 (append_bool -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 143 (append_bool -> .)
    COMMA           reduce using rule 143 (append_bool -> .)
    IF              reduce using rule 143 (append_bool -> .)
    FOR_KEYWORD     reduce using rule 143 (append_bool -> .)
    WHILE_KEYWORD   reduce using rule 143 (append_bool -> .)
    PRINT_KEYWORD   reduce using rule 143 (append_bool -> .)
    INPUT_KEYWORD   reduce using rule 143 (append_bool -> .)
    RETURN          reduce using rule 143 (append_bool -> .)
    CLOSE_BRACKET   reduce using rule 143 (append_bool -> .)

    append_bool                    shift and go to state 161

state 108

    (136) VARS_CTE -> FALSE . append_bool
    (143) append_bool -> .

    TIMES           reduce using rule 143 (append_bool -> .)
    DIVIDE          reduce using rule 143 (append_bool -> .)
    PLUS            reduce using rule 143 (append_bool -> .)
    MINS            reduce using rule 143 (append_bool -> .)
    RELOP           reduce using rule 143 (append_bool -> .)
    AND             reduce using rule 143 (append_bool -> .)
    OR              reduce using rule 143 (append_bool -> .)
    SEMICOLON       reduce using rule 143 (append_bool -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (append_bool -> .)
    CONCATENATE     reduce using rule 143 (append_bool -> .)
    CTE_INTEGER     reduce using rule 143 (append_bool -> .)
    CTE_FLOAT       reduce using rule 143 (append_bool -> .)
    TRUE            reduce using rule 143 (append_bool -> .)
    FALSE           reduce using rule 143 (append_bool -> .)
    ID              reduce using rule 143 (append_bool -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 143 (append_bool -> .)
    COMMA           reduce using rule 143 (append_bool -> .)
    IF              reduce using rule 143 (append_bool -> .)
    FOR_KEYWORD     reduce using rule 143 (append_bool -> .)
    WHILE_KEYWORD   reduce using rule 143 (append_bool -> .)
    PRINT_KEYWORD   reduce using rule 143 (append_bool -> .)
    INPUT_KEYWORD   reduce using rule 143 (append_bool -> .)
    RETURN          reduce using rule 143 (append_bool -> .)
    CLOSE_BRACKET   reduce using rule 143 (append_bool -> .)

    append_bool                    shift and go to state 162

state 109

    (137) VARS_CTE -> ID . append_id
    (138) VARS_CTE -> ID . append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> ID . append_id OPEN_PARENTHESIS VARS_CTE_B
    (140) append_id -> .

    OPEN_SQUARE_BRACKET reduce using rule 140 (append_id -> .)
    OPEN_PARENTHESIS reduce using rule 140 (append_id -> .)
    TIMES           reduce using rule 140 (append_id -> .)
    DIVIDE          reduce using rule 140 (append_id -> .)
    PLUS            reduce using rule 140 (append_id -> .)
    MINS            reduce using rule 140 (append_id -> .)
    RELOP           reduce using rule 140 (append_id -> .)
    AND             reduce using rule 140 (append_id -> .)
    OR              reduce using rule 140 (append_id -> .)
    SEMICOLON       reduce using rule 140 (append_id -> .)
    CLOSE_PARENTHESIS reduce using rule 140 (append_id -> .)
    CONCATENATE     reduce using rule 140 (append_id -> .)
    CTE_INTEGER     reduce using rule 140 (append_id -> .)
    CTE_FLOAT       reduce using rule 140 (append_id -> .)
    TRUE            reduce using rule 140 (append_id -> .)
    FALSE           reduce using rule 140 (append_id -> .)
    ID              reduce using rule 140 (append_id -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 140 (append_id -> .)
    COMMA           reduce using rule 140 (append_id -> .)
    IF              reduce using rule 140 (append_id -> .)
    FOR_KEYWORD     reduce using rule 140 (append_id -> .)
    WHILE_KEYWORD   reduce using rule 140 (append_id -> .)
    PRINT_KEYWORD   reduce using rule 140 (append_id -> .)
    INPUT_KEYWORD   reduce using rule 140 (append_id -> .)
    RETURN          reduce using rule 140 (append_id -> .)
    CLOSE_BRACKET   reduce using rule 140 (append_id -> .)

    append_id                      shift and go to state 163

state 110

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .)


state 111

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C . release_vars change_scope endproc
    (52) release_vars -> .

    MODULE          reduce using rule 52 (release_vars -> .)
    MAIN            reduce using rule 52 (release_vars -> .)

    release_vars                   shift and go to state 164

state 112

    (60) MODULO_C -> TIPO_P . ID add_variable_m MODULO_B MODULO_D

    ID              shift and go to state 165


state 113

    (19) VARS_C -> SEMICOLON VARS_D .

    MODULE          reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)
    MAIN            reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)
    OPEN_BRACKET    reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)


state 114

    (21) VARS_D -> CLOSE_BRACKET .

    MODULE          reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)
    MAIN            reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)


state 115

    (22) VARS_D -> VARS_A .

    MODULE          reduce using rule 22 (VARS_D -> VARS_A .)
    MAIN            reduce using rule 22 (VARS_D -> VARS_A .)
    OPEN_BRACKET    reduce using rule 22 (VARS_D -> VARS_A .)


state 116

    (20) VARS_C -> COMMA VARS_B .

    MODULE          reduce using rule 20 (VARS_C -> COMMA VARS_B .)
    MAIN            reduce using rule 20 (VARS_C -> COMMA VARS_B .)
    OPEN_BRACKET    reduce using rule 20 (VARS_C -> COMMA VARS_B .)


state 117

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 . CLOSE_SQUARE_BRACKET VARS_F

    CLOSE_SQUARE_BRACKET shift and go to state 166


state 118

    (82) ASIGNACION -> ID addStackO ASIGNACION_A . ASIGNACION_C SEMICOLON quad
    (91) ASIGNACION_C -> . EQUAL add_equal EXPRESIONESVARIAS
    (92) ASIGNACION_C -> . EQUAL CTE_STRING

    EQUAL           shift and go to state 168

    ASIGNACION_C                   shift and go to state 167

state 119

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 169
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 120

    (86) ASIGNACION_A -> EMPTY .

    EQUAL           reduce using rule 86 (ASIGNACION_A -> EMPTY .)


state 121

    (78) NOMBRAR -> ID POINT NOMBRAR_A . OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 171


state 122

    (118) COLOR -> ID POINT COLOR_KEYWORD . OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 172


state 123

    (168) PGraph -> ID POINT CREATEG . OPEN_PARENTHESIS PLOT_C

    OPEN_PARENTHESIS shift and go to state 173


state 124

    (169) PPie -> ID POINT CREATEPC . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 174


state 125

    (170) PGBarras -> ID POINT CREATEGB . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 175


state 126

    (171) PGBarrasHor -> ID POINT CREATEGBH . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 176


state 127

    (172) PDona -> ID POINT CREATED . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 177


state 128

    (173) PRadar -> ID POINT CREATER . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 178


state 129

    (174) PVenn -> ID POINT CREATEV . OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 179


state 130

    (175) PLOT_B -> ID POINT CREATEN . OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    OPEN_PARENTHESIS shift and go to state 180


state 131

    (79) NOMBRAR_A -> NAME .

    OPEN_PARENTHESIS reduce using rule 79 (NOMBRAR_A -> NAME .)


state 132

    (80) NOMBRAR_A -> NAMEX .

    OPEN_PARENTHESIS reduce using rule 80 (NOMBRAR_A -> NAMEX .)


state 133

    (81) NOMBRAR_A -> NAMEY .

    OPEN_PARENTHESIS reduce using rule 81 (NOMBRAR_A -> NAMEY .)


state 134

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS . LLAMADAMODULO_C gosub
    (74) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 181
    EXP                            shift and go to state 182
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 135

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    CLOSE_PARENTHESIS shift and go to state 183


state 136

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION . EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 184
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 137

    (82) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (84) addStackO -> .

    OPEN_SQUARE_BRACKET reduce using rule 84 (addStackO -> .)
    EQUAL           reduce using rule 84 (addStackO -> .)

    addStackO                      shift and go to state 83

state 138

    (103) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    CLOSE_PARENTHESIS shift and go to state 185


state 139

    (197) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .

    ID              reduce using rule 197 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    IF              reduce using rule 197 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    FOR_KEYWORD     reduce using rule 197 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    WHILE_KEYWORD   reduce using rule 197 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    PRINT_KEYWORD   reduce using rule 197 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    INPUT_KEYWORD   reduce using rule 197 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    RETURN          reduce using rule 197 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    CLOSE_BRACKET   reduce using rule 197 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)


state 140

    (198) PRINT_A -> PRINT_B . CLOSE_PARENTHESIS print_quad SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 186


state 141

    (199) PRINT_B -> CTE_STRING . add_string PRINT_C
    (202) add_string -> .

    CONCATENATE     reduce using rule 202 (add_string -> .)
    CLOSE_PARENTHESIS reduce using rule 202 (add_string -> .)

    add_string                     shift and go to state 187

state 142

    (200) PRINT_B -> EXPRESIONESVARIAS . add_temp PRINT_C
    (201) add_temp -> .

    CONCATENATE     reduce using rule 201 (add_temp -> .)
    CLOSE_PARENTHESIS reduce using rule 201 (add_temp -> .)

    add_temp                       shift and go to state 188

state 143

    (154) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID . add_inputid INPUT_A SEMICOLON quad_input
    (155) add_inputid -> .

    OPEN_SQUARE_BRACKET reduce using rule 155 (add_inputid -> .)
    SEMICOLON       reduce using rule 155 (add_inputid -> .)

    add_inputid                    shift and go to state 189

state 144

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS return_quad . SEMICOLON

    SEMICOLON       shift and go to state 190


state 145

    (214) EXPRESIONESVARIAS -> NOT EV_C .

    SEMICOLON       reduce using rule 214 (EXPRESIONESVARIAS -> NOT EV_C .)
    CLOSE_PARENTHESIS reduce using rule 214 (EXPRESIONESVARIAS -> NOT EV_C .)
    CONCATENATE     reduce using rule 214 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_INTEGER     reduce using rule 214 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_FLOAT       reduce using rule 214 (EXPRESIONESVARIAS -> NOT EV_C .)
    TRUE            reduce using rule 214 (EXPRESIONESVARIAS -> NOT EV_C .)
    FALSE           reduce using rule 214 (EXPRESIONESVARIAS -> NOT EV_C .)
    ID              reduce using rule 214 (EXPRESIONESVARIAS -> NOT EV_C .)


state 146

    (216) EV_C -> EXP_RELOP EV_B .

    SEMICOLON       reduce using rule 216 (EV_C -> EXP_RELOP EV_B .)
    CLOSE_PARENTHESIS reduce using rule 216 (EV_C -> EXP_RELOP EV_B .)
    CONCATENATE     reduce using rule 216 (EV_C -> EXP_RELOP EV_B .)
    CTE_INTEGER     reduce using rule 216 (EV_C -> EXP_RELOP EV_B .)
    CTE_FLOAT       reduce using rule 216 (EV_C -> EXP_RELOP EV_B .)
    TRUE            reduce using rule 216 (EV_C -> EXP_RELOP EV_B .)
    FALSE           reduce using rule 216 (EV_C -> EXP_RELOP EV_B .)
    ID              reduce using rule 216 (EV_C -> EXP_RELOP EV_B .)


state 147

    (217) EV_B -> AND . add_ev EV_C
    (220) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 220 (add_ev -> .)
    PLUS            reduce using rule 220 (add_ev -> .)
    MINS            reduce using rule 220 (add_ev -> .)
    CTE_INTEGER     reduce using rule 220 (add_ev -> .)
    CTE_FLOAT       reduce using rule 220 (add_ev -> .)
    TRUE            reduce using rule 220 (add_ev -> .)
    FALSE           reduce using rule 220 (add_ev -> .)
    ID              reduce using rule 220 (add_ev -> .)
    AND             reduce using rule 220 (add_ev -> .)
    OR              reduce using rule 220 (add_ev -> .)
    RELOP           reduce using rule 220 (add_ev -> .)
    TIMES           reduce using rule 220 (add_ev -> .)
    DIVIDE          reduce using rule 220 (add_ev -> .)
    SEMICOLON       reduce using rule 220 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 220 (add_ev -> .)
    CONCATENATE     reduce using rule 220 (add_ev -> .)

    add_ev                         shift and go to state 191

state 148

    (218) EV_B -> OR . add_ev EV_C
    (220) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 220 (add_ev -> .)
    PLUS            reduce using rule 220 (add_ev -> .)
    MINS            reduce using rule 220 (add_ev -> .)
    CTE_INTEGER     reduce using rule 220 (add_ev -> .)
    CTE_FLOAT       reduce using rule 220 (add_ev -> .)
    TRUE            reduce using rule 220 (add_ev -> .)
    FALSE           reduce using rule 220 (add_ev -> .)
    ID              reduce using rule 220 (add_ev -> .)
    AND             reduce using rule 220 (add_ev -> .)
    OR              reduce using rule 220 (add_ev -> .)
    RELOP           reduce using rule 220 (add_ev -> .)
    TIMES           reduce using rule 220 (add_ev -> .)
    DIVIDE          reduce using rule 220 (add_ev -> .)
    SEMICOLON       reduce using rule 220 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 220 (add_ev -> .)
    CONCATENATE     reduce using rule 220 (add_ev -> .)

    add_ev                         shift and go to state 192

state 149

    (219) EV_B -> EMPTY .

    SEMICOLON       reduce using rule 219 (EV_B -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 219 (EV_B -> EMPTY .)
    CONCATENATE     reduce using rule 219 (EV_B -> EMPTY .)
    CTE_INTEGER     reduce using rule 219 (EV_B -> EMPTY .)
    CTE_FLOAT       reduce using rule 219 (EV_B -> EMPTY .)
    TRUE            reduce using rule 219 (EV_B -> EMPTY .)
    FALSE           reduce using rule 219 (EV_B -> EMPTY .)
    ID              reduce using rule 219 (EV_B -> EMPTY .)


state 150

    (221) EXP_RELOP -> EXP EXP_RELOP_A .

    AND             reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OR              reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    SEMICOLON       reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_PARENTHESIS reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CONCATENATE     reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_INTEGER     reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_FLOAT       reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    TRUE            reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    FALSE           reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)
    ID              reduce using rule 221 (EXP_RELOP -> EXP EXP_RELOP_A .)


state 151

    (223) EXP_RELOP_A -> RELOP . add_relop EXP
    (225) add_relop -> .

    OPEN_PARENTHESIS reduce using rule 225 (add_relop -> .)
    PLUS            reduce using rule 225 (add_relop -> .)
    MINS            reduce using rule 225 (add_relop -> .)
    CTE_INTEGER     reduce using rule 225 (add_relop -> .)
    CTE_FLOAT       reduce using rule 225 (add_relop -> .)
    TRUE            reduce using rule 225 (add_relop -> .)
    FALSE           reduce using rule 225 (add_relop -> .)
    ID              reduce using rule 225 (add_relop -> .)
    TIMES           reduce using rule 225 (add_relop -> .)
    DIVIDE          reduce using rule 225 (add_relop -> .)
    AND             reduce using rule 225 (add_relop -> .)
    OR              reduce using rule 225 (add_relop -> .)
    SEMICOLON       reduce using rule 225 (add_relop -> .)
    CLOSE_PARENTHESIS reduce using rule 225 (add_relop -> .)
    CONCATENATE     reduce using rule 225 (add_relop -> .)

    add_relop                      shift and go to state 193

state 152

    (224) EXP_RELOP_A -> EMPTY .

    AND             reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    OR              reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    SEMICOLON       reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    CONCATENATE     reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    TRUE            reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    FALSE           reduce using rule 224 (EXP_RELOP_A -> EMPTY .)
    ID              reduce using rule 224 (EXP_RELOP_A -> EMPTY .)


state 153

    (106) EXP -> TERMINO pop_exp . EXP_A
    (108) EXP_A -> . PLUS append_operator EXP
    (109) EXP_A -> . MINS append_operator EXP
    (110) EXP_A -> . EMPTY
    (226) EMPTY -> .

    PLUS            shift and go to state 195
    MINS            shift and go to state 196
    RELOP           reduce using rule 226 (EMPTY -> .)
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 226 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 226 (EMPTY -> .)
    TRUE            reduce using rule 226 (EMPTY -> .)
    FALSE           reduce using rule 226 (EMPTY -> .)
    ID              reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)

    EXP_A                          shift and go to state 194
    EMPTY                          shift and go to state 197

state 154

    (112) TERMINO -> FACTOR pop_term . TERMINO_A
    (114) TERMINO_A -> . TIMES add_operator TERMINO
    (115) TERMINO_A -> . DIVIDE add_operator TERMINO
    (116) TERMINO_A -> . EMPTY
    (226) EMPTY -> .

    TIMES           shift and go to state 199
    DIVIDE          shift and go to state 200
    PLUS            reduce using rule 226 (EMPTY -> .)
    MINS            reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 226 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 226 (EMPTY -> .)
    TRUE            reduce using rule 226 (EMPTY -> .)
    FALSE           reduce using rule 226 (EMPTY -> .)
    ID              reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)

    TERMINO_A                      shift and go to state 198
    EMPTY                          shift and go to state 201

state 155

    (126) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 202


state 156

    (131) FACTOR_B -> EXPRESIONESVARIAS . FACTOR_C
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

    FACTOR_C                       shift and go to state 203
    VARS_CTE                       shift and go to state 104

state 157

    (127) FACTOR_A -> PLUS FACTOR_C .

    TIMES           reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    DIVIDE          reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    PLUS            reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    MINS            reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    RELOP           reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    AND             reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    OR              reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    SEMICOLON       reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    CONCATENATE     reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_INTEGER     reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_FLOAT       reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    TRUE            reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    FALSE           reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    ID              reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    COMMA           reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    IF              reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    RETURN          reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 127 (FACTOR_A -> PLUS FACTOR_C .)


state 158

    (128) FACTOR_A -> MINS FACTOR_C .

    TIMES           reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    DIVIDE          reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    PLUS            reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    MINS            reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    RELOP           reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    AND             reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    OR              reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    SEMICOLON       reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    CONCATENATE     reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    CTE_INTEGER     reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    CTE_FLOAT       reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    TRUE            reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    FALSE           reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    ID              reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    COMMA           reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    IF              reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    RETURN          reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 128 (FACTOR_A -> MINS FACTOR_C .)


state 159

    (133) VARS_CTE -> CTE_INTEGER append_cte_int .

    TIMES           reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    DIVIDE          reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    PLUS            reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    MINS            reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    RELOP           reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    AND             reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    OR              reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    SEMICOLON       reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_PARENTHESIS reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CONCATENATE     reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CTE_INTEGER     reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CTE_FLOAT       reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    TRUE            reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    FALSE           reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    ID              reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_SQUARE_BRACKET reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    COMMA           reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    IF              reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    FOR_KEYWORD     reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    WHILE_KEYWORD   reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    PRINT_KEYWORD   reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    INPUT_KEYWORD   reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    RETURN          reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)
    CLOSE_BRACKET   reduce using rule 133 (VARS_CTE -> CTE_INTEGER append_cte_int .)


state 160

    (134) VARS_CTE -> CTE_FLOAT append_cte_float .

    TIMES           reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    DIVIDE          reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    PLUS            reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    MINS            reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    RELOP           reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    AND             reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    OR              reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    SEMICOLON       reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_PARENTHESIS reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CONCATENATE     reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CTE_INTEGER     reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CTE_FLOAT       reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    TRUE            reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    FALSE           reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    ID              reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_SQUARE_BRACKET reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    COMMA           reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    IF              reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    FOR_KEYWORD     reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    WHILE_KEYWORD   reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    PRINT_KEYWORD   reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    INPUT_KEYWORD   reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    RETURN          reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)
    CLOSE_BRACKET   reduce using rule 134 (VARS_CTE -> CTE_FLOAT append_cte_float .)


state 161

    (135) VARS_CTE -> TRUE append_bool .

    TIMES           reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    DIVIDE          reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    PLUS            reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    MINS            reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    RELOP           reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    AND             reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    OR              reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    SEMICOLON       reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    CLOSE_PARENTHESIS reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    CONCATENATE     reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    CTE_INTEGER     reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    CTE_FLOAT       reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    TRUE            reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    FALSE           reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    ID              reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    CLOSE_SQUARE_BRACKET reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    COMMA           reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    IF              reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    FOR_KEYWORD     reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    WHILE_KEYWORD   reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    PRINT_KEYWORD   reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    INPUT_KEYWORD   reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    RETURN          reduce using rule 135 (VARS_CTE -> TRUE append_bool .)
    CLOSE_BRACKET   reduce using rule 135 (VARS_CTE -> TRUE append_bool .)


state 162

    (136) VARS_CTE -> FALSE append_bool .

    TIMES           reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    DIVIDE          reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    PLUS            reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    MINS            reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    RELOP           reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    AND             reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    OR              reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    SEMICOLON       reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    CLOSE_PARENTHESIS reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    CONCATENATE     reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    CTE_INTEGER     reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    CTE_FLOAT       reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    TRUE            reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    FALSE           reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    ID              reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    CLOSE_SQUARE_BRACKET reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    COMMA           reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    IF              reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    FOR_KEYWORD     reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    WHILE_KEYWORD   reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    PRINT_KEYWORD   reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    INPUT_KEYWORD   reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    RETURN          reduce using rule 136 (VARS_CTE -> FALSE append_bool .)
    CLOSE_BRACKET   reduce using rule 136 (VARS_CTE -> FALSE append_bool .)


state 163

    (137) VARS_CTE -> ID append_id .
    (138) VARS_CTE -> ID append_id . OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> ID append_id . OPEN_PARENTHESIS VARS_CTE_B

    TIMES           reduce using rule 137 (VARS_CTE -> ID append_id .)
    DIVIDE          reduce using rule 137 (VARS_CTE -> ID append_id .)
    PLUS            reduce using rule 137 (VARS_CTE -> ID append_id .)
    MINS            reduce using rule 137 (VARS_CTE -> ID append_id .)
    RELOP           reduce using rule 137 (VARS_CTE -> ID append_id .)
    AND             reduce using rule 137 (VARS_CTE -> ID append_id .)
    OR              reduce using rule 137 (VARS_CTE -> ID append_id .)
    SEMICOLON       reduce using rule 137 (VARS_CTE -> ID append_id .)
    CLOSE_PARENTHESIS reduce using rule 137 (VARS_CTE -> ID append_id .)
    CONCATENATE     reduce using rule 137 (VARS_CTE -> ID append_id .)
    CTE_INTEGER     reduce using rule 137 (VARS_CTE -> ID append_id .)
    CTE_FLOAT       reduce using rule 137 (VARS_CTE -> ID append_id .)
    TRUE            reduce using rule 137 (VARS_CTE -> ID append_id .)
    FALSE           reduce using rule 137 (VARS_CTE -> ID append_id .)
    ID              reduce using rule 137 (VARS_CTE -> ID append_id .)
    CLOSE_SQUARE_BRACKET reduce using rule 137 (VARS_CTE -> ID append_id .)
    COMMA           reduce using rule 137 (VARS_CTE -> ID append_id .)
    IF              reduce using rule 137 (VARS_CTE -> ID append_id .)
    FOR_KEYWORD     reduce using rule 137 (VARS_CTE -> ID append_id .)
    WHILE_KEYWORD   reduce using rule 137 (VARS_CTE -> ID append_id .)
    PRINT_KEYWORD   reduce using rule 137 (VARS_CTE -> ID append_id .)
    INPUT_KEYWORD   reduce using rule 137 (VARS_CTE -> ID append_id .)
    RETURN          reduce using rule 137 (VARS_CTE -> ID append_id .)
    CLOSE_BRACKET   reduce using rule 137 (VARS_CTE -> ID append_id .)
    OPEN_SQUARE_BRACKET shift and go to state 204
    OPEN_PARENTHESIS shift and go to state 205


state 164

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars . change_scope endproc
    (54) change_scope -> .

    MODULE          reduce using rule 54 (change_scope -> .)
    MAIN            reduce using rule 54 (change_scope -> .)

    change_scope                   shift and go to state 206

state 165

    (60) MODULO_C -> TIPO_P ID . add_variable_m MODULO_B MODULO_D
    (61) add_variable_m -> .

    COMMA           reduce using rule 61 (add_variable_m -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (add_variable_m -> .)
    MODULE          reduce using rule 61 (add_variable_m -> .)
    MAIN            reduce using rule 61 (add_variable_m -> .)

    add_variable_m                 shift and go to state 207

state 166

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET . VARS_F
    (16) VARS_F -> . OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET
    (17) VARS_F -> . EMPTY
    (226) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 208
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)

    VARS_F                         shift and go to state 209
    EMPTY                          shift and go to state 210

state 167

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C . SEMICOLON quad

    SEMICOLON       shift and go to state 211


state 168

    (91) ASIGNACION_C -> EQUAL . add_equal EXPRESIONESVARIAS
    (92) ASIGNACION_C -> EQUAL . CTE_STRING
    (93) add_equal -> .

    CTE_STRING      shift and go to state 213
    NOT             reduce using rule 93 (add_equal -> .)
    OPEN_PARENTHESIS reduce using rule 93 (add_equal -> .)
    PLUS            reduce using rule 93 (add_equal -> .)
    MINS            reduce using rule 93 (add_equal -> .)
    CTE_INTEGER     reduce using rule 93 (add_equal -> .)
    CTE_FLOAT       reduce using rule 93 (add_equal -> .)
    TRUE            reduce using rule 93 (add_equal -> .)
    FALSE           reduce using rule 93 (add_equal -> .)
    ID              reduce using rule 93 (add_equal -> .)
    AND             reduce using rule 93 (add_equal -> .)
    OR              reduce using rule 93 (add_equal -> .)
    RELOP           reduce using rule 93 (add_equal -> .)
    TIMES           reduce using rule 93 (add_equal -> .)
    DIVIDE          reduce using rule 93 (add_equal -> .)
    SEMICOLON       reduce using rule 93 (add_equal -> .)

    add_equal                      shift and go to state 212

state 169

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B

    CLOSE_SQUARE_BRACKET shift and go to state 214


state 170

    (130) FACTOR_A -> EMPTY .

    TIMES           reduce using rule 130 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 130 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 130 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 130 (FACTOR_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 130 (FACTOR_A -> EMPTY .)
    COMMA           reduce using rule 130 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 130 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 130 (FACTOR_A -> EMPTY .)
    IF              reduce using rule 130 (FACTOR_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 130 (FACTOR_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 130 (FACTOR_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 130 (FACTOR_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 130 (FACTOR_A -> EMPTY .)
    RETURN          reduce using rule 130 (FACTOR_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 130 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 130 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 130 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 130 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 130 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 130 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 130 (FACTOR_A -> EMPTY .)
    TRUE            reduce using rule 130 (FACTOR_A -> EMPTY .)
    FALSE           reduce using rule 130 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 130 (FACTOR_A -> EMPTY .)


state 171

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 215


state 172

    (118) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS . COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (119) COLOR_A -> . COLOR_RED
    (120) COLOR_A -> . COLOR_BLACK
    (121) COLOR_A -> . COLOR_BLUE
    (122) COLOR_A -> . COLOR_PURPLE
    (123) COLOR_A -> . COLOR_GREEN
    (124) COLOR_A -> . COLOR_ORANGE

    COLOR_RED       shift and go to state 217
    COLOR_BLACK     shift and go to state 218
    COLOR_BLUE      shift and go to state 219
    COLOR_PURPLE    shift and go to state 220
    COLOR_GREEN     shift and go to state 221
    COLOR_ORANGE    shift and go to state 222

    COLOR_A                        shift and go to state 216

state 173

    (168) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS . PLOT_C
    (176) PLOT_C -> . PLOT_I CLOSE_PARENTHESIS SEMICOLON
    (177) PLOT_I -> . CTE_INTEGER PLOT_D
    (178) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 225
    CTE_FLOAT       shift and go to state 226

    PLOT_C                         shift and go to state 223
    PLOT_I                         shift and go to state 224

state 174

    (169) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS . PLOT_E
    (181) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (182) PLOT_F -> . CTE_INTEGER PLOT_J
    (183) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 229
    CTE_FLOAT       shift and go to state 230

    PLOT_E                         shift and go to state 227
    PLOT_F                         shift and go to state 228

state 175

    (170) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS . PLOT_E
    (181) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (182) PLOT_F -> . CTE_INTEGER PLOT_J
    (183) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 229
    CTE_FLOAT       shift and go to state 230

    PLOT_E                         shift and go to state 231
    PLOT_F                         shift and go to state 228

state 176

    (171) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS . PLOT_E
    (181) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (182) PLOT_F -> . CTE_INTEGER PLOT_J
    (183) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 229
    CTE_FLOAT       shift and go to state 230

    PLOT_E                         shift and go to state 232
    PLOT_F                         shift and go to state 228

state 177

    (172) PDona -> ID POINT CREATED OPEN_PARENTHESIS . PLOT_E
    (181) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (182) PLOT_F -> . CTE_INTEGER PLOT_J
    (183) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 229
    CTE_FLOAT       shift and go to state 230

    PLOT_E                         shift and go to state 233
    PLOT_F                         shift and go to state 228

state 178

    (173) PRadar -> ID POINT CREATER OPEN_PARENTHESIS . PLOT_E
    (181) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (182) PLOT_F -> . CTE_INTEGER PLOT_J
    (183) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 229
    CTE_FLOAT       shift and go to state 230

    PLOT_E                         shift and go to state 234
    PLOT_F                         shift and go to state 228

state 179

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS . CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 235


state 180

    (175) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS . OPEN_SQUARE_BRACKET PLOT_M

    OPEN_SQUARE_BRACKET shift and go to state 236


state 181

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C . gosub
    (69) gosub -> .

    ID              reduce using rule 69 (gosub -> .)
    IF              reduce using rule 69 (gosub -> .)
    FOR_KEYWORD     reduce using rule 69 (gosub -> .)
    WHILE_KEYWORD   reduce using rule 69 (gosub -> .)
    PRINT_KEYWORD   reduce using rule 69 (gosub -> .)
    INPUT_KEYWORD   reduce using rule 69 (gosub -> .)
    RETURN          reduce using rule 69 (gosub -> .)
    CLOSE_BRACKET   reduce using rule 69 (gosub -> .)

    gosub                          shift and go to state 237

state 182

    (74) LLAMADAMODULO_C -> EXP . check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (75) check_types -> .

    COMMA           reduce using rule 75 (check_types -> .)
    CLOSE_PARENTHESIS reduce using rule 75 (check_types -> .)
    ID              reduce using rule 75 (check_types -> .)
    IF              reduce using rule 75 (check_types -> .)
    FOR_KEYWORD     reduce using rule 75 (check_types -> .)
    WHILE_KEYWORD   reduce using rule 75 (check_types -> .)
    PRINT_KEYWORD   reduce using rule 75 (check_types -> .)
    INPUT_KEYWORD   reduce using rule 75 (check_types -> .)
    RETURN          reduce using rule 75 (check_types -> .)
    CLOSE_BRACKET   reduce using rule 75 (check_types -> .)

    check_types                    shift and go to state 238

state 183

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . check_bool BLOQUE CONDICION_A fill_end
    (96) check_bool -> .

    OPEN_BRACKET    reduce using rule 96 (check_bool -> .)

    check_bool                     shift and go to state 239

state 184

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS . bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (102) bool_for -> .

    SEMICOLON       reduce using rule 102 (bool_for -> .)

    bool_for                       shift and go to state 240

state 185

    (103) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . bool_while BLOQUE goto_while
    (105) bool_while -> .

    OPEN_BRACKET    reduce using rule 105 (bool_while -> .)

    bool_while                     shift and go to state 241

state 186

    (198) PRINT_A -> PRINT_B CLOSE_PARENTHESIS . print_quad SEMICOLON
    (203) print_quad -> .

    SEMICOLON       reduce using rule 203 (print_quad -> .)

    print_quad                     shift and go to state 242

state 187

    (199) PRINT_B -> CTE_STRING add_string . PRINT_C
    (206) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (207) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (208) PRINT_C -> . EMPTY
    (226) EMPTY -> .

    CONCATENATE     shift and go to state 244
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)

    PRINT_C                        shift and go to state 243
    EMPTY                          shift and go to state 245

state 188

    (200) PRINT_B -> EXPRESIONESVARIAS add_temp . PRINT_C
    (206) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (207) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (208) PRINT_C -> . EMPTY
    (226) EMPTY -> .

    CONCATENATE     shift and go to state 244
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)

    PRINT_C                        shift and go to state 246
    EMPTY                          shift and go to state 245

state 189

    (154) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid . INPUT_A SEMICOLON quad_input
    (157) INPUT_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
    (158) INPUT_A -> . EMPTY
    (226) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 248
    SEMICOLON       reduce using rule 226 (EMPTY -> .)

    INPUT_A                        shift and go to state 247
    EMPTY                          shift and go to state 249

state 190

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .

    ID              reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    IF              reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    RETURN          reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)


state 191

    (217) EV_B -> AND add_ev . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EV_C                           shift and go to state 250
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 192

    (218) EV_B -> OR add_ev . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EV_C                           shift and go to state 251
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 193

    (223) EXP_RELOP_A -> RELOP add_relop . EXP
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 252
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 194

    (106) EXP -> TERMINO pop_exp EXP_A .

    RELOP           reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    AND             reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    OR              reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    SEMICOLON       reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_PARENTHESIS reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    CONCATENATE     reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    CTE_INTEGER     reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    CTE_FLOAT       reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    TRUE            reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    FALSE           reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    ID              reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    COMMA           reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    IF              reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    FOR_KEYWORD     reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    WHILE_KEYWORD   reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    PRINT_KEYWORD   reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    INPUT_KEYWORD   reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    RETURN          reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_BRACKET   reduce using rule 106 (EXP -> TERMINO pop_exp EXP_A .)


state 195

    (108) EXP_A -> PLUS . append_operator EXP
    (111) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 111 (append_operator -> .)
    PLUS            reduce using rule 111 (append_operator -> .)
    MINS            reduce using rule 111 (append_operator -> .)
    CTE_INTEGER     reduce using rule 111 (append_operator -> .)
    CTE_FLOAT       reduce using rule 111 (append_operator -> .)
    TRUE            reduce using rule 111 (append_operator -> .)
    FALSE           reduce using rule 111 (append_operator -> .)
    ID              reduce using rule 111 (append_operator -> .)
    TIMES           reduce using rule 111 (append_operator -> .)
    DIVIDE          reduce using rule 111 (append_operator -> .)
    RELOP           reduce using rule 111 (append_operator -> .)
    AND             reduce using rule 111 (append_operator -> .)
    OR              reduce using rule 111 (append_operator -> .)
    SEMICOLON       reduce using rule 111 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 111 (append_operator -> .)
    CONCATENATE     reduce using rule 111 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 111 (append_operator -> .)
    COMMA           reduce using rule 111 (append_operator -> .)
    IF              reduce using rule 111 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 111 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 111 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 111 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 111 (append_operator -> .)
    RETURN          reduce using rule 111 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 111 (append_operator -> .)

    append_operator                shift and go to state 253

state 196

    (109) EXP_A -> MINS . append_operator EXP
    (111) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 111 (append_operator -> .)
    PLUS            reduce using rule 111 (append_operator -> .)
    MINS            reduce using rule 111 (append_operator -> .)
    CTE_INTEGER     reduce using rule 111 (append_operator -> .)
    CTE_FLOAT       reduce using rule 111 (append_operator -> .)
    TRUE            reduce using rule 111 (append_operator -> .)
    FALSE           reduce using rule 111 (append_operator -> .)
    ID              reduce using rule 111 (append_operator -> .)
    TIMES           reduce using rule 111 (append_operator -> .)
    DIVIDE          reduce using rule 111 (append_operator -> .)
    RELOP           reduce using rule 111 (append_operator -> .)
    AND             reduce using rule 111 (append_operator -> .)
    OR              reduce using rule 111 (append_operator -> .)
    SEMICOLON       reduce using rule 111 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 111 (append_operator -> .)
    CONCATENATE     reduce using rule 111 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 111 (append_operator -> .)
    COMMA           reduce using rule 111 (append_operator -> .)
    IF              reduce using rule 111 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 111 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 111 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 111 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 111 (append_operator -> .)
    RETURN          reduce using rule 111 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 111 (append_operator -> .)

    append_operator                shift and go to state 254

state 197

    (110) EXP_A -> EMPTY .

    RELOP           reduce using rule 110 (EXP_A -> EMPTY .)
    AND             reduce using rule 110 (EXP_A -> EMPTY .)
    OR              reduce using rule 110 (EXP_A -> EMPTY .)
    SEMICOLON       reduce using rule 110 (EXP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 110 (EXP_A -> EMPTY .)
    CONCATENATE     reduce using rule 110 (EXP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 110 (EXP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 110 (EXP_A -> EMPTY .)
    TRUE            reduce using rule 110 (EXP_A -> EMPTY .)
    FALSE           reduce using rule 110 (EXP_A -> EMPTY .)
    ID              reduce using rule 110 (EXP_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 110 (EXP_A -> EMPTY .)
    COMMA           reduce using rule 110 (EXP_A -> EMPTY .)
    IF              reduce using rule 110 (EXP_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 110 (EXP_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 110 (EXP_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 110 (EXP_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 110 (EXP_A -> EMPTY .)
    RETURN          reduce using rule 110 (EXP_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 110 (EXP_A -> EMPTY .)


state 198

    (112) TERMINO -> FACTOR pop_term TERMINO_A .

    PLUS            reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    MINS            reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RELOP           reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    AND             reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    OR              reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    SEMICOLON       reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_PARENTHESIS reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CONCATENATE     reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CTE_INTEGER     reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CTE_FLOAT       reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    TRUE            reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    FALSE           reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    ID              reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    COMMA           reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    IF              reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    FOR_KEYWORD     reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    WHILE_KEYWORD   reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    PRINT_KEYWORD   reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    INPUT_KEYWORD   reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RETURN          reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_BRACKET   reduce using rule 112 (TERMINO -> FACTOR pop_term TERMINO_A .)


state 199

    (114) TERMINO_A -> TIMES . add_operator TERMINO
    (117) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 117 (add_operator -> .)
    PLUS            reduce using rule 117 (add_operator -> .)
    MINS            reduce using rule 117 (add_operator -> .)
    CTE_INTEGER     reduce using rule 117 (add_operator -> .)
    CTE_FLOAT       reduce using rule 117 (add_operator -> .)
    TRUE            reduce using rule 117 (add_operator -> .)
    FALSE           reduce using rule 117 (add_operator -> .)
    ID              reduce using rule 117 (add_operator -> .)
    TIMES           reduce using rule 117 (add_operator -> .)
    DIVIDE          reduce using rule 117 (add_operator -> .)
    RELOP           reduce using rule 117 (add_operator -> .)
    AND             reduce using rule 117 (add_operator -> .)
    OR              reduce using rule 117 (add_operator -> .)
    SEMICOLON       reduce using rule 117 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 117 (add_operator -> .)
    CONCATENATE     reduce using rule 117 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 117 (add_operator -> .)
    COMMA           reduce using rule 117 (add_operator -> .)
    IF              reduce using rule 117 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 117 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 117 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 117 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 117 (add_operator -> .)
    RETURN          reduce using rule 117 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 117 (add_operator -> .)

    add_operator                   shift and go to state 255

state 200

    (115) TERMINO_A -> DIVIDE . add_operator TERMINO
    (117) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 117 (add_operator -> .)
    PLUS            reduce using rule 117 (add_operator -> .)
    MINS            reduce using rule 117 (add_operator -> .)
    CTE_INTEGER     reduce using rule 117 (add_operator -> .)
    CTE_FLOAT       reduce using rule 117 (add_operator -> .)
    TRUE            reduce using rule 117 (add_operator -> .)
    FALSE           reduce using rule 117 (add_operator -> .)
    ID              reduce using rule 117 (add_operator -> .)
    TIMES           reduce using rule 117 (add_operator -> .)
    DIVIDE          reduce using rule 117 (add_operator -> .)
    RELOP           reduce using rule 117 (add_operator -> .)
    AND             reduce using rule 117 (add_operator -> .)
    OR              reduce using rule 117 (add_operator -> .)
    SEMICOLON       reduce using rule 117 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 117 (add_operator -> .)
    CONCATENATE     reduce using rule 117 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 117 (add_operator -> .)
    COMMA           reduce using rule 117 (add_operator -> .)
    IF              reduce using rule 117 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 117 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 117 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 117 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 117 (add_operator -> .)
    RETURN          reduce using rule 117 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 117 (add_operator -> .)

    add_operator                   shift and go to state 256

state 201

    (116) TERMINO_A -> EMPTY .

    PLUS            reduce using rule 116 (TERMINO_A -> EMPTY .)
    MINS            reduce using rule 116 (TERMINO_A -> EMPTY .)
    RELOP           reduce using rule 116 (TERMINO_A -> EMPTY .)
    AND             reduce using rule 116 (TERMINO_A -> EMPTY .)
    OR              reduce using rule 116 (TERMINO_A -> EMPTY .)
    SEMICOLON       reduce using rule 116 (TERMINO_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 116 (TERMINO_A -> EMPTY .)
    CONCATENATE     reduce using rule 116 (TERMINO_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 116 (TERMINO_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 116 (TERMINO_A -> EMPTY .)
    TRUE            reduce using rule 116 (TERMINO_A -> EMPTY .)
    FALSE           reduce using rule 116 (TERMINO_A -> EMPTY .)
    ID              reduce using rule 116 (TERMINO_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 116 (TERMINO_A -> EMPTY .)
    COMMA           reduce using rule 116 (TERMINO_A -> EMPTY .)
    IF              reduce using rule 116 (TERMINO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 116 (TERMINO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 116 (TERMINO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 116 (TERMINO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 116 (TERMINO_A -> EMPTY .)
    RETURN          reduce using rule 116 (TERMINO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 116 (TERMINO_A -> EMPTY .)


state 202

    (126) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .

    TIMES           reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    MINS            reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    AND             reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    OR              reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CONCATENATE     reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    TRUE            reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    FALSE           reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    ID              reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    IF              reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 126 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)


state 203

    (131) FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .

    CLOSE_PARENTHESIS reduce using rule 131 (FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .)


state 204

    (138) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET . add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (147) add_SB -> .

    OPEN_PARENTHESIS reduce using rule 147 (add_SB -> .)
    PLUS            reduce using rule 147 (add_SB -> .)
    MINS            reduce using rule 147 (add_SB -> .)
    CTE_INTEGER     reduce using rule 147 (add_SB -> .)
    CTE_FLOAT       reduce using rule 147 (add_SB -> .)
    TRUE            reduce using rule 147 (add_SB -> .)
    FALSE           reduce using rule 147 (add_SB -> .)
    ID              reduce using rule 147 (add_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 147 (add_SB -> .)
    TIMES           reduce using rule 147 (add_SB -> .)
    DIVIDE          reduce using rule 147 (add_SB -> .)

    add_SB                         shift and go to state 257

state 205

    (139) VARS_CTE -> ID append_id OPEN_PARENTHESIS . VARS_CTE_B
    (149) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 258
    EXP                            shift and go to state 259
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 206

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope . endproc
    (53) endproc -> .

    MODULE          reduce using rule 53 (endproc -> .)
    MAIN            reduce using rule 53 (endproc -> .)

    endproc                        shift and go to state 260

state 207

    (60) MODULO_C -> TIPO_P ID add_variable_m . MODULO_B MODULO_D
    (58) MODULO_B -> . COMMA MODULO_C
    (59) MODULO_B -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 262
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    MODULE          reduce using rule 226 (EMPTY -> .)
    MAIN            reduce using rule 226 (EMPTY -> .)

    MODULO_B                       shift and go to state 261
    EMPTY                          shift and go to state 263

state 208

    (16) VARS_F -> OPEN_SQUARE_BRACKET . CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET

    CTE_INTEGER     shift and go to state 264


state 209

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .

    SEMICOLON       reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .)
    COMMA           reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .)


state 210

    (17) VARS_F -> EMPTY .

    SEMICOLON       reduce using rule 17 (VARS_F -> EMPTY .)
    COMMA           reduce using rule 17 (VARS_F -> EMPTY .)


state 211

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON . quad
    (83) quad -> .

    ID              reduce using rule 83 (quad -> .)
    IF              reduce using rule 83 (quad -> .)
    FOR_KEYWORD     reduce using rule 83 (quad -> .)
    WHILE_KEYWORD   reduce using rule 83 (quad -> .)
    PRINT_KEYWORD   reduce using rule 83 (quad -> .)
    INPUT_KEYWORD   reduce using rule 83 (quad -> .)
    RETURN          reduce using rule 83 (quad -> .)
    CLOSE_BRACKET   reduce using rule 83 (quad -> .)
    NOT             reduce using rule 83 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 83 (quad -> .)
    PLUS            reduce using rule 83 (quad -> .)
    MINS            reduce using rule 83 (quad -> .)
    CTE_INTEGER     reduce using rule 83 (quad -> .)
    CTE_FLOAT       reduce using rule 83 (quad -> .)
    TRUE            reduce using rule 83 (quad -> .)
    FALSE           reduce using rule 83 (quad -> .)
    SEMICOLON       reduce using rule 83 (quad -> .)
    AND             reduce using rule 83 (quad -> .)
    OR              reduce using rule 83 (quad -> .)
    RELOP           reduce using rule 83 (quad -> .)
    TIMES           reduce using rule 83 (quad -> .)
    DIVIDE          reduce using rule 83 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (quad -> .)

    quad                           shift and go to state 265

state 212

    (91) ASIGNACION_C -> EQUAL add_equal . EXPRESIONESVARIAS
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 266
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 213

    (92) ASIGNACION_C -> EQUAL CTE_STRING .

    SEMICOLON       reduce using rule 92 (ASIGNACION_C -> EQUAL CTE_STRING .)


state 214

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ver_arr ASIGNACION_B
    (87) ver_arr -> .

    OPEN_SQUARE_BRACKET reduce using rule 87 (ver_arr -> .)
    EQUAL           reduce using rule 87 (ver_arr -> .)

    ver_arr                        shift and go to state 267

state 215

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 268


state 216

    (118) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 269


state 217

    (119) COLOR_A -> COLOR_RED .

    CLOSE_PARENTHESIS reduce using rule 119 (COLOR_A -> COLOR_RED .)


state 218

    (120) COLOR_A -> COLOR_BLACK .

    CLOSE_PARENTHESIS reduce using rule 120 (COLOR_A -> COLOR_BLACK .)


state 219

    (121) COLOR_A -> COLOR_BLUE .

    CLOSE_PARENTHESIS reduce using rule 121 (COLOR_A -> COLOR_BLUE .)


state 220

    (122) COLOR_A -> COLOR_PURPLE .

    CLOSE_PARENTHESIS reduce using rule 122 (COLOR_A -> COLOR_PURPLE .)


state 221

    (123) COLOR_A -> COLOR_GREEN .

    CLOSE_PARENTHESIS reduce using rule 123 (COLOR_A -> COLOR_GREEN .)


state 222

    (124) COLOR_A -> COLOR_ORANGE .

    CLOSE_PARENTHESIS reduce using rule 124 (COLOR_A -> COLOR_ORANGE .)


state 223

    (168) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .

    ID              reduce using rule 168 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    IF              reduce using rule 168 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    FOR_KEYWORD     reduce using rule 168 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    WHILE_KEYWORD   reduce using rule 168 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    PRINT_KEYWORD   reduce using rule 168 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    INPUT_KEYWORD   reduce using rule 168 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    RETURN          reduce using rule 168 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    CLOSE_BRACKET   reduce using rule 168 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)


state 224

    (176) PLOT_C -> PLOT_I . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 270


state 225

    (177) PLOT_I -> CTE_INTEGER . PLOT_D
    (179) PLOT_D -> . COMMA PLOT_I
    (180) PLOT_D -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 272
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)

    PLOT_D                         shift and go to state 271
    EMPTY                          shift and go to state 273

state 226

    (178) PLOT_I -> CTE_FLOAT . PLOT_D
    (179) PLOT_D -> . COMMA PLOT_I
    (180) PLOT_D -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 272
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)

    PLOT_D                         shift and go to state 274
    EMPTY                          shift and go to state 273

state 227

    (169) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 169 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 169 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 169 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 169 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 169 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 169 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 169 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 169 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)


state 228

    (181) PLOT_E -> PLOT_F . SEMICOLON PLOT_G

    SEMICOLON       shift and go to state 275


state 229

    (182) PLOT_F -> CTE_INTEGER . PLOT_J
    (184) PLOT_J -> . COMMA PLOT_F
    (185) PLOT_J -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 277
    SEMICOLON       reduce using rule 226 (EMPTY -> .)

    PLOT_J                         shift and go to state 276
    EMPTY                          shift and go to state 278

state 230

    (183) PLOT_F -> CTE_FLOAT . PLOT_J
    (184) PLOT_J -> . COMMA PLOT_F
    (185) PLOT_J -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 277
    SEMICOLON       reduce using rule 226 (EMPTY -> .)

    PLOT_J                         shift and go to state 279
    EMPTY                          shift and go to state 278

state 231

    (170) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 170 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 170 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 170 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 170 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 170 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 170 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 170 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 170 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)


state 232

    (171) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 171 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 171 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 171 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 171 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 171 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 171 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 171 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 171 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)


state 233

    (172) PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 172 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 172 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 172 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 172 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 172 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 172 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 172 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 172 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)


state 234

    (173) PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 173 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 173 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 173 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 173 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 173 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 173 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 173 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 173 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)


state 235

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER . COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 280


state 236

    (175) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET . PLOT_M
    (190) PLOT_M -> . PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (191) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 283

    PLOT_M                         shift and go to state 281
    PLOT_N                         shift and go to state 282

state 237

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .

    ID              reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    IF              reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    FOR_KEYWORD     reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    WHILE_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    PRINT_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    INPUT_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    RETURN          reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    CLOSE_BRACKET   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)


state 238

    (74) LLAMADAMODULO_C -> EXP check_types . LLAMADAMODULO_A LLAMADAMODULO_D
    (71) LLAMADAMODULO_A -> . COMMA incK LLAMADAMODULO_C
    (72) LLAMADAMODULO_A -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 285
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    ID              reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)

    LLAMADAMODULO_A                shift and go to state 284
    EMPTY                          shift and go to state 286

state 239

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool . BLOQUE CONDICION_A fill_end
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 287

state 240

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for . SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    SEMICOLON       shift and go to state 288


state 241

    (103) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while . BLOQUE goto_while
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 289

state 242

    (198) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad . SEMICOLON

    SEMICOLON       shift and go to state 290


state 243

    (199) PRINT_B -> CTE_STRING add_string PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 199 (PRINT_B -> CTE_STRING add_string PRINT_C .)


state 244

    (206) PRINT_C -> CONCATENATE . EXPRESIONESVARIAS add_con PRINT_D
    (207) PRINT_C -> CONCATENATE . CTE_STRING add_exp PRINT_D
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 292
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 291
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 245

    (208) PRINT_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 208 (PRINT_C -> EMPTY .)


state 246

    (200) PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 200 (PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .)


state 247

    (154) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A . SEMICOLON quad_input

    SEMICOLON       shift and go to state 293


state 248

    (157) INPUT_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET INPUT_B
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 294
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 249

    (158) INPUT_A -> EMPTY .

    SEMICOLON       reduce using rule 158 (INPUT_A -> EMPTY .)


state 250

    (217) EV_B -> AND add_ev EV_C .

    SEMICOLON       reduce using rule 217 (EV_B -> AND add_ev EV_C .)
    CLOSE_PARENTHESIS reduce using rule 217 (EV_B -> AND add_ev EV_C .)
    CONCATENATE     reduce using rule 217 (EV_B -> AND add_ev EV_C .)
    CTE_INTEGER     reduce using rule 217 (EV_B -> AND add_ev EV_C .)
    CTE_FLOAT       reduce using rule 217 (EV_B -> AND add_ev EV_C .)
    TRUE            reduce using rule 217 (EV_B -> AND add_ev EV_C .)
    FALSE           reduce using rule 217 (EV_B -> AND add_ev EV_C .)
    ID              reduce using rule 217 (EV_B -> AND add_ev EV_C .)


state 251

    (218) EV_B -> OR add_ev EV_C .

    SEMICOLON       reduce using rule 218 (EV_B -> OR add_ev EV_C .)
    CLOSE_PARENTHESIS reduce using rule 218 (EV_B -> OR add_ev EV_C .)
    CONCATENATE     reduce using rule 218 (EV_B -> OR add_ev EV_C .)
    CTE_INTEGER     reduce using rule 218 (EV_B -> OR add_ev EV_C .)
    CTE_FLOAT       reduce using rule 218 (EV_B -> OR add_ev EV_C .)
    TRUE            reduce using rule 218 (EV_B -> OR add_ev EV_C .)
    FALSE           reduce using rule 218 (EV_B -> OR add_ev EV_C .)
    ID              reduce using rule 218 (EV_B -> OR add_ev EV_C .)


state 252

    (223) EXP_RELOP_A -> RELOP add_relop EXP .

    AND             reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    OR              reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    SEMICOLON       reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CLOSE_PARENTHESIS reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CONCATENATE     reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CTE_INTEGER     reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CTE_FLOAT       reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    TRUE            reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    FALSE           reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)
    ID              reduce using rule 223 (EXP_RELOP_A -> RELOP add_relop EXP .)


state 253

    (108) EXP_A -> PLUS append_operator . EXP
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 295
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 254

    (109) EXP_A -> MINS append_operator . EXP
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 296
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 255

    (114) TERMINO_A -> TIMES add_operator . TERMINO
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]

    TERMINO                        shift and go to state 297
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 256

    (115) TERMINO_A -> DIVIDE add_operator . TERMINO
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 226 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 226 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 226 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]

    TERMINO                        shift and go to state 298
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 257

    (138) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB . EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 299
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 258

    (139) VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .

    TIMES           reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    DIVIDE          reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    PLUS            reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    MINS            reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    RELOP           reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    AND             reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    OR              reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    SEMICOLON       reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CONCATENATE     reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_INTEGER     reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_FLOAT       reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    TRUE            reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    FALSE           reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    ID              reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_SQUARE_BRACKET reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    COMMA           reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    IF              reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    FOR_KEYWORD     reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    WHILE_KEYWORD   reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    PRINT_KEYWORD   reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    INPUT_KEYWORD   reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    RETURN          reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_BRACKET   reduce using rule 139 (VARS_CTE -> ID append_id OPEN_PARENTHESIS VARS_CTE_B .)


state 259

    (149) VARS_CTE_B -> EXP . VARS_CTE_C CLOSE_PARENTHESIS
    (150) VARS_CTE_C -> . COMMA VARS_CTE_B
    (151) VARS_CTE_C -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 301
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)

    VARS_CTE_C                     shift and go to state 300
    EMPTY                          shift and go to state 302

state 260

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .

    MODULE          reduce using rule 49 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)
    MAIN            reduce using rule 49 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)


state 261

    (60) MODULO_C -> TIPO_P ID add_variable_m MODULO_B . MODULO_D
    (62) MODULO_D -> . CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (63) MODULO_D -> . EMPTY
    (226) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 304
    MODULE          reduce using rule 226 (EMPTY -> .)
    MAIN            reduce using rule 226 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 226 (EMPTY -> .) ]

    MODULO_D                       shift and go to state 303
    EMPTY                          shift and go to state 305

state 262

    (58) MODULO_B -> COMMA . MODULO_C
    (60) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 306
    TIPO_P                         shift and go to state 112

state 263

    (59) MODULO_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 59 (MODULO_B -> EMPTY .)
    MODULE          reduce using rule 59 (MODULO_B -> EMPTY .)
    MAIN            reduce using rule 59 (MODULO_B -> EMPTY .)


state 264

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER . add_s2 CLOSE_SQUARE_BRACKET
    (18) add_s2 -> .

    CLOSE_SQUARE_BRACKET reduce using rule 18 (add_s2 -> .)

    add_s2                         shift and go to state 307

state 265

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .

    ID              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    IF              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FOR_KEYWORD     reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    WHILE_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PRINT_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    INPUT_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RETURN          reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_BRACKET   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    NOT             reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OPEN_PARENTHESIS reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PLUS            reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    MINS            reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_INTEGER     reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_FLOAT       reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TRUE            reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FALSE           reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    SEMICOLON       reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    AND             reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OR              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RELOP           reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TIMES           reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    DIVIDE          reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_PARENTHESIS reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)


state 266

    (91) ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .

    SEMICOLON       reduce using rule 91 (ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .)


state 267

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr . ASIGNACION_B
    (88) ASIGNACION_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat
    (89) ASIGNACION_B -> . EMPTY
    (226) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 308
    EQUAL           reduce using rule 226 (EMPTY -> .)

    ASIGNACION_B                   shift and go to state 309
    EMPTY                          shift and go to state 310

state 268

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 311


state 269

    (118) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 312


state 270

    (176) PLOT_C -> PLOT_I CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 313


state 271

    (177) PLOT_I -> CTE_INTEGER PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 177 (PLOT_I -> CTE_INTEGER PLOT_D .)


state 272

    (179) PLOT_D -> COMMA . PLOT_I
    (177) PLOT_I -> . CTE_INTEGER PLOT_D
    (178) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 225
    CTE_FLOAT       shift and go to state 226

    PLOT_I                         shift and go to state 314

state 273

    (180) PLOT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 180 (PLOT_D -> EMPTY .)


state 274

    (178) PLOT_I -> CTE_FLOAT PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 178 (PLOT_I -> CTE_FLOAT PLOT_D .)


state 275

    (181) PLOT_E -> PLOT_F SEMICOLON . PLOT_G
    (186) PLOT_G -> . PLOT_K CLOSE_PARENTHESIS SEMICOLON
    (187) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 317

    PLOT_G                         shift and go to state 315
    PLOT_K                         shift and go to state 316

state 276

    (182) PLOT_F -> CTE_INTEGER PLOT_J .

    SEMICOLON       reduce using rule 182 (PLOT_F -> CTE_INTEGER PLOT_J .)


state 277

    (184) PLOT_J -> COMMA . PLOT_F
    (182) PLOT_F -> . CTE_INTEGER PLOT_J
    (183) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 229
    CTE_FLOAT       shift and go to state 230

    PLOT_F                         shift and go to state 318

state 278

    (185) PLOT_J -> EMPTY .

    SEMICOLON       reduce using rule 185 (PLOT_J -> EMPTY .)


state 279

    (183) PLOT_F -> CTE_FLOAT PLOT_J .

    SEMICOLON       reduce using rule 183 (PLOT_F -> CTE_FLOAT PLOT_J .)


state 280

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA . CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 319


state 281

    (175) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .

    ID              reduce using rule 175 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    IF              reduce using rule 175 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    FOR_KEYWORD     reduce using rule 175 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    WHILE_KEYWORD   reduce using rule 175 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    PRINT_KEYWORD   reduce using rule 175 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    INPUT_KEYWORD   reduce using rule 175 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    RETURN          reduce using rule 175 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    CLOSE_BRACKET   reduce using rule 175 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)


state 282

    (190) PLOT_M -> PLOT_N . CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 320


state 283

    (191) PLOT_N -> CTE_STRING . PLOT_O
    (192) PLOT_O -> . COMMA PLOT_N
    (193) PLOT_O -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 322
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)

    PLOT_O                         shift and go to state 321
    EMPTY                          shift and go to state 323

state 284

    (74) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A . LLAMADAMODULO_D
    (76) LLAMADAMODULO_D -> . CLOSE_PARENTHESIS SEMICOLON
    (77) LLAMADAMODULO_D -> . EMPTY
    (226) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 325
    ID              reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 226 (EMPTY -> .) ]

    LLAMADAMODULO_D                shift and go to state 324
    EMPTY                          shift and go to state 326

state 285

    (71) LLAMADAMODULO_A -> COMMA . incK LLAMADAMODULO_C
    (73) incK -> .

    OPEN_PARENTHESIS reduce using rule 73 (incK -> .)
    PLUS            reduce using rule 73 (incK -> .)
    MINS            reduce using rule 73 (incK -> .)
    CTE_INTEGER     reduce using rule 73 (incK -> .)
    CTE_FLOAT       reduce using rule 73 (incK -> .)
    TRUE            reduce using rule 73 (incK -> .)
    FALSE           reduce using rule 73 (incK -> .)
    ID              reduce using rule 73 (incK -> .)
    COMMA           reduce using rule 73 (incK -> .)
    CLOSE_PARENTHESIS reduce using rule 73 (incK -> .)
    TIMES           reduce using rule 73 (incK -> .)
    DIVIDE          reduce using rule 73 (incK -> .)
    IF              reduce using rule 73 (incK -> .)
    FOR_KEYWORD     reduce using rule 73 (incK -> .)
    WHILE_KEYWORD   reduce using rule 73 (incK -> .)
    PRINT_KEYWORD   reduce using rule 73 (incK -> .)
    INPUT_KEYWORD   reduce using rule 73 (incK -> .)
    RETURN          reduce using rule 73 (incK -> .)
    CLOSE_BRACKET   reduce using rule 73 (incK -> .)

    incK                           shift and go to state 327

state 286

    (72) LLAMADAMODULO_A -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    ID              reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    IF              reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    RETURN          reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)


state 287

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE . CONDICION_A fill_end
    (97) CONDICION_A -> . gotoElse ELSE BLOQUE
    (98) CONDICION_A -> . EMPTY
    (99) gotoElse -> .
    (226) EMPTY -> .

    ELSE            reduce using rule 99 (gotoElse -> .)
    ID              reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)

    CONDICION_A                    shift and go to state 328
    gotoElse                       shift and go to state 329
    EMPTY                          shift and go to state 330

state 288

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON . ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 137

    ASIGNACION                     shift and go to state 331

state 289

    (103) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE . goto_while
    (104) goto_while -> .

    ID              reduce using rule 104 (goto_while -> .)
    IF              reduce using rule 104 (goto_while -> .)
    FOR_KEYWORD     reduce using rule 104 (goto_while -> .)
    WHILE_KEYWORD   reduce using rule 104 (goto_while -> .)
    PRINT_KEYWORD   reduce using rule 104 (goto_while -> .)
    INPUT_KEYWORD   reduce using rule 104 (goto_while -> .)
    RETURN          reduce using rule 104 (goto_while -> .)
    CLOSE_BRACKET   reduce using rule 104 (goto_while -> .)

    goto_while                     shift and go to state 332

state 290

    (198) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .

    ID              reduce using rule 198 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    IF              reduce using rule 198 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 198 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 198 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 198 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 198 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    RETURN          reduce using rule 198 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 198 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)


state 291

    (206) PRINT_C -> CONCATENATE EXPRESIONESVARIAS . add_con PRINT_D
    (210) add_con -> .

    CONCATENATE     reduce using rule 210 (add_con -> .)
    CLOSE_PARENTHESIS reduce using rule 210 (add_con -> .)

    add_con                        shift and go to state 333

state 292

    (207) PRINT_C -> CONCATENATE CTE_STRING . add_exp PRINT_D
    (209) add_exp -> .

    CONCATENATE     reduce using rule 209 (add_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 209 (add_exp -> .)

    add_exp                        shift and go to state 334

state 293

    (154) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON . quad_input
    (156) quad_input -> .

    ID              reduce using rule 156 (quad_input -> .)
    IF              reduce using rule 156 (quad_input -> .)
    FOR_KEYWORD     reduce using rule 156 (quad_input -> .)
    WHILE_KEYWORD   reduce using rule 156 (quad_input -> .)
    PRINT_KEYWORD   reduce using rule 156 (quad_input -> .)
    INPUT_KEYWORD   reduce using rule 156 (quad_input -> .)
    RETURN          reduce using rule 156 (quad_input -> .)
    CLOSE_BRACKET   reduce using rule 156 (quad_input -> .)

    quad_input                     shift and go to state 335

state 294

    (157) INPUT_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET INPUT_B

    CLOSE_SQUARE_BRACKET shift and go to state 336


state 295

    (108) EXP_A -> PLUS append_operator EXP .

    RELOP           reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    AND             reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    OR              reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    SEMICOLON       reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    CONCATENATE     reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    CTE_INTEGER     reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    CTE_FLOAT       reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    TRUE            reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    FALSE           reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    ID              reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    COMMA           reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    IF              reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    RETURN          reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 108 (EXP_A -> PLUS append_operator EXP .)


state 296

    (109) EXP_A -> MINS append_operator EXP .

    RELOP           reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    AND             reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    OR              reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    SEMICOLON       reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    CONCATENATE     reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    CTE_INTEGER     reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    CTE_FLOAT       reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    TRUE            reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    FALSE           reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    ID              reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    COMMA           reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    IF              reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    RETURN          reduce using rule 109 (EXP_A -> MINS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 109 (EXP_A -> MINS append_operator EXP .)


state 297

    (114) TERMINO_A -> TIMES add_operator TERMINO .

    PLUS            reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    MINS            reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    RELOP           reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    AND             reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    OR              reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    SEMICOLON       reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    CONCATENATE     reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    CTE_INTEGER     reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    CTE_FLOAT       reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    TRUE            reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    FALSE           reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    ID              reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    COMMA           reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    IF              reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    RETURN          reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 114 (TERMINO_A -> TIMES add_operator TERMINO .)


state 298

    (115) TERMINO_A -> DIVIDE add_operator TERMINO .

    PLUS            reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    MINS            reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RELOP           reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    AND             reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    OR              reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    SEMICOLON       reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CONCATENATE     reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CTE_INTEGER     reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CTE_FLOAT       reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    TRUE            reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    FALSE           reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    ID              reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    COMMA           reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    IF              reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RETURN          reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 115 (TERMINO_A -> DIVIDE add_operator TERMINO .)


state 299

    (138) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP . CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D

    CLOSE_SQUARE_BRACKET shift and go to state 337


state 300

    (149) VARS_CTE_B -> EXP VARS_CTE_C . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 338


state 301

    (150) VARS_CTE_C -> COMMA . VARS_CTE_B
    (149) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 339
    EXP                            shift and go to state 259
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 302

    (151) VARS_CTE_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 151 (VARS_CTE_C -> EMPTY .)


state 303

    (60) MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .

    MODULE          reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    MAIN            reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)


state 304

    (62) MODULO_D -> CLOSE_PARENTHESIS . param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (67) param_table -> .

    OPEN_BRACKET    reduce using rule 67 (param_table -> .)

    param_table                    shift and go to state 340

state 305

    (63) MODULO_D -> EMPTY .

    MODULE          reduce using rule 63 (MODULO_D -> EMPTY .)
    MAIN            reduce using rule 63 (MODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 63 (MODULO_D -> EMPTY .)


state 306

    (58) MODULO_B -> COMMA MODULO_C .

    CLOSE_PARENTHESIS reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)
    MODULE          reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)
    MAIN            reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)


state 307

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 341


state 308

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ver_mat
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 342
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 309

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B .

    EQUAL           reduce using rule 85 (ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B .)


state 310

    (89) ASIGNACION_B -> EMPTY .

    EQUAL           reduce using rule 89 (ASIGNACION_B -> EMPTY .)


state 311

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 312

    (118) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 118 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 118 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 118 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 118 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 118 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 118 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 118 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 118 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)


state 313

    (176) PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 176 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 176 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 176 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 176 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 176 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 176 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 176 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 176 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)


state 314

    (179) PLOT_D -> COMMA PLOT_I .

    CLOSE_PARENTHESIS reduce using rule 179 (PLOT_D -> COMMA PLOT_I .)


state 315

    (181) PLOT_E -> PLOT_F SEMICOLON PLOT_G .

    ID              reduce using rule 181 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    IF              reduce using rule 181 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    FOR_KEYWORD     reduce using rule 181 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    WHILE_KEYWORD   reduce using rule 181 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    PRINT_KEYWORD   reduce using rule 181 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    INPUT_KEYWORD   reduce using rule 181 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    RETURN          reduce using rule 181 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    CLOSE_BRACKET   reduce using rule 181 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)


state 316

    (186) PLOT_G -> PLOT_K . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 343


state 317

    (187) PLOT_K -> CTE_STRING . PLOT_H
    (188) PLOT_H -> . COMMA PLOT_K
    (189) PLOT_H -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 345
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)

    PLOT_H                         shift and go to state 344
    EMPTY                          shift and go to state 346

state 318

    (184) PLOT_J -> COMMA PLOT_F .

    SEMICOLON       reduce using rule 184 (PLOT_J -> COMMA PLOT_F .)


state 319

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER . COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 347


state 320

    (190) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET . SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 348


state 321

    (191) PLOT_N -> CTE_STRING PLOT_O .

    CLOSE_SQUARE_BRACKET reduce using rule 191 (PLOT_N -> CTE_STRING PLOT_O .)


state 322

    (192) PLOT_O -> COMMA . PLOT_N
    (191) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 283

    PLOT_N                         shift and go to state 349

state 323

    (193) PLOT_O -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 193 (PLOT_O -> EMPTY .)


state 324

    (74) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .

    ID              reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    IF              reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    FOR_KEYWORD     reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    WHILE_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    PRINT_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    INPUT_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    RETURN          reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_BRACKET   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)


state 325

    (76) LLAMADAMODULO_D -> CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 350


state 326

    (77) LLAMADAMODULO_D -> EMPTY .

    ID              reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    IF              reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    RETURN          reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)


state 327

    (71) LLAMADAMODULO_A -> COMMA incK . LLAMADAMODULO_C
    (74) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]
  ! ID              [ reduce using rule 226 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 351
    EXP                            shift and go to state 182
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 328

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A . fill_end
    (95) fill_end -> .

    ID              reduce using rule 95 (fill_end -> .)
    IF              reduce using rule 95 (fill_end -> .)
    FOR_KEYWORD     reduce using rule 95 (fill_end -> .)
    WHILE_KEYWORD   reduce using rule 95 (fill_end -> .)
    PRINT_KEYWORD   reduce using rule 95 (fill_end -> .)
    INPUT_KEYWORD   reduce using rule 95 (fill_end -> .)
    RETURN          reduce using rule 95 (fill_end -> .)
    CLOSE_BRACKET   reduce using rule 95 (fill_end -> .)

    fill_end                       shift and go to state 352

state 329

    (97) CONDICION_A -> gotoElse . ELSE BLOQUE

    ELSE            shift and go to state 353


state 330

    (98) CONDICION_A -> EMPTY .

    ID              reduce using rule 98 (CONDICION_A -> EMPTY .)
    IF              reduce using rule 98 (CONDICION_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 98 (CONDICION_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 98 (CONDICION_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 98 (CONDICION_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 98 (CONDICION_A -> EMPTY .)
    RETURN          reduce using rule 98 (CONDICION_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 98 (CONDICION_A -> EMPTY .)


state 331

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION . CLOSE_PARENTHESIS BLOQUE repeat_for

    CLOSE_PARENTHESIS shift and go to state 354


state 332

    (103) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .

    ID              reduce using rule 103 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    IF              reduce using rule 103 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    FOR_KEYWORD     reduce using rule 103 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    WHILE_KEYWORD   reduce using rule 103 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    PRINT_KEYWORD   reduce using rule 103 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    INPUT_KEYWORD   reduce using rule 103 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    RETURN          reduce using rule 103 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    CLOSE_BRACKET   reduce using rule 103 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)


state 333

    (206) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con . PRINT_D
    (211) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (212) PRINT_D -> . EMPTY
    (226) EMPTY -> .

    CONCATENATE     shift and go to state 355
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)

    PRINT_D                        shift and go to state 356
    EMPTY                          shift and go to state 357

state 334

    (207) PRINT_C -> CONCATENATE CTE_STRING add_exp . PRINT_D
    (211) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (212) PRINT_D -> . EMPTY
    (226) EMPTY -> .

    CONCATENATE     shift and go to state 355
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)

    PRINT_D                        shift and go to state 358
    EMPTY                          shift and go to state 357

state 335

    (154) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .

    ID              reduce using rule 154 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    IF              reduce using rule 154 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    FOR_KEYWORD     reduce using rule 154 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    WHILE_KEYWORD   reduce using rule 154 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    PRINT_KEYWORD   reduce using rule 154 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    INPUT_KEYWORD   reduce using rule 154 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    RETURN          reduce using rule 154 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    CLOSE_BRACKET   reduce using rule 154 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)


state 336

    (157) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . INPUT_B
    (159) INPUT_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET shift and go to state 359

    INPUT_B                        shift and go to state 360

state 337

    (138) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET . pop_SB ver_arr VARS_CTE_D
    (148) pop_SB -> .

    OPEN_SQUARE_BRACKET reduce using rule 148 (pop_SB -> .)
    TIMES           reduce using rule 148 (pop_SB -> .)
    DIVIDE          reduce using rule 148 (pop_SB -> .)
    PLUS            reduce using rule 148 (pop_SB -> .)
    MINS            reduce using rule 148 (pop_SB -> .)
    RELOP           reduce using rule 148 (pop_SB -> .)
    AND             reduce using rule 148 (pop_SB -> .)
    OR              reduce using rule 148 (pop_SB -> .)
    SEMICOLON       reduce using rule 148 (pop_SB -> .)
    CLOSE_PARENTHESIS reduce using rule 148 (pop_SB -> .)
    CONCATENATE     reduce using rule 148 (pop_SB -> .)
    CTE_INTEGER     reduce using rule 148 (pop_SB -> .)
    CTE_FLOAT       reduce using rule 148 (pop_SB -> .)
    TRUE            reduce using rule 148 (pop_SB -> .)
    FALSE           reduce using rule 148 (pop_SB -> .)
    ID              reduce using rule 148 (pop_SB -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 148 (pop_SB -> .)
    COMMA           reduce using rule 148 (pop_SB -> .)
    IF              reduce using rule 148 (pop_SB -> .)
    FOR_KEYWORD     reduce using rule 148 (pop_SB -> .)
    WHILE_KEYWORD   reduce using rule 148 (pop_SB -> .)
    PRINT_KEYWORD   reduce using rule 148 (pop_SB -> .)
    INPUT_KEYWORD   reduce using rule 148 (pop_SB -> .)
    RETURN          reduce using rule 148 (pop_SB -> .)
    CLOSE_BRACKET   reduce using rule 148 (pop_SB -> .)

    pop_SB                         shift and go to state 361

state 338

    (149) VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .

    TIMES           reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    MINS            reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    AND             reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    OR              reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CONCATENATE     reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    TRUE            reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    FALSE           reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    ID              reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    IF              reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 149 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)


state 339

    (150) VARS_CTE_C -> COMMA VARS_CTE_B .

    CLOSE_PARENTHESIS reduce using rule 150 (VARS_CTE_C -> COMMA VARS_CTE_B .)


state 340

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table . OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 362


state 341

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 16 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 16 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .)


state 342

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ver_mat

    CLOSE_SQUARE_BRACKET shift and go to state 363


state 343

    (186) PLOT_G -> PLOT_K CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 364


state 344

    (187) PLOT_K -> CTE_STRING PLOT_H .

    CLOSE_PARENTHESIS reduce using rule 187 (PLOT_K -> CTE_STRING PLOT_H .)


state 345

    (188) PLOT_H -> COMMA . PLOT_K
    (187) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 317

    PLOT_K                         shift and go to state 365

state 346

    (189) PLOT_H -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 189 (PLOT_H -> EMPTY .)


state 347

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA . CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 366


state 348

    (190) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON . OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    OPEN_SQUARE_BRACKET shift and go to state 367


state 349

    (192) PLOT_O -> COMMA PLOT_N .

    CLOSE_SQUARE_BRACKET reduce using rule 192 (PLOT_O -> COMMA PLOT_N .)


state 350

    (76) LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_PARENTHESIS reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)


state 351

    (71) LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .

    CLOSE_PARENTHESIS reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    ID              reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    IF              reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    FOR_KEYWORD     reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    WHILE_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    PRINT_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    INPUT_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    RETURN          reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    CLOSE_BRACKET   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)


state 352

    (94) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .

    ID              reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    IF              reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    FOR_KEYWORD     reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    WHILE_KEYWORD   reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    PRINT_KEYWORD   reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    INPUT_KEYWORD   reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    RETURN          reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    CLOSE_BRACKET   reduce using rule 94 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)


state 353

    (97) CONDICION_A -> gotoElse ELSE . BLOQUE
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 368

state 354

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS . BLOQUE repeat_for
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 369

state 355

    (211) PRINT_D -> CONCATENATE . add_sign PRINT_B
    (213) add_sign -> .

    CTE_STRING      reduce using rule 213 (add_sign -> .)
    NOT             reduce using rule 213 (add_sign -> .)
    OPEN_PARENTHESIS reduce using rule 213 (add_sign -> .)
    PLUS            reduce using rule 213 (add_sign -> .)
    MINS            reduce using rule 213 (add_sign -> .)
    CTE_INTEGER     reduce using rule 213 (add_sign -> .)
    CTE_FLOAT       reduce using rule 213 (add_sign -> .)
    TRUE            reduce using rule 213 (add_sign -> .)
    FALSE           reduce using rule 213 (add_sign -> .)
    ID              reduce using rule 213 (add_sign -> .)
    CONCATENATE     reduce using rule 213 (add_sign -> .)
    AND             reduce using rule 213 (add_sign -> .)
    OR              reduce using rule 213 (add_sign -> .)
    RELOP           reduce using rule 213 (add_sign -> .)
    TIMES           reduce using rule 213 (add_sign -> .)
    DIVIDE          reduce using rule 213 (add_sign -> .)
    CLOSE_PARENTHESIS reduce using rule 213 (add_sign -> .)

    add_sign                       shift and go to state 370

state 356

    (206) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 206 (PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .)


state 357

    (212) PRINT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 212 (PRINT_D -> EMPTY .)


state 358

    (207) PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 207 (PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .)


state 359

    (159) INPUT_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 371
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 360

    (157) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .

    SEMICOLON       reduce using rule 157 (INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .)


state 361

    (138) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB . ver_arr VARS_CTE_D
    (87) ver_arr -> .

    OPEN_SQUARE_BRACKET reduce using rule 87 (ver_arr -> .)
    TIMES           reduce using rule 87 (ver_arr -> .)
    DIVIDE          reduce using rule 87 (ver_arr -> .)
    PLUS            reduce using rule 87 (ver_arr -> .)
    MINS            reduce using rule 87 (ver_arr -> .)
    RELOP           reduce using rule 87 (ver_arr -> .)
    AND             reduce using rule 87 (ver_arr -> .)
    OR              reduce using rule 87 (ver_arr -> .)
    SEMICOLON       reduce using rule 87 (ver_arr -> .)
    CLOSE_PARENTHESIS reduce using rule 87 (ver_arr -> .)
    CONCATENATE     reduce using rule 87 (ver_arr -> .)
    CTE_INTEGER     reduce using rule 87 (ver_arr -> .)
    CTE_FLOAT       reduce using rule 87 (ver_arr -> .)
    TRUE            reduce using rule 87 (ver_arr -> .)
    FALSE           reduce using rule 87 (ver_arr -> .)
    ID              reduce using rule 87 (ver_arr -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 87 (ver_arr -> .)
    COMMA           reduce using rule 87 (ver_arr -> .)
    IF              reduce using rule 87 (ver_arr -> .)
    FOR_KEYWORD     reduce using rule 87 (ver_arr -> .)
    WHILE_KEYWORD   reduce using rule 87 (ver_arr -> .)
    PRINT_KEYWORD   reduce using rule 87 (ver_arr -> .)
    INPUT_KEYWORD   reduce using rule 87 (ver_arr -> .)
    RETURN          reduce using rule 87 (ver_arr -> .)
    CLOSE_BRACKET   reduce using rule 87 (ver_arr -> .)

    ver_arr                        shift and go to state 372

state 362

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET . OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (64) OPVARS -> . VARS
    (65) OPVARS -> . EMPTY
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A
    (226) EMPTY -> .

    VARS_KEYWORD    shift and go to state 7
    OPEN_BRACKET    reduce using rule 226 (EMPTY -> .)

    OPVARS                         shift and go to state 373
    VARS                           shift and go to state 374
    EMPTY                          shift and go to state 375

state 363

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ver_mat
    (90) ver_mat -> .

    EQUAL           reduce using rule 90 (ver_mat -> .)

    ver_mat                        shift and go to state 376

state 364

    (186) PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 186 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 186 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 186 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 186 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 186 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 186 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 186 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 186 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)


state 365

    (188) PLOT_H -> COMMA PLOT_K .

    CLOSE_PARENTHESIS reduce using rule 188 (PLOT_H -> COMMA PLOT_K .)


state 366

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER . SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 377


state 367

    (190) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET . PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (194) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 379

    PLOT_P                         shift and go to state 378

state 368

    (97) CONDICION_A -> gotoElse ELSE BLOQUE .

    ID              reduce using rule 97 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    IF              reduce using rule 97 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    FOR_KEYWORD     reduce using rule 97 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    WHILE_KEYWORD   reduce using rule 97 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    PRINT_KEYWORD   reduce using rule 97 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    INPUT_KEYWORD   reduce using rule 97 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    RETURN          reduce using rule 97 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    CLOSE_BRACKET   reduce using rule 97 (CONDICION_A -> gotoElse ELSE BLOQUE .)


state 369

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE . repeat_for
    (101) repeat_for -> .

    ID              reduce using rule 101 (repeat_for -> .)
    IF              reduce using rule 101 (repeat_for -> .)
    FOR_KEYWORD     reduce using rule 101 (repeat_for -> .)
    WHILE_KEYWORD   reduce using rule 101 (repeat_for -> .)
    PRINT_KEYWORD   reduce using rule 101 (repeat_for -> .)
    INPUT_KEYWORD   reduce using rule 101 (repeat_for -> .)
    RETURN          reduce using rule 101 (repeat_for -> .)
    CLOSE_BRACKET   reduce using rule 101 (repeat_for -> .)

    repeat_for                     shift and go to state 380

state 370

    (211) PRINT_D -> CONCATENATE add_sign . PRINT_B
    (199) PRINT_B -> . CTE_STRING add_string PRINT_C
    (200) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (214) EXPRESIONESVARIAS -> . NOT EV_C
    (215) EXPRESIONESVARIAS -> . EV_C
    (216) EV_C -> . EXP_RELOP EV_B
    (221) EXP_RELOP -> . EXP EXP_RELOP_A
    (222) EXP_RELOP -> . EMPTY
    (106) EXP -> . TERMINO pop_exp EXP_A
    (226) EMPTY -> .
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 141
    NOT             shift and go to state 92
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    PRINT_B                        shift and go to state 381
    EXPRESIONESVARIAS              shift and go to state 142
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 371

    (159) INPUT_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 382


state 372

    (138) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr . VARS_CTE_D
    (152) VARS_CTE_D -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat
    (153) VARS_CTE_D -> . EMPTY
    (226) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 383
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    PLUS            reduce using rule 226 (EMPTY -> .)
    MINS            reduce using rule 226 (EMPTY -> .)
    RELOP           reduce using rule 226 (EMPTY -> .)
    AND             reduce using rule 226 (EMPTY -> .)
    OR              reduce using rule 226 (EMPTY -> .)
    SEMICOLON       reduce using rule 226 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 226 (EMPTY -> .)
    CONCATENATE     reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 226 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 226 (EMPTY -> .)
    TRUE            reduce using rule 226 (EMPTY -> .)
    FALSE           reduce using rule 226 (EMPTY -> .)
    ID              reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    COMMA           reduce using rule 226 (EMPTY -> .)
    IF              reduce using rule 226 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 226 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 226 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 226 (EMPTY -> .)
    RETURN          reduce using rule 226 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 226 (EMPTY -> .)

    VARS_CTE_D                     shift and go to state 384
    EMPTY                          shift and go to state 385

state 373

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS . add_count add_start BLOQUE CLOSE_BRACKET
    (3) add_count -> .

    OPEN_BRACKET    reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 386

state 374

    (64) OPVARS -> VARS .

    OPEN_BRACKET    reduce using rule 64 (OPVARS -> VARS .)


state 375

    (65) OPVARS -> EMPTY .

    OPEN_BRACKET    reduce using rule 65 (OPVARS -> EMPTY .)


state 376

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .

    EQUAL           reduce using rule 88 (ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)


state 377

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON . CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 387


state 378

    (190) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 388


state 379

    (194) PLOT_P -> CTE_STRING . PLOT_Q
    (195) PLOT_Q -> . COMMA PLOT_P
    (196) PLOT_Q -> . EMPTY
    (226) EMPTY -> .

    COMMA           shift and go to state 390
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)

    PLOT_Q                         shift and go to state 389
    EMPTY                          shift and go to state 391

state 380

    (100) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .

    ID              reduce using rule 100 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    IF              reduce using rule 100 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    FOR_KEYWORD     reduce using rule 100 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    WHILE_KEYWORD   reduce using rule 100 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    PRINT_KEYWORD   reduce using rule 100 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    INPUT_KEYWORD   reduce using rule 100 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    RETURN          reduce using rule 100 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    CLOSE_BRACKET   reduce using rule 100 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)


state 381

    (211) PRINT_D -> CONCATENATE add_sign PRINT_B .

    CLOSE_PARENTHESIS reduce using rule 211 (PRINT_D -> CONCATENATE add_sign PRINT_B .)


state 382

    (159) INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 159 (INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 383

    (152) VARS_CTE_D -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ver_mat
    (106) EXP -> . TERMINO pop_exp EXP_A
    (112) TERMINO -> . FACTOR pop_term TERMINO_A
    (125) FACTOR -> . FACTOR_A
    (126) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (127) FACTOR_A -> . PLUS FACTOR_C
    (128) FACTOR_A -> . MINS FACTOR_C
    (129) FACTOR_A -> . FACTOR_C
    (130) FACTOR_A -> . EMPTY
    (132) FACTOR_C -> . VARS_CTE
    (226) EMPTY -> .
    (133) VARS_CTE -> . CTE_INTEGER append_cte_int
    (134) VARS_CTE -> . CTE_FLOAT append_cte_float
    (135) VARS_CTE -> . TRUE append_bool
    (136) VARS_CTE -> . FALSE append_bool
    (137) VARS_CTE -> . ID append_id
    (138) VARS_CTE -> . ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D
    (139) VARS_CTE -> . ID append_id OPEN_PARENTHESIS VARS_CTE_B

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 226 (EMPTY -> .)
    DIVIDE          reduce using rule 226 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 226 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    TRUE            shift and go to state 107
    FALSE           shift and go to state 108
    ID              shift and go to state 109

  ! PLUS            [ reduce using rule 226 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 226 (EMPTY -> .) ]

    EXP                            shift and go to state 392
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 384

    (138) VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .

    TIMES           reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    DIVIDE          reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    PLUS            reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    MINS            reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    RELOP           reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    AND             reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    OR              reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    SEMICOLON       reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_PARENTHESIS reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CONCATENATE     reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CTE_INTEGER     reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CTE_FLOAT       reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    TRUE            reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    FALSE           reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    ID              reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_SQUARE_BRACKET reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    COMMA           reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    IF              reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    FOR_KEYWORD     reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    WHILE_KEYWORD   reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    PRINT_KEYWORD   reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    INPUT_KEYWORD   reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    RETURN          reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)
    CLOSE_BRACKET   reduce using rule 138 (VARS_CTE -> ID append_id OPEN_SQUARE_BRACKET add_SB EXP CLOSE_SQUARE_BRACKET pop_SB ver_arr VARS_CTE_D .)


state 385

    (153) VARS_CTE_D -> EMPTY .

    TIMES           reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    DIVIDE          reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    PLUS            reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    MINS            reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    RELOP           reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    AND             reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    OR              reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    SEMICOLON       reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    CONCATENATE     reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    CTE_INTEGER     reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    CTE_FLOAT       reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    TRUE            reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    FALSE           reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    ID              reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    COMMA           reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    IF              reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    RETURN          reduce using rule 153 (VARS_CTE_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 153 (VARS_CTE_D -> EMPTY .)


state 386

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count . add_start BLOQUE CLOSE_BRACKET
    (66) add_start -> .

    OPEN_BRACKET    reduce using rule 66 (add_start -> .)

    add_start                      shift and go to state 393

state 387

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING . COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 394


state 388

    (190) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 395


state 389

    (194) PLOT_P -> CTE_STRING PLOT_Q .

    CLOSE_SQUARE_BRACKET reduce using rule 194 (PLOT_P -> CTE_STRING PLOT_Q .)


state 390

    (195) PLOT_Q -> COMMA . PLOT_P
    (194) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 379

    PLOT_P                         shift and go to state 396

state 391

    (196) PLOT_Q -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 196 (PLOT_Q -> EMPTY .)


state 392

    (152) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ver_mat

    CLOSE_SQUARE_BRACKET shift and go to state 397


state 393

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start . BLOQUE CLOSE_BRACKET
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 398

state 394

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 399


state 395

    (190) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 400


state 396

    (195) PLOT_Q -> COMMA PLOT_P .

    CLOSE_SQUARE_BRACKET reduce using rule 195 (PLOT_Q -> COMMA PLOT_P .)


state 397

    (152) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ver_mat
    (90) ver_mat -> .

    TIMES           reduce using rule 90 (ver_mat -> .)
    DIVIDE          reduce using rule 90 (ver_mat -> .)
    PLUS            reduce using rule 90 (ver_mat -> .)
    MINS            reduce using rule 90 (ver_mat -> .)
    RELOP           reduce using rule 90 (ver_mat -> .)
    AND             reduce using rule 90 (ver_mat -> .)
    OR              reduce using rule 90 (ver_mat -> .)
    SEMICOLON       reduce using rule 90 (ver_mat -> .)
    CLOSE_PARENTHESIS reduce using rule 90 (ver_mat -> .)
    CONCATENATE     reduce using rule 90 (ver_mat -> .)
    CTE_INTEGER     reduce using rule 90 (ver_mat -> .)
    CTE_FLOAT       reduce using rule 90 (ver_mat -> .)
    TRUE            reduce using rule 90 (ver_mat -> .)
    FALSE           reduce using rule 90 (ver_mat -> .)
    ID              reduce using rule 90 (ver_mat -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 90 (ver_mat -> .)
    COMMA           reduce using rule 90 (ver_mat -> .)
    IF              reduce using rule 90 (ver_mat -> .)
    FOR_KEYWORD     reduce using rule 90 (ver_mat -> .)
    WHILE_KEYWORD   reduce using rule 90 (ver_mat -> .)
    PRINT_KEYWORD   reduce using rule 90 (ver_mat -> .)
    INPUT_KEYWORD   reduce using rule 90 (ver_mat -> .)
    RETURN          reduce using rule 90 (ver_mat -> .)
    CLOSE_BRACKET   reduce using rule 90 (ver_mat -> .)

    ver_mat                        shift and go to state 401

state 398

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 402


state 399

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 403


state 400

    (190) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 190 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 190 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 190 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 190 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 190 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 190 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 190 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 190 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)


state 401

    (152) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .

    TIMES           reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    DIVIDE          reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    PLUS            reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    MINS            reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    RELOP           reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    AND             reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    OR              reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    SEMICOLON       reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    CLOSE_PARENTHESIS reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    CONCATENATE     reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    CTE_INTEGER     reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    CTE_FLOAT       reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    TRUE            reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    FALSE           reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    ID              reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    CLOSE_SQUARE_BRACKET reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    COMMA           reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    IF              reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    FOR_KEYWORD     reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    WHILE_KEYWORD   reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    PRINT_KEYWORD   reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    INPUT_KEYWORD   reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    RETURN          reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)
    CLOSE_BRACKET   reduce using rule 152 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_mat .)


state 402

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .

    MODULE          reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)
    MAIN            reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)


state 403

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 404


state 404

    (174) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 174 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 174 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 174 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 174 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 174 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 174 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 174 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 174 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINS in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINS in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINS in state 92 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 92 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 92 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 92 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINS in state 100 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 100 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 100 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 100 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 100 resolved as shift
WARNING: shift/reduce conflict for ID in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINS in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINS in state 134 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINS in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 191 resolved as shift
WARNING: shift/reduce conflict for MINS in state 191 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 191 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 191 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 191 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 192 resolved as shift
WARNING: shift/reduce conflict for MINS in state 192 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 192 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 192 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 192 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 193 resolved as shift
WARNING: shift/reduce conflict for MINS in state 193 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 193 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 193 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 193 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 193 resolved as shift
WARNING: shift/reduce conflict for ID in state 193 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 205 resolved as shift
WARNING: shift/reduce conflict for MINS in state 205 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 212 resolved as shift
WARNING: shift/reduce conflict for MINS in state 212 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 244 resolved as shift
WARNING: shift/reduce conflict for MINS in state 244 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 248 resolved as shift
WARNING: shift/reduce conflict for MINS in state 248 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 253 resolved as shift
WARNING: shift/reduce conflict for MINS in state 253 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 253 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 253 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 253 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 253 resolved as shift
WARNING: shift/reduce conflict for ID in state 253 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 254 resolved as shift
WARNING: shift/reduce conflict for MINS in state 254 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 254 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 254 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 254 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 254 resolved as shift
WARNING: shift/reduce conflict for ID in state 254 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 255 resolved as shift
WARNING: shift/reduce conflict for MINS in state 255 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 255 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 255 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 255 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 255 resolved as shift
WARNING: shift/reduce conflict for ID in state 255 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 256 resolved as shift
WARNING: shift/reduce conflict for MINS in state 256 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 256 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 256 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 256 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 256 resolved as shift
WARNING: shift/reduce conflict for ID in state 256 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 257 resolved as shift
WARNING: shift/reduce conflict for MINS in state 257 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 261 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 284 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 301 resolved as shift
WARNING: shift/reduce conflict for MINS in state 301 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 308 resolved as shift
WARNING: shift/reduce conflict for MINS in state 308 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 327 resolved as shift
WARNING: shift/reduce conflict for MINS in state 327 resolved as shift
WARNING: shift/reduce conflict for ID in state 327 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 359 resolved as shift
WARNING: shift/reduce conflict for MINS in state 359 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 370 resolved as shift
WARNING: shift/reduce conflict for MINS in state 370 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 383 resolved as shift
WARNING: shift/reduce conflict for MINS in state 383 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (FACTOR_A -> EMPTY)
WARNING: rejected rule (EXP_RELOP -> EMPTY) in state 96
WARNING: Rule (EXP_RELOP -> EMPTY) is never reduced
