Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CREATE
    CTE_CHAR
    E
    FALSE
    PI
    QUOTE
    TRUE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
Rule 2     end_quad -> <empty>
Rule 3     add_count -> <empty>
Rule 4     addfunction -> <empty>
Rule 5     quad_main -> <empty>
Rule 6     PROGRAMA_A -> MODULO PROGRAMA_A
Rule 7     PROGRAMA_A -> EMPTY
Rule 8     VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A
Rule 9     VARS_A -> TIPO_P VARS_B
Rule 10    VARS_A -> TIPO_S VARS_B
Rule 11    VARS_B -> ID add_variable VARS_E VARS_C
Rule 12    add_variable -> <empty>
Rule 13    VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F
Rule 14    VARS_E -> EMPTY
Rule 15    VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C
Rule 16    VARS_F -> VARS_C
Rule 17    VARS_C -> SEMICOLON VARS_D
Rule 18    VARS_C -> COMMA VARS_B
Rule 19    VARS_D -> CLOSE_BRACKET
Rule 20    VARS_D -> VARS_A
Rule 21    BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET
Rule 22    ESTATUTO_A -> ESTATUTO ESTATUTO_A
Rule 23    ESTATUTO_A -> EMPTY
Rule 24    ESTATUTO -> ASIGNACION
Rule 25    ESTATUTO -> CONDICION
Rule 26    ESTATUTO -> NOMBRAR
Rule 27    ESTATUTO -> FOR
Rule 28    ESTATUTO -> WHILE
Rule 29    ESTATUTO -> PRINT
Rule 30    ESTATUTO -> PLOT
Rule 31    ESTATUTO -> LLAMADAMODULO
Rule 32    ESTATUTO -> INPUT
Rule 33    ESTATUTO -> COLOR
Rule 34    ESTATUTO -> RETURNOP
Rule 35    TIPO_P -> INT
Rule 36    TIPO_P -> FLOAT
Rule 37    TIPO_P -> BOOL
Rule 38    TIPO_P -> CHAR
Rule 39    TIPO_S -> TYPE_GRAPH
Rule 40    TIPO_S -> TYPE_PIECHART
Rule 41    TIPO_S -> TYPE_BARCHART
Rule 42    TIPO_S -> TYPE_HORBARCHART
Rule 43    TIPO_S -> TYPE_DONUTGRAPH
Rule 44    TIPO_S -> TYPE_NETWORK
Rule 45    TIPO_S -> TYPE_VENN
Rule 46    TIPO_S -> TYPE_RADARCHART
Rule 47    MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
Rule 48    RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON
Rule 49    return_quad -> <empty>
Rule 50    release_vars -> <empty>
Rule 51    endproc -> <empty>
Rule 52    change_scope -> <empty>
Rule 53    add_functionr -> <empty>
Rule 54    MODULO_A -> VOID
Rule 55    MODULO_A -> TIPO_P
Rule 56    MODULO_B -> COMMA MODULO_C
Rule 57    MODULO_B -> EMPTY
Rule 58    MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D
Rule 59    add_variable_m -> <empty>
Rule 60    MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET
Rule 61    MODULO_D -> EMPTY
Rule 62    add_start -> <empty>
Rule 63    param_table -> <empty>
Rule 64    LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
Rule 65    gosub -> <empty>
Rule 66    era -> <empty>
Rule 67    LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C
Rule 68    LLAMADAMODULO_A -> EMPTY
Rule 69    incK -> <empty>
Rule 70    LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
Rule 71    check_types -> <empty>
Rule 72    LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON
Rule 73    LLAMADAMODULO_D -> EMPTY
Rule 74    NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 75    NOMBRAR_A -> NAME
Rule 76    NOMBRAR_A -> NAMEX
Rule 77    NOMBRAR_A -> NAMEY
Rule 78    ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
Rule 79    quad -> <empty>
Rule 80    addStackO -> <empty>
Rule 81    ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
Rule 82    ASIGNACION_A -> EMPTY
Rule 83    ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 84    ASIGNACION_B -> EMPTY
Rule 85    ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS
Rule 86    ASIGNACION_C -> EQUAL CTE_STRING
Rule 87    add_equal -> <empty>
Rule 88    CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
Rule 89    fill_end -> <empty>
Rule 90    check_bool -> <empty>
Rule 91    CONDICION_A -> gotoElse ELSE BLOQUE
Rule 92    CONDICION_A -> EMPTY
Rule 93    gotoElse -> <empty>
Rule 94    FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
Rule 95    repeat_for -> <empty>
Rule 96    bool_for -> <empty>
Rule 97    WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
Rule 98    goto_while -> <empty>
Rule 99    bool_while -> <empty>
Rule 100   EXP -> TERMINO pop_exp EXP_A
Rule 101   pop_exp -> <empty>
Rule 102   EXP_A -> PLUS append_operator EXP
Rule 103   EXP_A -> MINS append_operator EXP
Rule 104   EXP_A -> EMPTY
Rule 105   append_operator -> <empty>
Rule 106   TERMINO -> FACTOR pop_term TERMINO_A
Rule 107   pop_term -> <empty>
Rule 108   TERMINO_A -> TIMES add_operator TERMINO
Rule 109   TERMINO_A -> DIVIDE add_operator TERMINO
Rule 110   TERMINO_A -> EMPTY
Rule 111   add_operator -> <empty>
Rule 112   COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
Rule 113   COLOR_A -> COLOR_RED
Rule 114   COLOR_A -> COLOR_BLACK
Rule 115   COLOR_A -> COLOR_BLUE
Rule 116   COLOR_A -> COLOR_PURPLE
Rule 117   COLOR_A -> COLOR_GREEN
Rule 118   COLOR_A -> COLOR_ORANGE
Rule 119   FACTOR -> FACTOR_A
Rule 120   FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
Rule 121   FACTOR_A -> PLUS FACTOR_C
Rule 122   FACTOR_A -> MINS FACTOR_C
Rule 123   FACTOR_A -> FACTOR_C
Rule 124   FACTOR_A -> EMPTY
Rule 125   FACTOR_B -> EXPRESIONESVARIAS FACTOR_C
Rule 126   FACTOR_C -> VARS_CTE
Rule 127   VARS_CTE -> CTE_INTEGER
Rule 128   VARS_CTE -> CTE_FLOAT
Rule 129   VARS_CTE -> BOOLEAN
Rule 130   VARS_CTE -> ID VARS_CTE_A
Rule 131   VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B
Rule 132   VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
Rule 133   VARS_CTE_A -> EMPTY
Rule 134   VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS
Rule 135   VARS_CTE_C -> COMMA VARS_CTE_B
Rule 136   VARS_CTE_C -> EMPTY
Rule 137   VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 138   VARS_CTE_D -> EMPTY
Rule 139   INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
Rule 140   add_inputid -> <empty>
Rule 141   quad_input -> <empty>
Rule 142   INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
Rule 143   INPUT_A -> EMPTY
Rule 144   INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 145   PLOT -> PGraph
Rule 146   PLOT -> PPie
Rule 147   PLOT -> PGBarras
Rule 148   PLOT -> PGBarrasHor
Rule 149   PLOT -> PDona
Rule 150   PLOT -> PRadar
Rule 151   PLOT -> PVenn
Rule 152   PLOT -> PLOT_B
Rule 153   PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
Rule 154   PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
Rule 155   PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
Rule 156   PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
Rule 157   PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E
Rule 158   PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E
Rule 159   PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 160   PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
Rule 161   PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON
Rule 162   PLOT_I -> CTE_INTEGER PLOT_D
Rule 163   PLOT_I -> CTE_FLOAT PLOT_D
Rule 164   PLOT_D -> COMMA PLOT_I
Rule 165   PLOT_D -> EMPTY
Rule 166   PLOT_E -> PLOT_F SEMICOLON PLOT_G
Rule 167   PLOT_F -> CTE_INTEGER PLOT_J
Rule 168   PLOT_F -> CTE_FLOAT PLOT_J
Rule 169   PLOT_J -> COMMA PLOT_F
Rule 170   PLOT_J -> EMPTY
Rule 171   PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON
Rule 172   PLOT_K -> CTE_STRING PLOT_H
Rule 173   PLOT_H -> COMMA PLOT_K
Rule 174   PLOT_H -> EMPTY
Rule 175   PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
Rule 176   PLOT_N -> CTE_STRING PLOT_O
Rule 177   PLOT_O -> COMMA PLOT_N
Rule 178   PLOT_O -> EMPTY
Rule 179   PLOT_P -> CTE_STRING PLOT_Q
Rule 180   PLOT_Q -> COMMA PLOT_P
Rule 181   PLOT_Q -> EMPTY
Rule 182   PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
Rule 183   PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
Rule 184   PRINT_B -> CTE_STRING add_string PRINT_C
Rule 185   PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C
Rule 186   add_temp -> <empty>
Rule 187   add_string -> <empty>
Rule 188   print_quad -> <empty>
Rule 189   print_string -> <empty>
Rule 190   print_id -> <empty>
Rule 191   PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
Rule 192   PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D
Rule 193   PRINT_C -> EMPTY
Rule 194   add_exp -> <empty>
Rule 195   add_con -> <empty>
Rule 196   PRINT_D -> CONCATENATE add_sign PRINT_B
Rule 197   PRINT_D -> EMPTY
Rule 198   add_sign -> <empty>
Rule 199   EXPRESIONESVARIAS -> NOT EV_C
Rule 200   EXPRESIONESVARIAS -> EV_C
Rule 201   EV_C -> EXP_RELOP EV_B
Rule 202   EV_B -> AND add_ev EV_C
Rule 203   EV_B -> OR add_ev EV_C
Rule 204   EV_B -> EMPTY
Rule 205   add_ev -> <empty>
Rule 206   EXP_RELOP -> EXP EXP_RELOP_A
Rule 207   EXP_RELOP -> EMPTY
Rule 208   EXP_RELOP_A -> RELOP add_relop EXP
Rule 209   EXP_RELOP_A -> EMPTY
Rule 210   add_relop -> <empty>
Rule 211   EMPTY -> <empty>

Terminals, with rules where they appear

AND                  : 202
BOOL                 : 37
BOOLEAN              : 129
CHAR                 : 38
CLOSE_BRACKET        : 1 19 21 60
CLOSE_PARENTHESIS    : 60 72 74 88 94 97 112 120 134 159 161 171 175 183
CLOSE_SQUARE_BRACKET : 13 15 81 83 132 137 142 144 175 175
COLOR_BLACK          : 114
COLOR_BLUE           : 115
COLOR_GREEN          : 117
COLOR_KEYWORD        : 112
COLOR_ORANGE         : 118
COLOR_PURPLE         : 116
COLOR_RED            : 113
COMMA                : 18 56 67 135 159 159 159 164 169 173 177 180
CONCATENATE          : 191 192 196
CREATE               : 
CREATED              : 157
CREATEG              : 153
CREATEGB             : 155
CREATEGBH            : 156
CREATEN              : 160
CREATEPC             : 154
CREATER              : 158
CREATEV              : 159
CTE_CHAR             : 
CTE_FLOAT            : 128 163 168
CTE_INTEGER          : 13 15 127 159 159 159 162 167
CTE_STRING           : 74 86 159 159 172 176 179 184 192
DIVIDE               : 109
E                    : 
ELSE                 : 91
EQUAL                : 85 86
FALSE                : 
FLOAT                : 36
FOR_KEYWORD          : 94
ID                   : 1 11 47 58 64 74 78 112 130 139 153 154 155 156 157 158 159 160
IF                   : 88
INPUTSYMBOL          : 139
INPUT_KEYWORD        : 139
INT                  : 35
MAIN                 : 1
MINS                 : 103 122
MODULE               : 47
NAME                 : 75
NAMEX                : 76
NAMEY                : 77
NOT                  : 199
OPEN_BRACKET         : 1 8 21 60
OPEN_PARENTHESIS     : 47 64 74 88 94 97 112 120 131 153 154 155 156 157 158 159 160 182
OPEN_SQUARE_BRACKET  : 13 15 81 83 132 137 142 144 160 175
OR                   : 203
PI                   : 
PLUS                 : 102 121
POINT                : 74 112 153 154 155 156 157 158 159 160
PRINT_KEYWORD        : 182
PROGRAM              : 1
QUOTE                : 
RELOP                : 208
RETURN               : 48
SEMICOLON            : 17 48 72 74 78 94 112 139 159 159 161 166 171 175 175 183
TIMES                : 108
TRUE                 : 
TYPE_BARCHART        : 41
TYPE_DONUTGRAPH      : 43
TYPE_GRAPH           : 39
TYPE_HORBARCHART     : 42
TYPE_NETWORK         : 44
TYPE_PIECHART        : 40
TYPE_RADARCHART      : 46
TYPE_VENN            : 45
VARS_KEYWORD         : 8
VOID                 : 54
WHILE_KEYWORD        : 97
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 24 94 94
ASIGNACION_A         : 78
ASIGNACION_B         : 81
ASIGNACION_C         : 78
BLOQUE               : 1 60 88 91 94 97
COLOR                : 33
COLOR_A              : 112
CONDICION            : 25
CONDICION_A          : 88
EMPTY                : 7 14 23 57 61 68 73 82 84 92 104 110 124 133 136 138 143 165 170 174 178 181 193 197 204 207 209
ESTATUTO             : 22
ESTATUTO_A           : 21 22
EV_B                 : 201
EV_C                 : 199 200 202 203
EXP                  : 70 81 83 102 103 132 134 137 142 144 206 208
EXPRESIONESVARIAS    : 48 85 88 94 97 125 185 191
EXP_A                : 100
EXP_RELOP            : 201
EXP_RELOP_A          : 206
FACTOR               : 106
FACTOR_A             : 119
FACTOR_B             : 120
FACTOR_C             : 121 122 123 125
FOR                  : 27
INPUT                : 32
INPUT_A              : 139
INPUT_B              : 142
LLAMADAMODULO        : 31
LLAMADAMODULO_A      : 70
LLAMADAMODULO_C      : 64 67
LLAMADAMODULO_D      : 70
MODULO               : 6
MODULO_A             : 47
MODULO_B             : 58
MODULO_C             : 47 56
MODULO_D             : 58
NOMBRAR              : 26
NOMBRAR_A            : 74
PDona                : 149
PGBarras             : 147
PGBarrasHor          : 148
PGraph               : 145
PLOT                 : 30
PLOT_B               : 152
PLOT_C               : 153
PLOT_D               : 162 163
PLOT_E               : 154 155 156 157 158
PLOT_F               : 166 169
PLOT_G               : 166
PLOT_H               : 172
PLOT_I               : 161 164
PLOT_J               : 167 168
PLOT_K               : 171 173
PLOT_M               : 160
PLOT_N               : 175 177
PLOT_O               : 176
PLOT_P               : 175 180
PLOT_Q               : 179
PPie                 : 146
PRINT                : 29
PRINT_A              : 182
PRINT_B              : 183 196
PRINT_C              : 184 185
PRINT_D              : 191 192
PROGRAMA             : 0
PROGRAMA_A           : 1 6
PRadar               : 150
PVenn                : 151
RETURNOP             : 34
TERMINO              : 100 108 109
TERMINO_A            : 106
TIPO_P               : 9 55 58
TIPO_S               : 10
VARS                 : 1 60
VARS_A               : 8 20
VARS_B               : 9 10 18
VARS_C               : 11 15 16
VARS_CTE             : 126
VARS_CTE_A           : 130
VARS_CTE_B           : 131 135
VARS_CTE_C           : 134
VARS_CTE_D           : 132
VARS_D               : 17
VARS_E               : 11
VARS_F               : 13
WHILE                : 28
addStackO            : 78
add_con              : 191
add_count            : 1 60
add_equal            : 85
add_ev               : 202 203
add_exp              : 192
add_functionr        : 47
add_inputid          : 139
add_operator         : 108 109
add_relop            : 208
add_sign             : 196
add_start            : 60
add_string           : 184
add_temp             : 185
add_variable         : 11
add_variable_m       : 58
addfunction          : 1
append_operator      : 102 103
bool_for             : 94
bool_while           : 97
change_scope         : 47
check_bool           : 88
check_types          : 70
end_quad             : 1
endproc              : 47
era                  : 64
fill_end             : 88
gosub                : 64
gotoElse             : 91
goto_while           : 97
incK                 : 67
param_table          : 60
pop_exp              : 100
pop_term             : 106
print_id             : 
print_quad           : 183
print_string         : 
quad                 : 78
quad_input           : 139
quad_main            : 1
release_vars         : 47
repeat_for           : 94
return_quad          : 48

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (4) addfunction -> .

    OPEN_BRACKET    reduce using rule 4 (addfunction -> .)

    addfunction                    shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addfunction . OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    OPEN_BRACKET    shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET . VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 6

state 6

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS . add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (3) add_count -> .

    MODULE          reduce using rule 3 (add_count -> .)
    MAIN            reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 8

state 7

    (8) VARS -> VARS_KEYWORD . OPEN_BRACKET VARS_A

    OPEN_BRACKET    shift and go to state 9


state 8

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count . PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (47) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (211) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 211 (EMPTY -> .)

    PROGRAMA_A                     shift and go to state 10
    MODULO                         shift and go to state 11
    EMPTY                          shift and go to state 12

state 9

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (35) TIPO_P -> . INT
    (36) TIPO_P -> . FLOAT
    (37) TIPO_P -> . BOOL
    (38) TIPO_P -> . CHAR
    (39) TIPO_S -> . TYPE_GRAPH
    (40) TIPO_S -> . TYPE_PIECHART
    (41) TIPO_S -> . TYPE_BARCHART
    (42) TIPO_S -> . TYPE_HORBARCHART
    (43) TIPO_S -> . TYPE_DONUTGRAPH
    (44) TIPO_S -> . TYPE_NETWORK
    (45) TIPO_S -> . TYPE_VENN
    (46) TIPO_S -> . TYPE_RADARCHART

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_A                         shift and go to state 14
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 10

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A . MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    MAIN            shift and go to state 29


state 11

    (6) PROGRAMA_A -> MODULO . PROGRAMA_A
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (47) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (211) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 211 (EMPTY -> .)

    MODULO                         shift and go to state 11
    PROGRAMA_A                     shift and go to state 30
    EMPTY                          shift and go to state 12

state 12

    (7) PROGRAMA_A -> EMPTY .

    MAIN            reduce using rule 7 (PROGRAMA_A -> EMPTY .)


state 13

    (47) MODULO -> MODULE . MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (54) MODULO_A -> . VOID
    (55) MODULO_A -> . TIPO_P
    (35) TIPO_P -> . INT
    (36) TIPO_P -> . FLOAT
    (37) TIPO_P -> . BOOL
    (38) TIPO_P -> . CHAR

    VOID            shift and go to state 32
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_A                       shift and go to state 31
    TIPO_P                         shift and go to state 33

state 14

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .

    MODULE          reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    MAIN            reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    OPEN_BRACKET    reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)


state 15

    (9) VARS_A -> TIPO_P . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 34

state 16

    (10) VARS_A -> TIPO_S . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 36

state 17

    (35) TIPO_P -> INT .

    ID              reduce using rule 35 (TIPO_P -> INT .)


state 18

    (36) TIPO_P -> FLOAT .

    ID              reduce using rule 36 (TIPO_P -> FLOAT .)


state 19

    (37) TIPO_P -> BOOL .

    ID              reduce using rule 37 (TIPO_P -> BOOL .)


state 20

    (38) TIPO_P -> CHAR .

    ID              reduce using rule 38 (TIPO_P -> CHAR .)


state 21

    (39) TIPO_S -> TYPE_GRAPH .

    ID              reduce using rule 39 (TIPO_S -> TYPE_GRAPH .)


state 22

    (40) TIPO_S -> TYPE_PIECHART .

    ID              reduce using rule 40 (TIPO_S -> TYPE_PIECHART .)


state 23

    (41) TIPO_S -> TYPE_BARCHART .

    ID              reduce using rule 41 (TIPO_S -> TYPE_BARCHART .)


state 24

    (42) TIPO_S -> TYPE_HORBARCHART .

    ID              reduce using rule 42 (TIPO_S -> TYPE_HORBARCHART .)


state 25

    (43) TIPO_S -> TYPE_DONUTGRAPH .

    ID              reduce using rule 43 (TIPO_S -> TYPE_DONUTGRAPH .)


state 26

    (44) TIPO_S -> TYPE_NETWORK .

    ID              reduce using rule 44 (TIPO_S -> TYPE_NETWORK .)


state 27

    (45) TIPO_S -> TYPE_VENN .

    ID              reduce using rule 45 (TIPO_S -> TYPE_VENN .)


state 28

    (46) TIPO_S -> TYPE_RADARCHART .

    ID              reduce using rule 46 (TIPO_S -> TYPE_RADARCHART .)


state 29

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN . quad_main BLOQUE CLOSE_BRACKET end_quad
    (5) quad_main -> .

    OPEN_BRACKET    reduce using rule 5 (quad_main -> .)

    quad_main                      shift and go to state 37

state 30

    (6) PROGRAMA_A -> MODULO PROGRAMA_A .

    MAIN            reduce using rule 6 (PROGRAMA_A -> MODULO PROGRAMA_A .)


state 31

    (47) MODULO -> MODULE MODULO_A . ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    ID              shift and go to state 38


state 32

    (54) MODULO_A -> VOID .

    ID              reduce using rule 54 (MODULO_A -> VOID .)


state 33

    (55) MODULO_A -> TIPO_P .

    ID              reduce using rule 55 (MODULO_A -> TIPO_P .)


state 34

    (9) VARS_A -> TIPO_P VARS_B .

    MODULE          reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    MAIN            reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    OPEN_BRACKET    reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    SEMICOLON       reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    COMMA           reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)


state 35

    (11) VARS_B -> ID . add_variable VARS_E VARS_C
    (12) add_variable -> .

    OPEN_SQUARE_BRACKET reduce using rule 12 (add_variable -> .)
    SEMICOLON       reduce using rule 12 (add_variable -> .)
    COMMA           reduce using rule 12 (add_variable -> .)

    add_variable                   shift and go to state 39

state 36

    (10) VARS_A -> TIPO_S VARS_B .

    MODULE          reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    MAIN            reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    OPEN_BRACKET    reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    SEMICOLON       reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    COMMA           reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)


state 37

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main . BLOQUE CLOSE_BRACKET end_quad
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 41

state 38

    (47) MODULO -> MODULE MODULO_A ID . add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (53) add_functionr -> .

    OPEN_PARENTHESIS reduce using rule 53 (add_functionr -> .)

    add_functionr                  shift and go to state 42

state 39

    (11) VARS_B -> ID add_variable . VARS_E VARS_C
    (13) VARS_E -> . OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F
    (14) VARS_E -> . EMPTY
    (211) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 44
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)

    VARS_E                         shift and go to state 43
    EMPTY                          shift and go to state 45

state 40

    (21) BLOQUE -> OPEN_BRACKET . ESTATUTO_A CLOSE_BRACKET
    (22) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (23) ESTATUTO_A -> . EMPTY
    (24) ESTATUTO -> . ASIGNACION
    (25) ESTATUTO -> . CONDICION
    (26) ESTATUTO -> . NOMBRAR
    (27) ESTATUTO -> . FOR
    (28) ESTATUTO -> . WHILE
    (29) ESTATUTO -> . PRINT
    (30) ESTATUTO -> . PLOT
    (31) ESTATUTO -> . LLAMADAMODULO
    (32) ESTATUTO -> . INPUT
    (33) ESTATUTO -> . COLOR
    (34) ESTATUTO -> . RETURNOP
    (211) EMPTY -> .
    (78) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (88) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (74) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (94) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (97) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (182) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (145) PLOT -> . PGraph
    (146) PLOT -> . PPie
    (147) PLOT -> . PGBarras
    (148) PLOT -> . PGBarrasHor
    (149) PLOT -> . PDona
    (150) PLOT -> . PRadar
    (151) PLOT -> . PVenn
    (152) PLOT -> . PLOT_B
    (64) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (139) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (112) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (48) RETURNOP -> . RETURN EXPRESIONESVARIAS return_quad SEMICOLON
    (153) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (154) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (155) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (156) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (157) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (158) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (159) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (160) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO_A                     shift and go to state 46
    ESTATUTO                       shift and go to state 47
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 41

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE . CLOSE_BRACKET end_quad

    CLOSE_BRACKET   shift and go to state 75


state 42

    (47) MODULO -> MODULE MODULO_A ID add_functionr . OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    OPEN_PARENTHESIS shift and go to state 76


state 43

    (11) VARS_B -> ID add_variable VARS_E . VARS_C
    (17) VARS_C -> . SEMICOLON VARS_D
    (18) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 78
    COMMA           shift and go to state 79

    VARS_C                         shift and go to state 77

state 44

    (13) VARS_E -> OPEN_SQUARE_BRACKET . CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F

    CTE_INTEGER     shift and go to state 80


state 45

    (14) VARS_E -> EMPTY .

    SEMICOLON       reduce using rule 14 (VARS_E -> EMPTY .)
    COMMA           reduce using rule 14 (VARS_E -> EMPTY .)


state 46

    (21) BLOQUE -> OPEN_BRACKET ESTATUTO_A . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 81


state 47

    (22) ESTATUTO_A -> ESTATUTO . ESTATUTO_A
    (22) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (23) ESTATUTO_A -> . EMPTY
    (24) ESTATUTO -> . ASIGNACION
    (25) ESTATUTO -> . CONDICION
    (26) ESTATUTO -> . NOMBRAR
    (27) ESTATUTO -> . FOR
    (28) ESTATUTO -> . WHILE
    (29) ESTATUTO -> . PRINT
    (30) ESTATUTO -> . PLOT
    (31) ESTATUTO -> . LLAMADAMODULO
    (32) ESTATUTO -> . INPUT
    (33) ESTATUTO -> . COLOR
    (34) ESTATUTO -> . RETURNOP
    (211) EMPTY -> .
    (78) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (88) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (74) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (94) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (97) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (182) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (145) PLOT -> . PGraph
    (146) PLOT -> . PPie
    (147) PLOT -> . PGBarras
    (148) PLOT -> . PGBarrasHor
    (149) PLOT -> . PDona
    (150) PLOT -> . PRadar
    (151) PLOT -> . PVenn
    (152) PLOT -> . PLOT_B
    (64) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (139) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (112) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (48) RETURNOP -> . RETURN EXPRESIONESVARIAS return_quad SEMICOLON
    (153) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (154) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (155) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (156) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (157) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (158) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (159) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (160) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO                       shift and go to state 47
    ESTATUTO_A                     shift and go to state 82
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 48

    (23) ESTATUTO_A -> EMPTY .

    CLOSE_BRACKET   reduce using rule 23 (ESTATUTO_A -> EMPTY .)


state 49

    (24) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    FOR_KEYWORD     reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    WHILE_KEYWORD   reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    PRINT_KEYWORD   reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    INPUT_KEYWORD   reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 24 (ESTATUTO -> ASIGNACION .)
    CLOSE_BRACKET   reduce using rule 24 (ESTATUTO -> ASIGNACION .)


state 50

    (25) ESTATUTO -> CONDICION .

    ID              reduce using rule 25 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 25 (ESTATUTO -> CONDICION .)
    FOR_KEYWORD     reduce using rule 25 (ESTATUTO -> CONDICION .)
    WHILE_KEYWORD   reduce using rule 25 (ESTATUTO -> CONDICION .)
    PRINT_KEYWORD   reduce using rule 25 (ESTATUTO -> CONDICION .)
    INPUT_KEYWORD   reduce using rule 25 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 25 (ESTATUTO -> CONDICION .)
    CLOSE_BRACKET   reduce using rule 25 (ESTATUTO -> CONDICION .)


state 51

    (26) ESTATUTO -> NOMBRAR .

    ID              reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    IF              reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    FOR_KEYWORD     reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    WHILE_KEYWORD   reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    PRINT_KEYWORD   reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    INPUT_KEYWORD   reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    RETURN          reduce using rule 26 (ESTATUTO -> NOMBRAR .)
    CLOSE_BRACKET   reduce using rule 26 (ESTATUTO -> NOMBRAR .)


state 52

    (27) ESTATUTO -> FOR .

    ID              reduce using rule 27 (ESTATUTO -> FOR .)
    IF              reduce using rule 27 (ESTATUTO -> FOR .)
    FOR_KEYWORD     reduce using rule 27 (ESTATUTO -> FOR .)
    WHILE_KEYWORD   reduce using rule 27 (ESTATUTO -> FOR .)
    PRINT_KEYWORD   reduce using rule 27 (ESTATUTO -> FOR .)
    INPUT_KEYWORD   reduce using rule 27 (ESTATUTO -> FOR .)
    RETURN          reduce using rule 27 (ESTATUTO -> FOR .)
    CLOSE_BRACKET   reduce using rule 27 (ESTATUTO -> FOR .)


state 53

    (28) ESTATUTO -> WHILE .

    ID              reduce using rule 28 (ESTATUTO -> WHILE .)
    IF              reduce using rule 28 (ESTATUTO -> WHILE .)
    FOR_KEYWORD     reduce using rule 28 (ESTATUTO -> WHILE .)
    WHILE_KEYWORD   reduce using rule 28 (ESTATUTO -> WHILE .)
    PRINT_KEYWORD   reduce using rule 28 (ESTATUTO -> WHILE .)
    INPUT_KEYWORD   reduce using rule 28 (ESTATUTO -> WHILE .)
    RETURN          reduce using rule 28 (ESTATUTO -> WHILE .)
    CLOSE_BRACKET   reduce using rule 28 (ESTATUTO -> WHILE .)


state 54

    (29) ESTATUTO -> PRINT .

    ID              reduce using rule 29 (ESTATUTO -> PRINT .)
    IF              reduce using rule 29 (ESTATUTO -> PRINT .)
    FOR_KEYWORD     reduce using rule 29 (ESTATUTO -> PRINT .)
    WHILE_KEYWORD   reduce using rule 29 (ESTATUTO -> PRINT .)
    PRINT_KEYWORD   reduce using rule 29 (ESTATUTO -> PRINT .)
    INPUT_KEYWORD   reduce using rule 29 (ESTATUTO -> PRINT .)
    RETURN          reduce using rule 29 (ESTATUTO -> PRINT .)
    CLOSE_BRACKET   reduce using rule 29 (ESTATUTO -> PRINT .)


state 55

    (30) ESTATUTO -> PLOT .

    ID              reduce using rule 30 (ESTATUTO -> PLOT .)
    IF              reduce using rule 30 (ESTATUTO -> PLOT .)
    FOR_KEYWORD     reduce using rule 30 (ESTATUTO -> PLOT .)
    WHILE_KEYWORD   reduce using rule 30 (ESTATUTO -> PLOT .)
    PRINT_KEYWORD   reduce using rule 30 (ESTATUTO -> PLOT .)
    INPUT_KEYWORD   reduce using rule 30 (ESTATUTO -> PLOT .)
    RETURN          reduce using rule 30 (ESTATUTO -> PLOT .)
    CLOSE_BRACKET   reduce using rule 30 (ESTATUTO -> PLOT .)


state 56

    (31) ESTATUTO -> LLAMADAMODULO .

    ID              reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    IF              reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    FOR_KEYWORD     reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    WHILE_KEYWORD   reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    PRINT_KEYWORD   reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    INPUT_KEYWORD   reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    RETURN          reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)
    CLOSE_BRACKET   reduce using rule 31 (ESTATUTO -> LLAMADAMODULO .)


state 57

    (32) ESTATUTO -> INPUT .

    ID              reduce using rule 32 (ESTATUTO -> INPUT .)
    IF              reduce using rule 32 (ESTATUTO -> INPUT .)
    FOR_KEYWORD     reduce using rule 32 (ESTATUTO -> INPUT .)
    WHILE_KEYWORD   reduce using rule 32 (ESTATUTO -> INPUT .)
    PRINT_KEYWORD   reduce using rule 32 (ESTATUTO -> INPUT .)
    INPUT_KEYWORD   reduce using rule 32 (ESTATUTO -> INPUT .)
    RETURN          reduce using rule 32 (ESTATUTO -> INPUT .)
    CLOSE_BRACKET   reduce using rule 32 (ESTATUTO -> INPUT .)


state 58

    (33) ESTATUTO -> COLOR .

    ID              reduce using rule 33 (ESTATUTO -> COLOR .)
    IF              reduce using rule 33 (ESTATUTO -> COLOR .)
    FOR_KEYWORD     reduce using rule 33 (ESTATUTO -> COLOR .)
    WHILE_KEYWORD   reduce using rule 33 (ESTATUTO -> COLOR .)
    PRINT_KEYWORD   reduce using rule 33 (ESTATUTO -> COLOR .)
    INPUT_KEYWORD   reduce using rule 33 (ESTATUTO -> COLOR .)
    RETURN          reduce using rule 33 (ESTATUTO -> COLOR .)
    CLOSE_BRACKET   reduce using rule 33 (ESTATUTO -> COLOR .)


state 59

    (34) ESTATUTO -> RETURNOP .

    ID              reduce using rule 34 (ESTATUTO -> RETURNOP .)
    IF              reduce using rule 34 (ESTATUTO -> RETURNOP .)
    FOR_KEYWORD     reduce using rule 34 (ESTATUTO -> RETURNOP .)
    WHILE_KEYWORD   reduce using rule 34 (ESTATUTO -> RETURNOP .)
    PRINT_KEYWORD   reduce using rule 34 (ESTATUTO -> RETURNOP .)
    INPUT_KEYWORD   reduce using rule 34 (ESTATUTO -> RETURNOP .)
    RETURN          reduce using rule 34 (ESTATUTO -> RETURNOP .)
    CLOSE_BRACKET   reduce using rule 34 (ESTATUTO -> RETURNOP .)


state 60

    (78) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (74) NOMBRAR -> ID . POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (64) LLAMADAMODULO -> ID . era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (112) COLOR -> ID . POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (153) PGraph -> ID . POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (154) PPie -> ID . POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (155) PGBarras -> ID . POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (156) PGBarrasHor -> ID . POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (157) PDona -> ID . POINT CREATED OPEN_PARENTHESIS PLOT_E
    (158) PRadar -> ID . POINT CREATER OPEN_PARENTHESIS PLOT_E
    (159) PVenn -> ID . POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (160) PLOT_B -> ID . POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (80) addStackO -> .
    (66) era -> .

    POINT           shift and go to state 84
    OPEN_SQUARE_BRACKET reduce using rule 80 (addStackO -> .)
    EQUAL           reduce using rule 80 (addStackO -> .)
    OPEN_PARENTHESIS reduce using rule 66 (era -> .)

    addStackO                      shift and go to state 83
    era                            shift and go to state 85

state 61

    (88) CONDICION -> IF . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    OPEN_PARENTHESIS shift and go to state 86


state 62

    (94) FOR -> FOR_KEYWORD . OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    OPEN_PARENTHESIS shift and go to state 87


state 63

    (97) WHILE -> WHILE_KEYWORD . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    OPEN_PARENTHESIS shift and go to state 88


state 64

    (182) PRINT -> PRINT_KEYWORD . OPEN_PARENTHESIS PRINT_A

    OPEN_PARENTHESIS shift and go to state 89


state 65

    (145) PLOT -> PGraph .

    ID              reduce using rule 145 (PLOT -> PGraph .)
    IF              reduce using rule 145 (PLOT -> PGraph .)
    FOR_KEYWORD     reduce using rule 145 (PLOT -> PGraph .)
    WHILE_KEYWORD   reduce using rule 145 (PLOT -> PGraph .)
    PRINT_KEYWORD   reduce using rule 145 (PLOT -> PGraph .)
    INPUT_KEYWORD   reduce using rule 145 (PLOT -> PGraph .)
    RETURN          reduce using rule 145 (PLOT -> PGraph .)
    CLOSE_BRACKET   reduce using rule 145 (PLOT -> PGraph .)


state 66

    (146) PLOT -> PPie .

    ID              reduce using rule 146 (PLOT -> PPie .)
    IF              reduce using rule 146 (PLOT -> PPie .)
    FOR_KEYWORD     reduce using rule 146 (PLOT -> PPie .)
    WHILE_KEYWORD   reduce using rule 146 (PLOT -> PPie .)
    PRINT_KEYWORD   reduce using rule 146 (PLOT -> PPie .)
    INPUT_KEYWORD   reduce using rule 146 (PLOT -> PPie .)
    RETURN          reduce using rule 146 (PLOT -> PPie .)
    CLOSE_BRACKET   reduce using rule 146 (PLOT -> PPie .)


state 67

    (147) PLOT -> PGBarras .

    ID              reduce using rule 147 (PLOT -> PGBarras .)
    IF              reduce using rule 147 (PLOT -> PGBarras .)
    FOR_KEYWORD     reduce using rule 147 (PLOT -> PGBarras .)
    WHILE_KEYWORD   reduce using rule 147 (PLOT -> PGBarras .)
    PRINT_KEYWORD   reduce using rule 147 (PLOT -> PGBarras .)
    INPUT_KEYWORD   reduce using rule 147 (PLOT -> PGBarras .)
    RETURN          reduce using rule 147 (PLOT -> PGBarras .)
    CLOSE_BRACKET   reduce using rule 147 (PLOT -> PGBarras .)


state 68

    (148) PLOT -> PGBarrasHor .

    ID              reduce using rule 148 (PLOT -> PGBarrasHor .)
    IF              reduce using rule 148 (PLOT -> PGBarrasHor .)
    FOR_KEYWORD     reduce using rule 148 (PLOT -> PGBarrasHor .)
    WHILE_KEYWORD   reduce using rule 148 (PLOT -> PGBarrasHor .)
    PRINT_KEYWORD   reduce using rule 148 (PLOT -> PGBarrasHor .)
    INPUT_KEYWORD   reduce using rule 148 (PLOT -> PGBarrasHor .)
    RETURN          reduce using rule 148 (PLOT -> PGBarrasHor .)
    CLOSE_BRACKET   reduce using rule 148 (PLOT -> PGBarrasHor .)


state 69

    (149) PLOT -> PDona .

    ID              reduce using rule 149 (PLOT -> PDona .)
    IF              reduce using rule 149 (PLOT -> PDona .)
    FOR_KEYWORD     reduce using rule 149 (PLOT -> PDona .)
    WHILE_KEYWORD   reduce using rule 149 (PLOT -> PDona .)
    PRINT_KEYWORD   reduce using rule 149 (PLOT -> PDona .)
    INPUT_KEYWORD   reduce using rule 149 (PLOT -> PDona .)
    RETURN          reduce using rule 149 (PLOT -> PDona .)
    CLOSE_BRACKET   reduce using rule 149 (PLOT -> PDona .)


state 70

    (150) PLOT -> PRadar .

    ID              reduce using rule 150 (PLOT -> PRadar .)
    IF              reduce using rule 150 (PLOT -> PRadar .)
    FOR_KEYWORD     reduce using rule 150 (PLOT -> PRadar .)
    WHILE_KEYWORD   reduce using rule 150 (PLOT -> PRadar .)
    PRINT_KEYWORD   reduce using rule 150 (PLOT -> PRadar .)
    INPUT_KEYWORD   reduce using rule 150 (PLOT -> PRadar .)
    RETURN          reduce using rule 150 (PLOT -> PRadar .)
    CLOSE_BRACKET   reduce using rule 150 (PLOT -> PRadar .)


state 71

    (151) PLOT -> PVenn .

    ID              reduce using rule 151 (PLOT -> PVenn .)
    IF              reduce using rule 151 (PLOT -> PVenn .)
    FOR_KEYWORD     reduce using rule 151 (PLOT -> PVenn .)
    WHILE_KEYWORD   reduce using rule 151 (PLOT -> PVenn .)
    PRINT_KEYWORD   reduce using rule 151 (PLOT -> PVenn .)
    INPUT_KEYWORD   reduce using rule 151 (PLOT -> PVenn .)
    RETURN          reduce using rule 151 (PLOT -> PVenn .)
    CLOSE_BRACKET   reduce using rule 151 (PLOT -> PVenn .)


state 72

    (152) PLOT -> PLOT_B .

    ID              reduce using rule 152 (PLOT -> PLOT_B .)
    IF              reduce using rule 152 (PLOT -> PLOT_B .)
    FOR_KEYWORD     reduce using rule 152 (PLOT -> PLOT_B .)
    WHILE_KEYWORD   reduce using rule 152 (PLOT -> PLOT_B .)
    PRINT_KEYWORD   reduce using rule 152 (PLOT -> PLOT_B .)
    INPUT_KEYWORD   reduce using rule 152 (PLOT -> PLOT_B .)
    RETURN          reduce using rule 152 (PLOT -> PLOT_B .)
    CLOSE_BRACKET   reduce using rule 152 (PLOT -> PLOT_B .)


state 73

    (139) INPUT -> INPUT_KEYWORD . INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input

    INPUTSYMBOL     shift and go to state 90


state 74

    (48) RETURNOP -> RETURN . EXPRESIONESVARIAS return_quad SEMICOLON
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 91
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 75

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET . end_quad
    (2) end_quad -> .

    $end            reduce using rule 2 (end_quad -> .)

    end_quad                       shift and go to state 109

state 76

    (47) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS . MODULO_C release_vars change_scope endproc
    (58) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (35) TIPO_P -> . INT
    (36) TIPO_P -> . FLOAT
    (37) TIPO_P -> . BOOL
    (38) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 110
    TIPO_P                         shift and go to state 111

state 77

    (11) VARS_B -> ID add_variable VARS_E VARS_C .

    MODULE          reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    MAIN            reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    OPEN_BRACKET    reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    SEMICOLON       reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    COMMA           reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)


state 78

    (17) VARS_C -> SEMICOLON . VARS_D
    (19) VARS_D -> . CLOSE_BRACKET
    (20) VARS_D -> . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (35) TIPO_P -> . INT
    (36) TIPO_P -> . FLOAT
    (37) TIPO_P -> . BOOL
    (38) TIPO_P -> . CHAR
    (39) TIPO_S -> . TYPE_GRAPH
    (40) TIPO_S -> . TYPE_PIECHART
    (41) TIPO_S -> . TYPE_BARCHART
    (42) TIPO_S -> . TYPE_HORBARCHART
    (43) TIPO_S -> . TYPE_DONUTGRAPH
    (44) TIPO_S -> . TYPE_NETWORK
    (45) TIPO_S -> . TYPE_VENN
    (46) TIPO_S -> . TYPE_RADARCHART

    CLOSE_BRACKET   shift and go to state 113
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_D                         shift and go to state 112
    VARS_A                         shift and go to state 114
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 79

    (18) VARS_C -> COMMA . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 115

state 80

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER . CLOSE_SQUARE_BRACKET VARS_F

    CLOSE_SQUARE_BRACKET shift and go to state 116


state 81

    (21) BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .

    CLOSE_BRACKET   reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ELSE            reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ID              reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    IF              reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    FOR_KEYWORD     reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    RETURN          reduce using rule 21 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)


state 82

    (22) ESTATUTO_A -> ESTATUTO ESTATUTO_A .

    CLOSE_BRACKET   reduce using rule 22 (ESTATUTO_A -> ESTATUTO ESTATUTO_A .)


state 83

    (78) ASIGNACION -> ID addStackO . ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (81) ASIGNACION_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
    (82) ASIGNACION_A -> . EMPTY
    (211) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 118
    EQUAL           reduce using rule 211 (EMPTY -> .)

    ASIGNACION_A                   shift and go to state 117
    EMPTY                          shift and go to state 119

state 84

    (74) NOMBRAR -> ID POINT . NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (112) COLOR -> ID POINT . COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (153) PGraph -> ID POINT . CREATEG OPEN_PARENTHESIS PLOT_C
    (154) PPie -> ID POINT . CREATEPC OPEN_PARENTHESIS PLOT_E
    (155) PGBarras -> ID POINT . CREATEGB OPEN_PARENTHESIS PLOT_E
    (156) PGBarrasHor -> ID POINT . CREATEGBH OPEN_PARENTHESIS PLOT_E
    (157) PDona -> ID POINT . CREATED OPEN_PARENTHESIS PLOT_E
    (158) PRadar -> ID POINT . CREATER OPEN_PARENTHESIS PLOT_E
    (159) PVenn -> ID POINT . CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (160) PLOT_B -> ID POINT . CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (75) NOMBRAR_A -> . NAME
    (76) NOMBRAR_A -> . NAMEX
    (77) NOMBRAR_A -> . NAMEY

    COLOR_KEYWORD   shift and go to state 121
    CREATEG         shift and go to state 122
    CREATEPC        shift and go to state 123
    CREATEGB        shift and go to state 124
    CREATEGBH       shift and go to state 125
    CREATED         shift and go to state 126
    CREATER         shift and go to state 127
    CREATEV         shift and go to state 128
    CREATEN         shift and go to state 129
    NAME            shift and go to state 130
    NAMEX           shift and go to state 131
    NAMEY           shift and go to state 132

    NOMBRAR_A                      shift and go to state 120

state 85

    (64) LLAMADAMODULO -> ID era . OPEN_PARENTHESIS LLAMADAMODULO_C gosub

    OPEN_PARENTHESIS shift and go to state 133


state 86

    (88) CONDICION -> IF OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 134
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 87

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS . ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (78) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 136

    ASIGNACION                     shift and go to state 135

state 88

    (97) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 137
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 89

    (182) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS . PRINT_A
    (183) PRINT_A -> . PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
    (184) PRINT_B -> . CTE_STRING add_string PRINT_C
    (185) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 140
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    PRINT_A                        shift and go to state 138
    PRINT_B                        shift and go to state 139
    EXPRESIONESVARIAS              shift and go to state 141
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 90

    (139) INPUT -> INPUT_KEYWORD INPUTSYMBOL . ID add_inputid INPUT_A SEMICOLON quad_input

    ID              shift and go to state 142


state 91

    (48) RETURNOP -> RETURN EXPRESIONESVARIAS . return_quad SEMICOLON
    (49) return_quad -> .

    SEMICOLON       reduce using rule 49 (return_quad -> .)

    return_quad                    shift and go to state 143

state 92

    (199) EXPRESIONESVARIAS -> NOT . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EV_C                           shift and go to state 144
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 93

    (200) EXPRESIONESVARIAS -> EV_C .

    SEMICOLON       reduce using rule 200 (EXPRESIONESVARIAS -> EV_C .)
    CLOSE_PARENTHESIS reduce using rule 200 (EXPRESIONESVARIAS -> EV_C .)
    CONCATENATE     reduce using rule 200 (EXPRESIONESVARIAS -> EV_C .)
    CTE_INTEGER     reduce using rule 200 (EXPRESIONESVARIAS -> EV_C .)
    CTE_FLOAT       reduce using rule 200 (EXPRESIONESVARIAS -> EV_C .)
    BOOLEAN         reduce using rule 200 (EXPRESIONESVARIAS -> EV_C .)
    ID              reduce using rule 200 (EXPRESIONESVARIAS -> EV_C .)


state 94

    (201) EV_C -> EXP_RELOP . EV_B
    (202) EV_B -> . AND add_ev EV_C
    (203) EV_B -> . OR add_ev EV_C
    (204) EV_B -> . EMPTY
    (211) EMPTY -> .

    AND             shift and go to state 146
    OR              shift and go to state 147
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 211 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 211 (EMPTY -> .)
    BOOLEAN         reduce using rule 211 (EMPTY -> .)
    ID              reduce using rule 211 (EMPTY -> .)

    EV_B                           shift and go to state 145
    EMPTY                          shift and go to state 148

state 95

    (206) EXP_RELOP -> EXP . EXP_RELOP_A
    (208) EXP_RELOP_A -> . RELOP add_relop EXP
    (209) EXP_RELOP_A -> . EMPTY
    (211) EMPTY -> .

    RELOP           shift and go to state 150
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 211 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 211 (EMPTY -> .)
    BOOLEAN         reduce using rule 211 (EMPTY -> .)
    ID              reduce using rule 211 (EMPTY -> .)

    EXP_RELOP_A                    shift and go to state 149
    EMPTY                          shift and go to state 151

state 96

    (207) EXP_RELOP -> EMPTY .
    (124) FACTOR_A -> EMPTY .

  ! reduce/reduce conflict for AND resolved using rule 124 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OR resolved using rule 124 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 124 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 124 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 124 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_INTEGER resolved using rule 124 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_FLOAT resolved using rule 124 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 124 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for ID resolved using rule 124 (FACTOR_A -> EMPTY .)
    TIMES           reduce using rule 124 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 124 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 124 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 124 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 124 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 124 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 124 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 124 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 124 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 124 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 124 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 124 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 124 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 124 (FACTOR_A -> EMPTY .)

  ! AND             [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]
  ! OR              [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]
  ! SEMICOLON       [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]
  ! CONCATENATE     [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]
  ! CTE_INTEGER     [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]
  ! CTE_FLOAT       [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]
  ! BOOLEAN         [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]
  ! ID              [ reduce using rule 207 (EXP_RELOP -> EMPTY .) ]


state 97

    (100) EXP -> TERMINO . pop_exp EXP_A
    (101) pop_exp -> .

    PLUS            reduce using rule 101 (pop_exp -> .)
    MINS            reduce using rule 101 (pop_exp -> .)
    RELOP           reduce using rule 101 (pop_exp -> .)
    AND             reduce using rule 101 (pop_exp -> .)
    OR              reduce using rule 101 (pop_exp -> .)
    SEMICOLON       reduce using rule 101 (pop_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 101 (pop_exp -> .)
    CONCATENATE     reduce using rule 101 (pop_exp -> .)
    CTE_INTEGER     reduce using rule 101 (pop_exp -> .)
    CTE_FLOAT       reduce using rule 101 (pop_exp -> .)
    BOOLEAN         reduce using rule 101 (pop_exp -> .)
    ID              reduce using rule 101 (pop_exp -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 101 (pop_exp -> .)
    COMMA           reduce using rule 101 (pop_exp -> .)
    IF              reduce using rule 101 (pop_exp -> .)
    FOR_KEYWORD     reduce using rule 101 (pop_exp -> .)
    WHILE_KEYWORD   reduce using rule 101 (pop_exp -> .)
    PRINT_KEYWORD   reduce using rule 101 (pop_exp -> .)
    INPUT_KEYWORD   reduce using rule 101 (pop_exp -> .)
    RETURN          reduce using rule 101 (pop_exp -> .)
    CLOSE_BRACKET   reduce using rule 101 (pop_exp -> .)

    pop_exp                        shift and go to state 152

state 98

    (106) TERMINO -> FACTOR . pop_term TERMINO_A
    (107) pop_term -> .

    TIMES           reduce using rule 107 (pop_term -> .)
    DIVIDE          reduce using rule 107 (pop_term -> .)
    PLUS            reduce using rule 107 (pop_term -> .)
    MINS            reduce using rule 107 (pop_term -> .)
    RELOP           reduce using rule 107 (pop_term -> .)
    AND             reduce using rule 107 (pop_term -> .)
    OR              reduce using rule 107 (pop_term -> .)
    SEMICOLON       reduce using rule 107 (pop_term -> .)
    CLOSE_PARENTHESIS reduce using rule 107 (pop_term -> .)
    CONCATENATE     reduce using rule 107 (pop_term -> .)
    CTE_INTEGER     reduce using rule 107 (pop_term -> .)
    CTE_FLOAT       reduce using rule 107 (pop_term -> .)
    BOOLEAN         reduce using rule 107 (pop_term -> .)
    ID              reduce using rule 107 (pop_term -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 107 (pop_term -> .)
    COMMA           reduce using rule 107 (pop_term -> .)
    IF              reduce using rule 107 (pop_term -> .)
    FOR_KEYWORD     reduce using rule 107 (pop_term -> .)
    WHILE_KEYWORD   reduce using rule 107 (pop_term -> .)
    PRINT_KEYWORD   reduce using rule 107 (pop_term -> .)
    INPUT_KEYWORD   reduce using rule 107 (pop_term -> .)
    RETURN          reduce using rule 107 (pop_term -> .)
    CLOSE_BRACKET   reduce using rule 107 (pop_term -> .)

    pop_term                       shift and go to state 153

state 99

    (119) FACTOR -> FACTOR_A .

    TIMES           reduce using rule 119 (FACTOR -> FACTOR_A .)
    DIVIDE          reduce using rule 119 (FACTOR -> FACTOR_A .)
    PLUS            reduce using rule 119 (FACTOR -> FACTOR_A .)
    MINS            reduce using rule 119 (FACTOR -> FACTOR_A .)
    RELOP           reduce using rule 119 (FACTOR -> FACTOR_A .)
    AND             reduce using rule 119 (FACTOR -> FACTOR_A .)
    OR              reduce using rule 119 (FACTOR -> FACTOR_A .)
    SEMICOLON       reduce using rule 119 (FACTOR -> FACTOR_A .)
    CLOSE_PARENTHESIS reduce using rule 119 (FACTOR -> FACTOR_A .)
    CONCATENATE     reduce using rule 119 (FACTOR -> FACTOR_A .)
    CTE_INTEGER     reduce using rule 119 (FACTOR -> FACTOR_A .)
    CTE_FLOAT       reduce using rule 119 (FACTOR -> FACTOR_A .)
    BOOLEAN         reduce using rule 119 (FACTOR -> FACTOR_A .)
    ID              reduce using rule 119 (FACTOR -> FACTOR_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 119 (FACTOR -> FACTOR_A .)
    COMMA           reduce using rule 119 (FACTOR -> FACTOR_A .)
    IF              reduce using rule 119 (FACTOR -> FACTOR_A .)
    FOR_KEYWORD     reduce using rule 119 (FACTOR -> FACTOR_A .)
    WHILE_KEYWORD   reduce using rule 119 (FACTOR -> FACTOR_A .)
    PRINT_KEYWORD   reduce using rule 119 (FACTOR -> FACTOR_A .)
    INPUT_KEYWORD   reduce using rule 119 (FACTOR -> FACTOR_A .)
    RETURN          reduce using rule 119 (FACTOR -> FACTOR_A .)
    CLOSE_BRACKET   reduce using rule 119 (FACTOR -> FACTOR_A .)


state 100

    (120) FACTOR_A -> OPEN_PARENTHESIS . FACTOR_B CLOSE_PARENTHESIS
    (125) FACTOR_B -> . EXPRESIONESVARIAS FACTOR_C
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    FACTOR_B                       shift and go to state 154
    EXPRESIONESVARIAS              shift and go to state 155
    FACTOR_C                       shift and go to state 102
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    VARS_CTE                       shift and go to state 104

state 101

    (121) FACTOR_A -> PLUS . FACTOR_C
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

    FACTOR_C                       shift and go to state 156
    VARS_CTE                       shift and go to state 104

state 102

    (123) FACTOR_A -> FACTOR_C .

    TIMES           reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    DIVIDE          reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    PLUS            reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    MINS            reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    RELOP           reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    AND             reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    OR              reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    SEMICOLON       reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    CONCATENATE     reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    CTE_INTEGER     reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    CTE_FLOAT       reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    BOOLEAN         reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    ID              reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    COMMA           reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    IF              reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    FOR_KEYWORD     reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    RETURN          reduce using rule 123 (FACTOR_A -> FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 123 (FACTOR_A -> FACTOR_C .)


state 103

    (122) FACTOR_A -> MINS . FACTOR_C
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

    FACTOR_C                       shift and go to state 157
    VARS_CTE                       shift and go to state 104

state 104

    (126) FACTOR_C -> VARS_CTE .

    TIMES           reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    DIVIDE          reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    PLUS            reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    MINS            reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    RELOP           reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    AND             reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    OR              reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    SEMICOLON       reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    CLOSE_PARENTHESIS reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    CONCATENATE     reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    CTE_INTEGER     reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    CTE_FLOAT       reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    BOOLEAN         reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    ID              reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    CLOSE_SQUARE_BRACKET reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    COMMA           reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    IF              reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    FOR_KEYWORD     reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    WHILE_KEYWORD   reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    PRINT_KEYWORD   reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    INPUT_KEYWORD   reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    RETURN          reduce using rule 126 (FACTOR_C -> VARS_CTE .)
    CLOSE_BRACKET   reduce using rule 126 (FACTOR_C -> VARS_CTE .)


state 105

    (127) VARS_CTE -> CTE_INTEGER .

    TIMES           reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    DIVIDE          reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    PLUS            reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    MINS            reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    RELOP           reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    AND             reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    OR              reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    SEMICOLON       reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_PARENTHESIS reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    CONCATENATE     reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    CTE_INTEGER     reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    CTE_FLOAT       reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    BOOLEAN         reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    ID              reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_SQUARE_BRACKET reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    COMMA           reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    IF              reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    FOR_KEYWORD     reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    WHILE_KEYWORD   reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    PRINT_KEYWORD   reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    INPUT_KEYWORD   reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    RETURN          reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_BRACKET   reduce using rule 127 (VARS_CTE -> CTE_INTEGER .)


state 106

    (128) VARS_CTE -> CTE_FLOAT .

    TIMES           reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    DIVIDE          reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    MINS            reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    RELOP           reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    AND             reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    OR              reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_PARENTHESIS reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    CONCATENATE     reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    CTE_INTEGER     reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    CTE_FLOAT       reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    BOOLEAN         reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    ID              reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_SQUARE_BRACKET reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    IF              reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    FOR_KEYWORD     reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    WHILE_KEYWORD   reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    PRINT_KEYWORD   reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    INPUT_KEYWORD   reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    RETURN          reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_BRACKET   reduce using rule 128 (VARS_CTE -> CTE_FLOAT .)


state 107

    (129) VARS_CTE -> BOOLEAN .

    TIMES           reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    DIVIDE          reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    PLUS            reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    MINS            reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    RELOP           reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    AND             reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    OR              reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    SEMICOLON       reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    CLOSE_PARENTHESIS reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    CONCATENATE     reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    CTE_INTEGER     reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    CTE_FLOAT       reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    BOOLEAN         reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    ID              reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    CLOSE_SQUARE_BRACKET reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    COMMA           reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    IF              reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    FOR_KEYWORD     reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    WHILE_KEYWORD   reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    PRINT_KEYWORD   reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    INPUT_KEYWORD   reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    RETURN          reduce using rule 129 (VARS_CTE -> BOOLEAN .)
    CLOSE_BRACKET   reduce using rule 129 (VARS_CTE -> BOOLEAN .)


state 108

    (130) VARS_CTE -> ID . VARS_CTE_A
    (131) VARS_CTE_A -> . OPEN_PARENTHESIS VARS_CTE_B
    (132) VARS_CTE_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (133) VARS_CTE_A -> . EMPTY
    (211) EMPTY -> .

    OPEN_PARENTHESIS shift and go to state 159
    OPEN_SQUARE_BRACKET shift and go to state 160
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    PLUS            reduce using rule 211 (EMPTY -> .)
    MINS            reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 211 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 211 (EMPTY -> .)
    BOOLEAN         reduce using rule 211 (EMPTY -> .)
    ID              reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)

    VARS_CTE_A                     shift and go to state 158
    EMPTY                          shift and go to state 161

state 109

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .)


state 110

    (47) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C . release_vars change_scope endproc
    (50) release_vars -> .

    MODULE          reduce using rule 50 (release_vars -> .)
    MAIN            reduce using rule 50 (release_vars -> .)

    release_vars                   shift and go to state 162

state 111

    (58) MODULO_C -> TIPO_P . ID add_variable_m MODULO_B MODULO_D

    ID              shift and go to state 163


state 112

    (17) VARS_C -> SEMICOLON VARS_D .

    MODULE          reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)
    MAIN            reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)
    OPEN_BRACKET    reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)
    SEMICOLON       reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)
    COMMA           reduce using rule 17 (VARS_C -> SEMICOLON VARS_D .)


state 113

    (19) VARS_D -> CLOSE_BRACKET .

    MODULE          reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)
    MAIN            reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)
    COMMA           reduce using rule 19 (VARS_D -> CLOSE_BRACKET .)


state 114

    (20) VARS_D -> VARS_A .

    MODULE          reduce using rule 20 (VARS_D -> VARS_A .)
    MAIN            reduce using rule 20 (VARS_D -> VARS_A .)
    OPEN_BRACKET    reduce using rule 20 (VARS_D -> VARS_A .)
    SEMICOLON       reduce using rule 20 (VARS_D -> VARS_A .)
    COMMA           reduce using rule 20 (VARS_D -> VARS_A .)


state 115

    (18) VARS_C -> COMMA VARS_B .

    MODULE          reduce using rule 18 (VARS_C -> COMMA VARS_B .)
    MAIN            reduce using rule 18 (VARS_C -> COMMA VARS_B .)
    OPEN_BRACKET    reduce using rule 18 (VARS_C -> COMMA VARS_B .)
    SEMICOLON       reduce using rule 18 (VARS_C -> COMMA VARS_B .)
    COMMA           reduce using rule 18 (VARS_C -> COMMA VARS_B .)


state 116

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET . VARS_F
    (15) VARS_F -> . OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C
    (16) VARS_F -> . VARS_C
    (17) VARS_C -> . SEMICOLON VARS_D
    (18) VARS_C -> . COMMA VARS_B

    OPEN_SQUARE_BRACKET shift and go to state 164
    SEMICOLON       shift and go to state 78
    COMMA           shift and go to state 79

    VARS_F                         shift and go to state 165
    VARS_C                         shift and go to state 166

state 117

    (78) ASIGNACION -> ID addStackO ASIGNACION_A . ASIGNACION_C SEMICOLON quad
    (85) ASIGNACION_C -> . EQUAL add_equal EXPRESIONESVARIAS
    (86) ASIGNACION_C -> . EQUAL CTE_STRING

    EQUAL           shift and go to state 168

    ASIGNACION_C                   shift and go to state 167

state 118

    (81) ASIGNACION_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 169
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 119

    (82) ASIGNACION_A -> EMPTY .

    EQUAL           reduce using rule 82 (ASIGNACION_A -> EMPTY .)


state 120

    (74) NOMBRAR -> ID POINT NOMBRAR_A . OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 171


state 121

    (112) COLOR -> ID POINT COLOR_KEYWORD . OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 172


state 122

    (153) PGraph -> ID POINT CREATEG . OPEN_PARENTHESIS PLOT_C

    OPEN_PARENTHESIS shift and go to state 173


state 123

    (154) PPie -> ID POINT CREATEPC . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 174


state 124

    (155) PGBarras -> ID POINT CREATEGB . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 175


state 125

    (156) PGBarrasHor -> ID POINT CREATEGBH . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 176


state 126

    (157) PDona -> ID POINT CREATED . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 177


state 127

    (158) PRadar -> ID POINT CREATER . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 178


state 128

    (159) PVenn -> ID POINT CREATEV . OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 179


state 129

    (160) PLOT_B -> ID POINT CREATEN . OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    OPEN_PARENTHESIS shift and go to state 180


state 130

    (75) NOMBRAR_A -> NAME .

    OPEN_PARENTHESIS reduce using rule 75 (NOMBRAR_A -> NAME .)


state 131

    (76) NOMBRAR_A -> NAMEX .

    OPEN_PARENTHESIS reduce using rule 76 (NOMBRAR_A -> NAMEX .)


state 132

    (77) NOMBRAR_A -> NAMEY .

    OPEN_PARENTHESIS reduce using rule 77 (NOMBRAR_A -> NAMEY .)


state 133

    (64) LLAMADAMODULO -> ID era OPEN_PARENTHESIS . LLAMADAMODULO_C gosub
    (70) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 181
    EXP                            shift and go to state 182
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 134

    (88) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    CLOSE_PARENTHESIS shift and go to state 183


state 135

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION . EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 184
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 136

    (78) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (80) addStackO -> .

    OPEN_SQUARE_BRACKET reduce using rule 80 (addStackO -> .)
    EQUAL           reduce using rule 80 (addStackO -> .)

    addStackO                      shift and go to state 83

state 137

    (97) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    CLOSE_PARENTHESIS shift and go to state 185


state 138

    (182) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .

    ID              reduce using rule 182 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    IF              reduce using rule 182 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    FOR_KEYWORD     reduce using rule 182 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    WHILE_KEYWORD   reduce using rule 182 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    PRINT_KEYWORD   reduce using rule 182 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    INPUT_KEYWORD   reduce using rule 182 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    RETURN          reduce using rule 182 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    CLOSE_BRACKET   reduce using rule 182 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)


state 139

    (183) PRINT_A -> PRINT_B . CLOSE_PARENTHESIS print_quad SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 186


state 140

    (184) PRINT_B -> CTE_STRING . add_string PRINT_C
    (187) add_string -> .

    CONCATENATE     reduce using rule 187 (add_string -> .)
    CLOSE_PARENTHESIS reduce using rule 187 (add_string -> .)

    add_string                     shift and go to state 187

state 141

    (185) PRINT_B -> EXPRESIONESVARIAS . add_temp PRINT_C
    (186) add_temp -> .

    CONCATENATE     reduce using rule 186 (add_temp -> .)
    CLOSE_PARENTHESIS reduce using rule 186 (add_temp -> .)

    add_temp                       shift and go to state 188

state 142

    (139) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID . add_inputid INPUT_A SEMICOLON quad_input
    (140) add_inputid -> .

    OPEN_SQUARE_BRACKET reduce using rule 140 (add_inputid -> .)
    SEMICOLON       reduce using rule 140 (add_inputid -> .)

    add_inputid                    shift and go to state 189

state 143

    (48) RETURNOP -> RETURN EXPRESIONESVARIAS return_quad . SEMICOLON

    SEMICOLON       shift and go to state 190


state 144

    (199) EXPRESIONESVARIAS -> NOT EV_C .

    SEMICOLON       reduce using rule 199 (EXPRESIONESVARIAS -> NOT EV_C .)
    CLOSE_PARENTHESIS reduce using rule 199 (EXPRESIONESVARIAS -> NOT EV_C .)
    CONCATENATE     reduce using rule 199 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_INTEGER     reduce using rule 199 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_FLOAT       reduce using rule 199 (EXPRESIONESVARIAS -> NOT EV_C .)
    BOOLEAN         reduce using rule 199 (EXPRESIONESVARIAS -> NOT EV_C .)
    ID              reduce using rule 199 (EXPRESIONESVARIAS -> NOT EV_C .)


state 145

    (201) EV_C -> EXP_RELOP EV_B .

    SEMICOLON       reduce using rule 201 (EV_C -> EXP_RELOP EV_B .)
    CLOSE_PARENTHESIS reduce using rule 201 (EV_C -> EXP_RELOP EV_B .)
    CONCATENATE     reduce using rule 201 (EV_C -> EXP_RELOP EV_B .)
    CTE_INTEGER     reduce using rule 201 (EV_C -> EXP_RELOP EV_B .)
    CTE_FLOAT       reduce using rule 201 (EV_C -> EXP_RELOP EV_B .)
    BOOLEAN         reduce using rule 201 (EV_C -> EXP_RELOP EV_B .)
    ID              reduce using rule 201 (EV_C -> EXP_RELOP EV_B .)


state 146

    (202) EV_B -> AND . add_ev EV_C
    (205) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 205 (add_ev -> .)
    PLUS            reduce using rule 205 (add_ev -> .)
    MINS            reduce using rule 205 (add_ev -> .)
    CTE_INTEGER     reduce using rule 205 (add_ev -> .)
    CTE_FLOAT       reduce using rule 205 (add_ev -> .)
    BOOLEAN         reduce using rule 205 (add_ev -> .)
    ID              reduce using rule 205 (add_ev -> .)
    AND             reduce using rule 205 (add_ev -> .)
    OR              reduce using rule 205 (add_ev -> .)
    RELOP           reduce using rule 205 (add_ev -> .)
    TIMES           reduce using rule 205 (add_ev -> .)
    DIVIDE          reduce using rule 205 (add_ev -> .)
    SEMICOLON       reduce using rule 205 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 205 (add_ev -> .)
    CONCATENATE     reduce using rule 205 (add_ev -> .)

    add_ev                         shift and go to state 191

state 147

    (203) EV_B -> OR . add_ev EV_C
    (205) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 205 (add_ev -> .)
    PLUS            reduce using rule 205 (add_ev -> .)
    MINS            reduce using rule 205 (add_ev -> .)
    CTE_INTEGER     reduce using rule 205 (add_ev -> .)
    CTE_FLOAT       reduce using rule 205 (add_ev -> .)
    BOOLEAN         reduce using rule 205 (add_ev -> .)
    ID              reduce using rule 205 (add_ev -> .)
    AND             reduce using rule 205 (add_ev -> .)
    OR              reduce using rule 205 (add_ev -> .)
    RELOP           reduce using rule 205 (add_ev -> .)
    TIMES           reduce using rule 205 (add_ev -> .)
    DIVIDE          reduce using rule 205 (add_ev -> .)
    SEMICOLON       reduce using rule 205 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 205 (add_ev -> .)
    CONCATENATE     reduce using rule 205 (add_ev -> .)

    add_ev                         shift and go to state 192

state 148

    (204) EV_B -> EMPTY .

    SEMICOLON       reduce using rule 204 (EV_B -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 204 (EV_B -> EMPTY .)
    CONCATENATE     reduce using rule 204 (EV_B -> EMPTY .)
    CTE_INTEGER     reduce using rule 204 (EV_B -> EMPTY .)
    CTE_FLOAT       reduce using rule 204 (EV_B -> EMPTY .)
    BOOLEAN         reduce using rule 204 (EV_B -> EMPTY .)
    ID              reduce using rule 204 (EV_B -> EMPTY .)


state 149

    (206) EXP_RELOP -> EXP EXP_RELOP_A .

    AND             reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OR              reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)
    SEMICOLON       reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_PARENTHESIS reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CONCATENATE     reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_INTEGER     reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_FLOAT       reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)
    BOOLEAN         reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)
    ID              reduce using rule 206 (EXP_RELOP -> EXP EXP_RELOP_A .)


state 150

    (208) EXP_RELOP_A -> RELOP . add_relop EXP
    (210) add_relop -> .

    OPEN_PARENTHESIS reduce using rule 210 (add_relop -> .)
    PLUS            reduce using rule 210 (add_relop -> .)
    MINS            reduce using rule 210 (add_relop -> .)
    CTE_INTEGER     reduce using rule 210 (add_relop -> .)
    CTE_FLOAT       reduce using rule 210 (add_relop -> .)
    BOOLEAN         reduce using rule 210 (add_relop -> .)
    ID              reduce using rule 210 (add_relop -> .)
    TIMES           reduce using rule 210 (add_relop -> .)
    DIVIDE          reduce using rule 210 (add_relop -> .)
    AND             reduce using rule 210 (add_relop -> .)
    OR              reduce using rule 210 (add_relop -> .)
    SEMICOLON       reduce using rule 210 (add_relop -> .)
    CLOSE_PARENTHESIS reduce using rule 210 (add_relop -> .)
    CONCATENATE     reduce using rule 210 (add_relop -> .)

    add_relop                      shift and go to state 193

state 151

    (209) EXP_RELOP_A -> EMPTY .

    AND             reduce using rule 209 (EXP_RELOP_A -> EMPTY .)
    OR              reduce using rule 209 (EXP_RELOP_A -> EMPTY .)
    SEMICOLON       reduce using rule 209 (EXP_RELOP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 209 (EXP_RELOP_A -> EMPTY .)
    CONCATENATE     reduce using rule 209 (EXP_RELOP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 209 (EXP_RELOP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 209 (EXP_RELOP_A -> EMPTY .)
    BOOLEAN         reduce using rule 209 (EXP_RELOP_A -> EMPTY .)
    ID              reduce using rule 209 (EXP_RELOP_A -> EMPTY .)


state 152

    (100) EXP -> TERMINO pop_exp . EXP_A
    (102) EXP_A -> . PLUS append_operator EXP
    (103) EXP_A -> . MINS append_operator EXP
    (104) EXP_A -> . EMPTY
    (211) EMPTY -> .

    PLUS            shift and go to state 195
    MINS            shift and go to state 196
    RELOP           reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 211 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 211 (EMPTY -> .)
    BOOLEAN         reduce using rule 211 (EMPTY -> .)
    ID              reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)

    EXP_A                          shift and go to state 194
    EMPTY                          shift and go to state 197

state 153

    (106) TERMINO -> FACTOR pop_term . TERMINO_A
    (108) TERMINO_A -> . TIMES add_operator TERMINO
    (109) TERMINO_A -> . DIVIDE add_operator TERMINO
    (110) TERMINO_A -> . EMPTY
    (211) EMPTY -> .

    TIMES           shift and go to state 199
    DIVIDE          shift and go to state 200
    PLUS            reduce using rule 211 (EMPTY -> .)
    MINS            reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 211 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 211 (EMPTY -> .)
    BOOLEAN         reduce using rule 211 (EMPTY -> .)
    ID              reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)

    TERMINO_A                      shift and go to state 198
    EMPTY                          shift and go to state 201

state 154

    (120) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 202


state 155

    (125) FACTOR_B -> EXPRESIONESVARIAS . FACTOR_C
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

    FACTOR_C                       shift and go to state 203
    VARS_CTE                       shift and go to state 104

state 156

    (121) FACTOR_A -> PLUS FACTOR_C .

    TIMES           reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    DIVIDE          reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    PLUS            reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    MINS            reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    RELOP           reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    AND             reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    OR              reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    SEMICOLON       reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    CONCATENATE     reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_INTEGER     reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_FLOAT       reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    BOOLEAN         reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    ID              reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    COMMA           reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    IF              reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    RETURN          reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 121 (FACTOR_A -> PLUS FACTOR_C .)


state 157

    (122) FACTOR_A -> MINS FACTOR_C .

    TIMES           reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    DIVIDE          reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    PLUS            reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    MINS            reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    RELOP           reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    AND             reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    OR              reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    SEMICOLON       reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    CONCATENATE     reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    CTE_INTEGER     reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    CTE_FLOAT       reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    BOOLEAN         reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    ID              reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    COMMA           reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    IF              reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    RETURN          reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 122 (FACTOR_A -> MINS FACTOR_C .)


state 158

    (130) VARS_CTE -> ID VARS_CTE_A .

    TIMES           reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    DIVIDE          reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    PLUS            reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    MINS            reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    RELOP           reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    AND             reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    OR              reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    SEMICOLON       reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_PARENTHESIS reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    CONCATENATE     reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_INTEGER     reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_FLOAT       reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    BOOLEAN         reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    ID              reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    COMMA           reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    IF              reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    FOR_KEYWORD     reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    WHILE_KEYWORD   reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    PRINT_KEYWORD   reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    INPUT_KEYWORD   reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    RETURN          reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_BRACKET   reduce using rule 130 (VARS_CTE -> ID VARS_CTE_A .)


state 159

    (131) VARS_CTE_A -> OPEN_PARENTHESIS . VARS_CTE_B
    (134) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 204
    EXP                            shift and go to state 205
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 160

    (132) VARS_CTE_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 206
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 161

    (133) VARS_CTE_A -> EMPTY .

    TIMES           reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    DIVIDE          reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    PLUS            reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    MINS            reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    RELOP           reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    AND             reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    OR              reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    SEMICOLON       reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    CONCATENATE     reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    BOOLEAN         reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    ID              reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    COMMA           reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    IF              reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    RETURN          reduce using rule 133 (VARS_CTE_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 133 (VARS_CTE_A -> EMPTY .)


state 162

    (47) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars . change_scope endproc
    (52) change_scope -> .

    MODULE          reduce using rule 52 (change_scope -> .)
    MAIN            reduce using rule 52 (change_scope -> .)

    change_scope                   shift and go to state 207

state 163

    (58) MODULO_C -> TIPO_P ID . add_variable_m MODULO_B MODULO_D
    (59) add_variable_m -> .

    COMMA           reduce using rule 59 (add_variable_m -> .)
    CLOSE_PARENTHESIS reduce using rule 59 (add_variable_m -> .)
    MODULE          reduce using rule 59 (add_variable_m -> .)
    MAIN            reduce using rule 59 (add_variable_m -> .)

    add_variable_m                 shift and go to state 208

state 164

    (15) VARS_F -> OPEN_SQUARE_BRACKET . CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C

    CTE_INTEGER     shift and go to state 209


state 165

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .

    SEMICOLON       reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .)
    COMMA           reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .)


state 166

    (16) VARS_F -> VARS_C .

    SEMICOLON       reduce using rule 16 (VARS_F -> VARS_C .)
    COMMA           reduce using rule 16 (VARS_F -> VARS_C .)


state 167

    (78) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C . SEMICOLON quad

    SEMICOLON       shift and go to state 210


state 168

    (85) ASIGNACION_C -> EQUAL . add_equal EXPRESIONESVARIAS
    (86) ASIGNACION_C -> EQUAL . CTE_STRING
    (87) add_equal -> .

    CTE_STRING      shift and go to state 212
    NOT             reduce using rule 87 (add_equal -> .)
    OPEN_PARENTHESIS reduce using rule 87 (add_equal -> .)
    PLUS            reduce using rule 87 (add_equal -> .)
    MINS            reduce using rule 87 (add_equal -> .)
    CTE_INTEGER     reduce using rule 87 (add_equal -> .)
    CTE_FLOAT       reduce using rule 87 (add_equal -> .)
    BOOLEAN         reduce using rule 87 (add_equal -> .)
    ID              reduce using rule 87 (add_equal -> .)
    AND             reduce using rule 87 (add_equal -> .)
    OR              reduce using rule 87 (add_equal -> .)
    RELOP           reduce using rule 87 (add_equal -> .)
    TIMES           reduce using rule 87 (add_equal -> .)
    DIVIDE          reduce using rule 87 (add_equal -> .)
    SEMICOLON       reduce using rule 87 (add_equal -> .)

    add_equal                      shift and go to state 211

state 169

    (81) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ASIGNACION_B

    CLOSE_SQUARE_BRACKET shift and go to state 213


state 170

    (124) FACTOR_A -> EMPTY .

    TIMES           reduce using rule 124 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 124 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 124 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 124 (FACTOR_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 124 (FACTOR_A -> EMPTY .)
    COMMA           reduce using rule 124 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 124 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 124 (FACTOR_A -> EMPTY .)
    IF              reduce using rule 124 (FACTOR_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 124 (FACTOR_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 124 (FACTOR_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 124 (FACTOR_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 124 (FACTOR_A -> EMPTY .)
    RETURN          reduce using rule 124 (FACTOR_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 124 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 124 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 124 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 124 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 124 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 124 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 124 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 124 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 124 (FACTOR_A -> EMPTY .)


state 171

    (74) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 214


state 172

    (112) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS . COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (113) COLOR_A -> . COLOR_RED
    (114) COLOR_A -> . COLOR_BLACK
    (115) COLOR_A -> . COLOR_BLUE
    (116) COLOR_A -> . COLOR_PURPLE
    (117) COLOR_A -> . COLOR_GREEN
    (118) COLOR_A -> . COLOR_ORANGE

    COLOR_RED       shift and go to state 216
    COLOR_BLACK     shift and go to state 217
    COLOR_BLUE      shift and go to state 218
    COLOR_PURPLE    shift and go to state 219
    COLOR_GREEN     shift and go to state 220
    COLOR_ORANGE    shift and go to state 221

    COLOR_A                        shift and go to state 215

state 173

    (153) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS . PLOT_C
    (161) PLOT_C -> . PLOT_I CLOSE_PARENTHESIS SEMICOLON
    (162) PLOT_I -> . CTE_INTEGER PLOT_D
    (163) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 224
    CTE_FLOAT       shift and go to state 225

    PLOT_C                         shift and go to state 222
    PLOT_I                         shift and go to state 223

state 174

    (154) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS . PLOT_E
    (166) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (167) PLOT_F -> . CTE_INTEGER PLOT_J
    (168) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 226
    PLOT_F                         shift and go to state 227

state 175

    (155) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS . PLOT_E
    (166) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (167) PLOT_F -> . CTE_INTEGER PLOT_J
    (168) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 230
    PLOT_F                         shift and go to state 227

state 176

    (156) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS . PLOT_E
    (166) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (167) PLOT_F -> . CTE_INTEGER PLOT_J
    (168) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 231
    PLOT_F                         shift and go to state 227

state 177

    (157) PDona -> ID POINT CREATED OPEN_PARENTHESIS . PLOT_E
    (166) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (167) PLOT_F -> . CTE_INTEGER PLOT_J
    (168) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 232
    PLOT_F                         shift and go to state 227

state 178

    (158) PRadar -> ID POINT CREATER OPEN_PARENTHESIS . PLOT_E
    (166) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (167) PLOT_F -> . CTE_INTEGER PLOT_J
    (168) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 233
    PLOT_F                         shift and go to state 227

state 179

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS . CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 234


state 180

    (160) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS . OPEN_SQUARE_BRACKET PLOT_M

    OPEN_SQUARE_BRACKET shift and go to state 235


state 181

    (64) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C . gosub
    (65) gosub -> .

    ID              reduce using rule 65 (gosub -> .)
    IF              reduce using rule 65 (gosub -> .)
    FOR_KEYWORD     reduce using rule 65 (gosub -> .)
    WHILE_KEYWORD   reduce using rule 65 (gosub -> .)
    PRINT_KEYWORD   reduce using rule 65 (gosub -> .)
    INPUT_KEYWORD   reduce using rule 65 (gosub -> .)
    RETURN          reduce using rule 65 (gosub -> .)
    CLOSE_BRACKET   reduce using rule 65 (gosub -> .)

    gosub                          shift and go to state 236

state 182

    (70) LLAMADAMODULO_C -> EXP . check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (71) check_types -> .

    COMMA           reduce using rule 71 (check_types -> .)
    CLOSE_PARENTHESIS reduce using rule 71 (check_types -> .)
    ID              reduce using rule 71 (check_types -> .)
    IF              reduce using rule 71 (check_types -> .)
    FOR_KEYWORD     reduce using rule 71 (check_types -> .)
    WHILE_KEYWORD   reduce using rule 71 (check_types -> .)
    PRINT_KEYWORD   reduce using rule 71 (check_types -> .)
    INPUT_KEYWORD   reduce using rule 71 (check_types -> .)
    RETURN          reduce using rule 71 (check_types -> .)
    CLOSE_BRACKET   reduce using rule 71 (check_types -> .)

    check_types                    shift and go to state 237

state 183

    (88) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . check_bool BLOQUE CONDICION_A fill_end
    (90) check_bool -> .

    OPEN_BRACKET    reduce using rule 90 (check_bool -> .)

    check_bool                     shift and go to state 238

state 184

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS . bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (96) bool_for -> .

    SEMICOLON       reduce using rule 96 (bool_for -> .)

    bool_for                       shift and go to state 239

state 185

    (97) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . bool_while BLOQUE goto_while
    (99) bool_while -> .

    OPEN_BRACKET    reduce using rule 99 (bool_while -> .)

    bool_while                     shift and go to state 240

state 186

    (183) PRINT_A -> PRINT_B CLOSE_PARENTHESIS . print_quad SEMICOLON
    (188) print_quad -> .

    SEMICOLON       reduce using rule 188 (print_quad -> .)

    print_quad                     shift and go to state 241

state 187

    (184) PRINT_B -> CTE_STRING add_string . PRINT_C
    (191) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (192) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (193) PRINT_C -> . EMPTY
    (211) EMPTY -> .

    CONCATENATE     shift and go to state 243
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)

    PRINT_C                        shift and go to state 242
    EMPTY                          shift and go to state 244

state 188

    (185) PRINT_B -> EXPRESIONESVARIAS add_temp . PRINT_C
    (191) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (192) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (193) PRINT_C -> . EMPTY
    (211) EMPTY -> .

    CONCATENATE     shift and go to state 243
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)

    PRINT_C                        shift and go to state 245
    EMPTY                          shift and go to state 244

state 189

    (139) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid . INPUT_A SEMICOLON quad_input
    (142) INPUT_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
    (143) INPUT_A -> . EMPTY
    (211) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 247
    SEMICOLON       reduce using rule 211 (EMPTY -> .)

    INPUT_A                        shift and go to state 246
    EMPTY                          shift and go to state 248

state 190

    (48) RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .

    ID              reduce using rule 48 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    IF              reduce using rule 48 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 48 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 48 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 48 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 48 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    RETURN          reduce using rule 48 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 48 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)


state 191

    (202) EV_B -> AND add_ev . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EV_C                           shift and go to state 249
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 192

    (203) EV_B -> OR add_ev . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EV_C                           shift and go to state 250
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 193

    (208) EXP_RELOP_A -> RELOP add_relop . EXP
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 251
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 194

    (100) EXP -> TERMINO pop_exp EXP_A .

    RELOP           reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    AND             reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    OR              reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    SEMICOLON       reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_PARENTHESIS reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    CONCATENATE     reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    CTE_INTEGER     reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    CTE_FLOAT       reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    BOOLEAN         reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    ID              reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    COMMA           reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    IF              reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    FOR_KEYWORD     reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    WHILE_KEYWORD   reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    PRINT_KEYWORD   reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    INPUT_KEYWORD   reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    RETURN          reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_BRACKET   reduce using rule 100 (EXP -> TERMINO pop_exp EXP_A .)


state 195

    (102) EXP_A -> PLUS . append_operator EXP
    (105) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 105 (append_operator -> .)
    PLUS            reduce using rule 105 (append_operator -> .)
    MINS            reduce using rule 105 (append_operator -> .)
    CTE_INTEGER     reduce using rule 105 (append_operator -> .)
    CTE_FLOAT       reduce using rule 105 (append_operator -> .)
    BOOLEAN         reduce using rule 105 (append_operator -> .)
    ID              reduce using rule 105 (append_operator -> .)
    TIMES           reduce using rule 105 (append_operator -> .)
    DIVIDE          reduce using rule 105 (append_operator -> .)
    RELOP           reduce using rule 105 (append_operator -> .)
    AND             reduce using rule 105 (append_operator -> .)
    OR              reduce using rule 105 (append_operator -> .)
    SEMICOLON       reduce using rule 105 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 105 (append_operator -> .)
    CONCATENATE     reduce using rule 105 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 105 (append_operator -> .)
    COMMA           reduce using rule 105 (append_operator -> .)
    IF              reduce using rule 105 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 105 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 105 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 105 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 105 (append_operator -> .)
    RETURN          reduce using rule 105 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 105 (append_operator -> .)

    append_operator                shift and go to state 252

state 196

    (103) EXP_A -> MINS . append_operator EXP
    (105) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 105 (append_operator -> .)
    PLUS            reduce using rule 105 (append_operator -> .)
    MINS            reduce using rule 105 (append_operator -> .)
    CTE_INTEGER     reduce using rule 105 (append_operator -> .)
    CTE_FLOAT       reduce using rule 105 (append_operator -> .)
    BOOLEAN         reduce using rule 105 (append_operator -> .)
    ID              reduce using rule 105 (append_operator -> .)
    TIMES           reduce using rule 105 (append_operator -> .)
    DIVIDE          reduce using rule 105 (append_operator -> .)
    RELOP           reduce using rule 105 (append_operator -> .)
    AND             reduce using rule 105 (append_operator -> .)
    OR              reduce using rule 105 (append_operator -> .)
    SEMICOLON       reduce using rule 105 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 105 (append_operator -> .)
    CONCATENATE     reduce using rule 105 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 105 (append_operator -> .)
    COMMA           reduce using rule 105 (append_operator -> .)
    IF              reduce using rule 105 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 105 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 105 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 105 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 105 (append_operator -> .)
    RETURN          reduce using rule 105 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 105 (append_operator -> .)

    append_operator                shift and go to state 253

state 197

    (104) EXP_A -> EMPTY .

    RELOP           reduce using rule 104 (EXP_A -> EMPTY .)
    AND             reduce using rule 104 (EXP_A -> EMPTY .)
    OR              reduce using rule 104 (EXP_A -> EMPTY .)
    SEMICOLON       reduce using rule 104 (EXP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 104 (EXP_A -> EMPTY .)
    CONCATENATE     reduce using rule 104 (EXP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 104 (EXP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 104 (EXP_A -> EMPTY .)
    BOOLEAN         reduce using rule 104 (EXP_A -> EMPTY .)
    ID              reduce using rule 104 (EXP_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 104 (EXP_A -> EMPTY .)
    COMMA           reduce using rule 104 (EXP_A -> EMPTY .)
    IF              reduce using rule 104 (EXP_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 104 (EXP_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 104 (EXP_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 104 (EXP_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 104 (EXP_A -> EMPTY .)
    RETURN          reduce using rule 104 (EXP_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 104 (EXP_A -> EMPTY .)


state 198

    (106) TERMINO -> FACTOR pop_term TERMINO_A .

    PLUS            reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    MINS            reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RELOP           reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    AND             reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    OR              reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    SEMICOLON       reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_PARENTHESIS reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CONCATENATE     reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CTE_INTEGER     reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CTE_FLOAT       reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    BOOLEAN         reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    ID              reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    COMMA           reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    IF              reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    FOR_KEYWORD     reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    WHILE_KEYWORD   reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    PRINT_KEYWORD   reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    INPUT_KEYWORD   reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RETURN          reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_BRACKET   reduce using rule 106 (TERMINO -> FACTOR pop_term TERMINO_A .)


state 199

    (108) TERMINO_A -> TIMES . add_operator TERMINO
    (111) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 111 (add_operator -> .)
    PLUS            reduce using rule 111 (add_operator -> .)
    MINS            reduce using rule 111 (add_operator -> .)
    CTE_INTEGER     reduce using rule 111 (add_operator -> .)
    CTE_FLOAT       reduce using rule 111 (add_operator -> .)
    BOOLEAN         reduce using rule 111 (add_operator -> .)
    ID              reduce using rule 111 (add_operator -> .)
    TIMES           reduce using rule 111 (add_operator -> .)
    DIVIDE          reduce using rule 111 (add_operator -> .)
    RELOP           reduce using rule 111 (add_operator -> .)
    AND             reduce using rule 111 (add_operator -> .)
    OR              reduce using rule 111 (add_operator -> .)
    SEMICOLON       reduce using rule 111 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 111 (add_operator -> .)
    CONCATENATE     reduce using rule 111 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 111 (add_operator -> .)
    COMMA           reduce using rule 111 (add_operator -> .)
    IF              reduce using rule 111 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 111 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 111 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 111 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 111 (add_operator -> .)
    RETURN          reduce using rule 111 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 111 (add_operator -> .)

    add_operator                   shift and go to state 254

state 200

    (109) TERMINO_A -> DIVIDE . add_operator TERMINO
    (111) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 111 (add_operator -> .)
    PLUS            reduce using rule 111 (add_operator -> .)
    MINS            reduce using rule 111 (add_operator -> .)
    CTE_INTEGER     reduce using rule 111 (add_operator -> .)
    CTE_FLOAT       reduce using rule 111 (add_operator -> .)
    BOOLEAN         reduce using rule 111 (add_operator -> .)
    ID              reduce using rule 111 (add_operator -> .)
    TIMES           reduce using rule 111 (add_operator -> .)
    DIVIDE          reduce using rule 111 (add_operator -> .)
    RELOP           reduce using rule 111 (add_operator -> .)
    AND             reduce using rule 111 (add_operator -> .)
    OR              reduce using rule 111 (add_operator -> .)
    SEMICOLON       reduce using rule 111 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 111 (add_operator -> .)
    CONCATENATE     reduce using rule 111 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 111 (add_operator -> .)
    COMMA           reduce using rule 111 (add_operator -> .)
    IF              reduce using rule 111 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 111 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 111 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 111 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 111 (add_operator -> .)
    RETURN          reduce using rule 111 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 111 (add_operator -> .)

    add_operator                   shift and go to state 255

state 201

    (110) TERMINO_A -> EMPTY .

    PLUS            reduce using rule 110 (TERMINO_A -> EMPTY .)
    MINS            reduce using rule 110 (TERMINO_A -> EMPTY .)
    RELOP           reduce using rule 110 (TERMINO_A -> EMPTY .)
    AND             reduce using rule 110 (TERMINO_A -> EMPTY .)
    OR              reduce using rule 110 (TERMINO_A -> EMPTY .)
    SEMICOLON       reduce using rule 110 (TERMINO_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 110 (TERMINO_A -> EMPTY .)
    CONCATENATE     reduce using rule 110 (TERMINO_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 110 (TERMINO_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 110 (TERMINO_A -> EMPTY .)
    BOOLEAN         reduce using rule 110 (TERMINO_A -> EMPTY .)
    ID              reduce using rule 110 (TERMINO_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 110 (TERMINO_A -> EMPTY .)
    COMMA           reduce using rule 110 (TERMINO_A -> EMPTY .)
    IF              reduce using rule 110 (TERMINO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 110 (TERMINO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 110 (TERMINO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 110 (TERMINO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 110 (TERMINO_A -> EMPTY .)
    RETURN          reduce using rule 110 (TERMINO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 110 (TERMINO_A -> EMPTY .)


state 202

    (120) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .

    TIMES           reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    MINS            reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    AND             reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    OR              reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CONCATENATE     reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    ID              reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    IF              reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 120 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)


state 203

    (125) FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .

    CLOSE_PARENTHESIS reduce using rule 125 (FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .)


state 204

    (131) VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .

    TIMES           reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    DIVIDE          reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PLUS            reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    MINS            reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    RELOP           reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    AND             reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    OR              reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    SEMICOLON       reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CONCATENATE     reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_INTEGER     reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_FLOAT       reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    BOOLEAN         reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    ID              reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_SQUARE_BRACKET reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    COMMA           reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    IF              reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    FOR_KEYWORD     reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    WHILE_KEYWORD   reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PRINT_KEYWORD   reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    INPUT_KEYWORD   reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    RETURN          reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_BRACKET   reduce using rule 131 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)


state 205

    (134) VARS_CTE_B -> EXP . VARS_CTE_C CLOSE_PARENTHESIS
    (135) VARS_CTE_C -> . COMMA VARS_CTE_B
    (136) VARS_CTE_C -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 257
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)

    VARS_CTE_C                     shift and go to state 256
    EMPTY                          shift and go to state 258

state 206

    (132) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET VARS_CTE_D

    CLOSE_SQUARE_BRACKET shift and go to state 259


state 207

    (47) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope . endproc
    (51) endproc -> .

    MODULE          reduce using rule 51 (endproc -> .)
    MAIN            reduce using rule 51 (endproc -> .)

    endproc                        shift and go to state 260

state 208

    (58) MODULO_C -> TIPO_P ID add_variable_m . MODULO_B MODULO_D
    (56) MODULO_B -> . COMMA MODULO_C
    (57) MODULO_B -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 262
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    MODULE          reduce using rule 211 (EMPTY -> .)
    MAIN            reduce using rule 211 (EMPTY -> .)

    MODULO_B                       shift and go to state 261
    EMPTY                          shift and go to state 263

state 209

    (15) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER . CLOSE_SQUARE_BRACKET VARS_C

    CLOSE_SQUARE_BRACKET shift and go to state 264


state 210

    (78) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON . quad
    (79) quad -> .

    ID              reduce using rule 79 (quad -> .)
    IF              reduce using rule 79 (quad -> .)
    FOR_KEYWORD     reduce using rule 79 (quad -> .)
    WHILE_KEYWORD   reduce using rule 79 (quad -> .)
    PRINT_KEYWORD   reduce using rule 79 (quad -> .)
    INPUT_KEYWORD   reduce using rule 79 (quad -> .)
    RETURN          reduce using rule 79 (quad -> .)
    CLOSE_BRACKET   reduce using rule 79 (quad -> .)
    NOT             reduce using rule 79 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 79 (quad -> .)
    PLUS            reduce using rule 79 (quad -> .)
    MINS            reduce using rule 79 (quad -> .)
    CTE_INTEGER     reduce using rule 79 (quad -> .)
    CTE_FLOAT       reduce using rule 79 (quad -> .)
    BOOLEAN         reduce using rule 79 (quad -> .)
    SEMICOLON       reduce using rule 79 (quad -> .)
    AND             reduce using rule 79 (quad -> .)
    OR              reduce using rule 79 (quad -> .)
    RELOP           reduce using rule 79 (quad -> .)
    TIMES           reduce using rule 79 (quad -> .)
    DIVIDE          reduce using rule 79 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 79 (quad -> .)

    quad                           shift and go to state 265

state 211

    (85) ASIGNACION_C -> EQUAL add_equal . EXPRESIONESVARIAS
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 266
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 212

    (86) ASIGNACION_C -> EQUAL CTE_STRING .

    SEMICOLON       reduce using rule 86 (ASIGNACION_C -> EQUAL CTE_STRING .)


state 213

    (81) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ASIGNACION_B
    (83) ASIGNACION_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (84) ASIGNACION_B -> . EMPTY
    (211) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 267
    EQUAL           reduce using rule 211 (EMPTY -> .)

    ASIGNACION_B                   shift and go to state 268
    EMPTY                          shift and go to state 269

state 214

    (74) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 270


state 215

    (112) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 271


state 216

    (113) COLOR_A -> COLOR_RED .

    CLOSE_PARENTHESIS reduce using rule 113 (COLOR_A -> COLOR_RED .)


state 217

    (114) COLOR_A -> COLOR_BLACK .

    CLOSE_PARENTHESIS reduce using rule 114 (COLOR_A -> COLOR_BLACK .)


state 218

    (115) COLOR_A -> COLOR_BLUE .

    CLOSE_PARENTHESIS reduce using rule 115 (COLOR_A -> COLOR_BLUE .)


state 219

    (116) COLOR_A -> COLOR_PURPLE .

    CLOSE_PARENTHESIS reduce using rule 116 (COLOR_A -> COLOR_PURPLE .)


state 220

    (117) COLOR_A -> COLOR_GREEN .

    CLOSE_PARENTHESIS reduce using rule 117 (COLOR_A -> COLOR_GREEN .)


state 221

    (118) COLOR_A -> COLOR_ORANGE .

    CLOSE_PARENTHESIS reduce using rule 118 (COLOR_A -> COLOR_ORANGE .)


state 222

    (153) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .

    ID              reduce using rule 153 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    IF              reduce using rule 153 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    FOR_KEYWORD     reduce using rule 153 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    WHILE_KEYWORD   reduce using rule 153 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    PRINT_KEYWORD   reduce using rule 153 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    INPUT_KEYWORD   reduce using rule 153 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    RETURN          reduce using rule 153 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    CLOSE_BRACKET   reduce using rule 153 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)


state 223

    (161) PLOT_C -> PLOT_I . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 272


state 224

    (162) PLOT_I -> CTE_INTEGER . PLOT_D
    (164) PLOT_D -> . COMMA PLOT_I
    (165) PLOT_D -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 274
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)

    PLOT_D                         shift and go to state 273
    EMPTY                          shift and go to state 275

state 225

    (163) PLOT_I -> CTE_FLOAT . PLOT_D
    (164) PLOT_D -> . COMMA PLOT_I
    (165) PLOT_D -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 274
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)

    PLOT_D                         shift and go to state 276
    EMPTY                          shift and go to state 275

state 226

    (154) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 154 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 154 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 154 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 154 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 154 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 154 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 154 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 154 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)


state 227

    (166) PLOT_E -> PLOT_F . SEMICOLON PLOT_G

    SEMICOLON       shift and go to state 277


state 228

    (167) PLOT_F -> CTE_INTEGER . PLOT_J
    (169) PLOT_J -> . COMMA PLOT_F
    (170) PLOT_J -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 279
    SEMICOLON       reduce using rule 211 (EMPTY -> .)

    PLOT_J                         shift and go to state 278
    EMPTY                          shift and go to state 280

state 229

    (168) PLOT_F -> CTE_FLOAT . PLOT_J
    (169) PLOT_J -> . COMMA PLOT_F
    (170) PLOT_J -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 279
    SEMICOLON       reduce using rule 211 (EMPTY -> .)

    PLOT_J                         shift and go to state 281
    EMPTY                          shift and go to state 280

state 230

    (155) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 155 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 155 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 155 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 155 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 155 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 155 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 155 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 155 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)


state 231

    (156) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 156 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 156 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 156 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 156 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 156 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 156 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 156 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 156 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)


state 232

    (157) PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 157 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 157 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 157 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 157 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 157 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 157 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 157 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 157 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)


state 233

    (158) PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 158 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 158 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 158 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 158 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 158 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 158 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 158 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 158 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)


state 234

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER . COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 282


state 235

    (160) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET . PLOT_M
    (175) PLOT_M -> . PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (176) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 285

    PLOT_M                         shift and go to state 283
    PLOT_N                         shift and go to state 284

state 236

    (64) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .

    ID              reduce using rule 64 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    IF              reduce using rule 64 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    FOR_KEYWORD     reduce using rule 64 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    WHILE_KEYWORD   reduce using rule 64 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    PRINT_KEYWORD   reduce using rule 64 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    INPUT_KEYWORD   reduce using rule 64 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    RETURN          reduce using rule 64 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    CLOSE_BRACKET   reduce using rule 64 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)


state 237

    (70) LLAMADAMODULO_C -> EXP check_types . LLAMADAMODULO_A LLAMADAMODULO_D
    (67) LLAMADAMODULO_A -> . COMMA incK LLAMADAMODULO_C
    (68) LLAMADAMODULO_A -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 287
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    ID              reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)

    LLAMADAMODULO_A                shift and go to state 286
    EMPTY                          shift and go to state 288

state 238

    (88) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool . BLOQUE CONDICION_A fill_end
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 289

state 239

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for . SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    SEMICOLON       shift and go to state 290


state 240

    (97) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while . BLOQUE goto_while
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 291

state 241

    (183) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad . SEMICOLON

    SEMICOLON       shift and go to state 292


state 242

    (184) PRINT_B -> CTE_STRING add_string PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 184 (PRINT_B -> CTE_STRING add_string PRINT_C .)


state 243

    (191) PRINT_C -> CONCATENATE . EXPRESIONESVARIAS add_con PRINT_D
    (192) PRINT_C -> CONCATENATE . CTE_STRING add_exp PRINT_D
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 294
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 293
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 244

    (193) PRINT_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 193 (PRINT_C -> EMPTY .)


state 245

    (185) PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 185 (PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .)


state 246

    (139) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A . SEMICOLON quad_input

    SEMICOLON       shift and go to state 295


state 247

    (142) INPUT_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET INPUT_B
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 296
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 248

    (143) INPUT_A -> EMPTY .

    SEMICOLON       reduce using rule 143 (INPUT_A -> EMPTY .)


state 249

    (202) EV_B -> AND add_ev EV_C .

    SEMICOLON       reduce using rule 202 (EV_B -> AND add_ev EV_C .)
    CLOSE_PARENTHESIS reduce using rule 202 (EV_B -> AND add_ev EV_C .)
    CONCATENATE     reduce using rule 202 (EV_B -> AND add_ev EV_C .)
    CTE_INTEGER     reduce using rule 202 (EV_B -> AND add_ev EV_C .)
    CTE_FLOAT       reduce using rule 202 (EV_B -> AND add_ev EV_C .)
    BOOLEAN         reduce using rule 202 (EV_B -> AND add_ev EV_C .)
    ID              reduce using rule 202 (EV_B -> AND add_ev EV_C .)


state 250

    (203) EV_B -> OR add_ev EV_C .

    SEMICOLON       reduce using rule 203 (EV_B -> OR add_ev EV_C .)
    CLOSE_PARENTHESIS reduce using rule 203 (EV_B -> OR add_ev EV_C .)
    CONCATENATE     reduce using rule 203 (EV_B -> OR add_ev EV_C .)
    CTE_INTEGER     reduce using rule 203 (EV_B -> OR add_ev EV_C .)
    CTE_FLOAT       reduce using rule 203 (EV_B -> OR add_ev EV_C .)
    BOOLEAN         reduce using rule 203 (EV_B -> OR add_ev EV_C .)
    ID              reduce using rule 203 (EV_B -> OR add_ev EV_C .)


state 251

    (208) EXP_RELOP_A -> RELOP add_relop EXP .

    AND             reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)
    OR              reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)
    SEMICOLON       reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CLOSE_PARENTHESIS reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CONCATENATE     reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CTE_INTEGER     reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CTE_FLOAT       reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)
    BOOLEAN         reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)
    ID              reduce using rule 208 (EXP_RELOP_A -> RELOP add_relop EXP .)


state 252

    (102) EXP_A -> PLUS append_operator . EXP
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 297
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 253

    (103) EXP_A -> MINS append_operator . EXP
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 298
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 254

    (108) TERMINO_A -> TIMES add_operator . TERMINO
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]

    TERMINO                        shift and go to state 299
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 255

    (109) TERMINO_A -> DIVIDE add_operator . TERMINO
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 211 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 211 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]

    TERMINO                        shift and go to state 300
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 256

    (134) VARS_CTE_B -> EXP VARS_CTE_C . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 301


state 257

    (135) VARS_CTE_C -> COMMA . VARS_CTE_B
    (134) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 302
    EXP                            shift and go to state 205
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 258

    (136) VARS_CTE_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 136 (VARS_CTE_C -> EMPTY .)


state 259

    (132) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . VARS_CTE_D
    (137) VARS_CTE_D -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (138) VARS_CTE_D -> . EMPTY
    (211) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 303
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    PLUS            reduce using rule 211 (EMPTY -> .)
    MINS            reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    SEMICOLON       reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 211 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 211 (EMPTY -> .)
    BOOLEAN         reduce using rule 211 (EMPTY -> .)
    ID              reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)

    VARS_CTE_D                     shift and go to state 304
    EMPTY                          shift and go to state 305

state 260

    (47) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .

    MODULE          reduce using rule 47 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)
    MAIN            reduce using rule 47 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)


state 261

    (58) MODULO_C -> TIPO_P ID add_variable_m MODULO_B . MODULO_D
    (60) MODULO_D -> . CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET
    (61) MODULO_D -> . EMPTY
    (211) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 307
    MODULE          reduce using rule 211 (EMPTY -> .)
    MAIN            reduce using rule 211 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 211 (EMPTY -> .) ]

    MODULO_D                       shift and go to state 306
    EMPTY                          shift and go to state 308

state 262

    (56) MODULO_B -> COMMA . MODULO_C
    (58) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (35) TIPO_P -> . INT
    (36) TIPO_P -> . FLOAT
    (37) TIPO_P -> . BOOL
    (38) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 309
    TIPO_P                         shift and go to state 111

state 263

    (57) MODULO_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 57 (MODULO_B -> EMPTY .)
    MODULE          reduce using rule 57 (MODULO_B -> EMPTY .)
    MAIN            reduce using rule 57 (MODULO_B -> EMPTY .)


state 264

    (15) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET . VARS_C
    (17) VARS_C -> . SEMICOLON VARS_D
    (18) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 78
    COMMA           shift and go to state 79

    VARS_C                         shift and go to state 310

state 265

    (78) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .

    ID              reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    IF              reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FOR_KEYWORD     reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    WHILE_KEYWORD   reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PRINT_KEYWORD   reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    INPUT_KEYWORD   reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RETURN          reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_BRACKET   reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    NOT             reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OPEN_PARENTHESIS reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PLUS            reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    MINS            reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_INTEGER     reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_FLOAT       reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    BOOLEAN         reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    SEMICOLON       reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    AND             reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OR              reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RELOP           reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TIMES           reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    DIVIDE          reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_PARENTHESIS reduce using rule 78 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)


state 266

    (85) ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .

    SEMICOLON       reduce using rule 85 (ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .)


state 267

    (83) ASIGNACION_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 311
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 268

    (81) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B .

    EQUAL           reduce using rule 81 (ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B .)


state 269

    (84) ASIGNACION_B -> EMPTY .

    EQUAL           reduce using rule 84 (ASIGNACION_B -> EMPTY .)


state 270

    (74) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 312


state 271

    (112) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 313


state 272

    (161) PLOT_C -> PLOT_I CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 314


state 273

    (162) PLOT_I -> CTE_INTEGER PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 162 (PLOT_I -> CTE_INTEGER PLOT_D .)


state 274

    (164) PLOT_D -> COMMA . PLOT_I
    (162) PLOT_I -> . CTE_INTEGER PLOT_D
    (163) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 224
    CTE_FLOAT       shift and go to state 225

    PLOT_I                         shift and go to state 315

state 275

    (165) PLOT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 165 (PLOT_D -> EMPTY .)


state 276

    (163) PLOT_I -> CTE_FLOAT PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 163 (PLOT_I -> CTE_FLOAT PLOT_D .)


state 277

    (166) PLOT_E -> PLOT_F SEMICOLON . PLOT_G
    (171) PLOT_G -> . PLOT_K CLOSE_PARENTHESIS SEMICOLON
    (172) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 318

    PLOT_G                         shift and go to state 316
    PLOT_K                         shift and go to state 317

state 278

    (167) PLOT_F -> CTE_INTEGER PLOT_J .

    SEMICOLON       reduce using rule 167 (PLOT_F -> CTE_INTEGER PLOT_J .)


state 279

    (169) PLOT_J -> COMMA . PLOT_F
    (167) PLOT_F -> . CTE_INTEGER PLOT_J
    (168) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_F                         shift and go to state 319

state 280

    (170) PLOT_J -> EMPTY .

    SEMICOLON       reduce using rule 170 (PLOT_J -> EMPTY .)


state 281

    (168) PLOT_F -> CTE_FLOAT PLOT_J .

    SEMICOLON       reduce using rule 168 (PLOT_F -> CTE_FLOAT PLOT_J .)


state 282

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA . CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 320


state 283

    (160) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .

    ID              reduce using rule 160 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    IF              reduce using rule 160 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    FOR_KEYWORD     reduce using rule 160 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    WHILE_KEYWORD   reduce using rule 160 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    PRINT_KEYWORD   reduce using rule 160 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    INPUT_KEYWORD   reduce using rule 160 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    RETURN          reduce using rule 160 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    CLOSE_BRACKET   reduce using rule 160 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)


state 284

    (175) PLOT_M -> PLOT_N . CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 321


state 285

    (176) PLOT_N -> CTE_STRING . PLOT_O
    (177) PLOT_O -> . COMMA PLOT_N
    (178) PLOT_O -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 323
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)

    PLOT_O                         shift and go to state 322
    EMPTY                          shift and go to state 324

state 286

    (70) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A . LLAMADAMODULO_D
    (72) LLAMADAMODULO_D -> . CLOSE_PARENTHESIS SEMICOLON
    (73) LLAMADAMODULO_D -> . EMPTY
    (211) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 326
    ID              reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 211 (EMPTY -> .) ]

    LLAMADAMODULO_D                shift and go to state 325
    EMPTY                          shift and go to state 327

state 287

    (67) LLAMADAMODULO_A -> COMMA . incK LLAMADAMODULO_C
    (69) incK -> .

    OPEN_PARENTHESIS reduce using rule 69 (incK -> .)
    PLUS            reduce using rule 69 (incK -> .)
    MINS            reduce using rule 69 (incK -> .)
    CTE_INTEGER     reduce using rule 69 (incK -> .)
    CTE_FLOAT       reduce using rule 69 (incK -> .)
    BOOLEAN         reduce using rule 69 (incK -> .)
    ID              reduce using rule 69 (incK -> .)
    COMMA           reduce using rule 69 (incK -> .)
    CLOSE_PARENTHESIS reduce using rule 69 (incK -> .)
    TIMES           reduce using rule 69 (incK -> .)
    DIVIDE          reduce using rule 69 (incK -> .)
    IF              reduce using rule 69 (incK -> .)
    FOR_KEYWORD     reduce using rule 69 (incK -> .)
    WHILE_KEYWORD   reduce using rule 69 (incK -> .)
    PRINT_KEYWORD   reduce using rule 69 (incK -> .)
    INPUT_KEYWORD   reduce using rule 69 (incK -> .)
    RETURN          reduce using rule 69 (incK -> .)
    CLOSE_BRACKET   reduce using rule 69 (incK -> .)

    incK                           shift and go to state 328

state 288

    (68) LLAMADAMODULO_A -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)
    ID              reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)
    IF              reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)
    RETURN          reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 68 (LLAMADAMODULO_A -> EMPTY .)


state 289

    (88) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE . CONDICION_A fill_end
    (91) CONDICION_A -> . gotoElse ELSE BLOQUE
    (92) CONDICION_A -> . EMPTY
    (93) gotoElse -> .
    (211) EMPTY -> .

    ELSE            reduce using rule 93 (gotoElse -> .)
    ID              reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)

    CONDICION_A                    shift and go to state 329
    gotoElse                       shift and go to state 330
    EMPTY                          shift and go to state 331

state 290

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON . ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (78) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 136

    ASIGNACION                     shift and go to state 332

state 291

    (97) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE . goto_while
    (98) goto_while -> .

    ID              reduce using rule 98 (goto_while -> .)
    IF              reduce using rule 98 (goto_while -> .)
    FOR_KEYWORD     reduce using rule 98 (goto_while -> .)
    WHILE_KEYWORD   reduce using rule 98 (goto_while -> .)
    PRINT_KEYWORD   reduce using rule 98 (goto_while -> .)
    INPUT_KEYWORD   reduce using rule 98 (goto_while -> .)
    RETURN          reduce using rule 98 (goto_while -> .)
    CLOSE_BRACKET   reduce using rule 98 (goto_while -> .)

    goto_while                     shift and go to state 333

state 292

    (183) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .

    ID              reduce using rule 183 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    IF              reduce using rule 183 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 183 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 183 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 183 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 183 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    RETURN          reduce using rule 183 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 183 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)


state 293

    (191) PRINT_C -> CONCATENATE EXPRESIONESVARIAS . add_con PRINT_D
    (195) add_con -> .

    CONCATENATE     reduce using rule 195 (add_con -> .)
    CLOSE_PARENTHESIS reduce using rule 195 (add_con -> .)

    add_con                        shift and go to state 334

state 294

    (192) PRINT_C -> CONCATENATE CTE_STRING . add_exp PRINT_D
    (194) add_exp -> .

    CONCATENATE     reduce using rule 194 (add_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 194 (add_exp -> .)

    add_exp                        shift and go to state 335

state 295

    (139) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON . quad_input
    (141) quad_input -> .

    ID              reduce using rule 141 (quad_input -> .)
    IF              reduce using rule 141 (quad_input -> .)
    FOR_KEYWORD     reduce using rule 141 (quad_input -> .)
    WHILE_KEYWORD   reduce using rule 141 (quad_input -> .)
    PRINT_KEYWORD   reduce using rule 141 (quad_input -> .)
    INPUT_KEYWORD   reduce using rule 141 (quad_input -> .)
    RETURN          reduce using rule 141 (quad_input -> .)
    CLOSE_BRACKET   reduce using rule 141 (quad_input -> .)

    quad_input                     shift and go to state 336

state 296

    (142) INPUT_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET INPUT_B

    CLOSE_SQUARE_BRACKET shift and go to state 337


state 297

    (102) EXP_A -> PLUS append_operator EXP .

    RELOP           reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    AND             reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    OR              reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    SEMICOLON       reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    CONCATENATE     reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    CTE_INTEGER     reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    CTE_FLOAT       reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    BOOLEAN         reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    ID              reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    COMMA           reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    IF              reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    RETURN          reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 102 (EXP_A -> PLUS append_operator EXP .)


state 298

    (103) EXP_A -> MINS append_operator EXP .

    RELOP           reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    AND             reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    OR              reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    SEMICOLON       reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    CONCATENATE     reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    CTE_INTEGER     reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    CTE_FLOAT       reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    BOOLEAN         reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    ID              reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    COMMA           reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    IF              reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    RETURN          reduce using rule 103 (EXP_A -> MINS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 103 (EXP_A -> MINS append_operator EXP .)


state 299

    (108) TERMINO_A -> TIMES add_operator TERMINO .

    PLUS            reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    MINS            reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    RELOP           reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    AND             reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    OR              reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    SEMICOLON       reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    CONCATENATE     reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    CTE_INTEGER     reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    CTE_FLOAT       reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    BOOLEAN         reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    ID              reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    COMMA           reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    IF              reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    RETURN          reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 108 (TERMINO_A -> TIMES add_operator TERMINO .)


state 300

    (109) TERMINO_A -> DIVIDE add_operator TERMINO .

    PLUS            reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    MINS            reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RELOP           reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    AND             reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    OR              reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    SEMICOLON       reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CONCATENATE     reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CTE_INTEGER     reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CTE_FLOAT       reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    BOOLEAN         reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    ID              reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    COMMA           reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    IF              reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RETURN          reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 109 (TERMINO_A -> DIVIDE add_operator TERMINO .)


state 301

    (134) VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .

    TIMES           reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    MINS            reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    AND             reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    OR              reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CONCATENATE     reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    ID              reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    IF              reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 134 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)


state 302

    (135) VARS_CTE_C -> COMMA VARS_CTE_B .

    CLOSE_PARENTHESIS reduce using rule 135 (VARS_CTE_C -> COMMA VARS_CTE_B .)


state 303

    (137) VARS_CTE_D -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 338
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 304

    (132) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .

    TIMES           reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    DIVIDE          reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PLUS            reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    MINS            reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    RELOP           reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    AND             reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    OR              reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    SEMICOLON       reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_PARENTHESIS reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CONCATENATE     reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_INTEGER     reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_FLOAT       reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    BOOLEAN         reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    ID              reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_SQUARE_BRACKET reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    COMMA           reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    IF              reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    FOR_KEYWORD     reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    WHILE_KEYWORD   reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PRINT_KEYWORD   reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    INPUT_KEYWORD   reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    RETURN          reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_BRACKET   reduce using rule 132 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)


state 305

    (138) VARS_CTE_D -> EMPTY .

    TIMES           reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    DIVIDE          reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    PLUS            reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    MINS            reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    RELOP           reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    AND             reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    OR              reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    SEMICOLON       reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    CONCATENATE     reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    CTE_INTEGER     reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    CTE_FLOAT       reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    BOOLEAN         reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    ID              reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    COMMA           reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    IF              reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    RETURN          reduce using rule 138 (VARS_CTE_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 138 (VARS_CTE_D -> EMPTY .)


state 306

    (58) MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .

    MODULE          reduce using rule 58 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    MAIN            reduce using rule 58 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 58 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)


state 307

    (60) MODULO_D -> CLOSE_PARENTHESIS . param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET
    (63) param_table -> .

    OPEN_BRACKET    reduce using rule 63 (param_table -> .)

    param_table                    shift and go to state 339

state 308

    (61) MODULO_D -> EMPTY .

    MODULE          reduce using rule 61 (MODULO_D -> EMPTY .)
    MAIN            reduce using rule 61 (MODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 61 (MODULO_D -> EMPTY .)


state 309

    (56) MODULO_B -> COMMA MODULO_C .

    CLOSE_PARENTHESIS reduce using rule 56 (MODULO_B -> COMMA MODULO_C .)
    MODULE          reduce using rule 56 (MODULO_B -> COMMA MODULO_C .)
    MAIN            reduce using rule 56 (MODULO_B -> COMMA MODULO_C .)


state 310

    (15) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .

    SEMICOLON       reduce using rule 15 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .)
    COMMA           reduce using rule 15 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .)


state 311

    (83) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 340


state 312

    (74) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 74 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 74 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 74 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 74 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 74 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 74 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 74 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 74 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 313

    (112) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 112 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 112 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 112 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 112 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 112 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 112 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 112 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 112 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)


state 314

    (161) PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 161 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 161 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 161 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 161 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 161 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 161 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 161 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 161 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)


state 315

    (164) PLOT_D -> COMMA PLOT_I .

    CLOSE_PARENTHESIS reduce using rule 164 (PLOT_D -> COMMA PLOT_I .)


state 316

    (166) PLOT_E -> PLOT_F SEMICOLON PLOT_G .

    ID              reduce using rule 166 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    IF              reduce using rule 166 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    FOR_KEYWORD     reduce using rule 166 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    WHILE_KEYWORD   reduce using rule 166 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    PRINT_KEYWORD   reduce using rule 166 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    INPUT_KEYWORD   reduce using rule 166 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    RETURN          reduce using rule 166 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    CLOSE_BRACKET   reduce using rule 166 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)


state 317

    (171) PLOT_G -> PLOT_K . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 341


state 318

    (172) PLOT_K -> CTE_STRING . PLOT_H
    (173) PLOT_H -> . COMMA PLOT_K
    (174) PLOT_H -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 343
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)

    PLOT_H                         shift and go to state 342
    EMPTY                          shift and go to state 344

state 319

    (169) PLOT_J -> COMMA PLOT_F .

    SEMICOLON       reduce using rule 169 (PLOT_J -> COMMA PLOT_F .)


state 320

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER . COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 345


state 321

    (175) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET . SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 346


state 322

    (176) PLOT_N -> CTE_STRING PLOT_O .

    CLOSE_SQUARE_BRACKET reduce using rule 176 (PLOT_N -> CTE_STRING PLOT_O .)


state 323

    (177) PLOT_O -> COMMA . PLOT_N
    (176) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 285

    PLOT_N                         shift and go to state 347

state 324

    (178) PLOT_O -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 178 (PLOT_O -> EMPTY .)


state 325

    (70) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .

    ID              reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    IF              reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    FOR_KEYWORD     reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    WHILE_KEYWORD   reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    PRINT_KEYWORD   reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    INPUT_KEYWORD   reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    RETURN          reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_BRACKET   reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 70 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)


state 326

    (72) LLAMADAMODULO_D -> CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 348


state 327

    (73) LLAMADAMODULO_D -> EMPTY .

    ID              reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)
    IF              reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)
    RETURN          reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 73 (LLAMADAMODULO_D -> EMPTY .)


state 328

    (67) LLAMADAMODULO_A -> COMMA incK . LLAMADAMODULO_C
    (70) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    COMMA           reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    IF              reduce using rule 211 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 211 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 211 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 211 (EMPTY -> .)
    RETURN          reduce using rule 211 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]
  ! ID              [ reduce using rule 211 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 349
    EXP                            shift and go to state 182
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 329

    (88) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A . fill_end
    (89) fill_end -> .

    ID              reduce using rule 89 (fill_end -> .)
    IF              reduce using rule 89 (fill_end -> .)
    FOR_KEYWORD     reduce using rule 89 (fill_end -> .)
    WHILE_KEYWORD   reduce using rule 89 (fill_end -> .)
    PRINT_KEYWORD   reduce using rule 89 (fill_end -> .)
    INPUT_KEYWORD   reduce using rule 89 (fill_end -> .)
    RETURN          reduce using rule 89 (fill_end -> .)
    CLOSE_BRACKET   reduce using rule 89 (fill_end -> .)

    fill_end                       shift and go to state 350

state 330

    (91) CONDICION_A -> gotoElse . ELSE BLOQUE

    ELSE            shift and go to state 351


state 331

    (92) CONDICION_A -> EMPTY .

    ID              reduce using rule 92 (CONDICION_A -> EMPTY .)
    IF              reduce using rule 92 (CONDICION_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 92 (CONDICION_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 92 (CONDICION_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 92 (CONDICION_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 92 (CONDICION_A -> EMPTY .)
    RETURN          reduce using rule 92 (CONDICION_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 92 (CONDICION_A -> EMPTY .)


state 332

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION . CLOSE_PARENTHESIS BLOQUE repeat_for

    CLOSE_PARENTHESIS shift and go to state 352


state 333

    (97) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .

    ID              reduce using rule 97 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    IF              reduce using rule 97 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    FOR_KEYWORD     reduce using rule 97 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    WHILE_KEYWORD   reduce using rule 97 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    PRINT_KEYWORD   reduce using rule 97 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    INPUT_KEYWORD   reduce using rule 97 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    RETURN          reduce using rule 97 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    CLOSE_BRACKET   reduce using rule 97 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)


state 334

    (191) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con . PRINT_D
    (196) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (197) PRINT_D -> . EMPTY
    (211) EMPTY -> .

    CONCATENATE     shift and go to state 353
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)

    PRINT_D                        shift and go to state 354
    EMPTY                          shift and go to state 355

state 335

    (192) PRINT_C -> CONCATENATE CTE_STRING add_exp . PRINT_D
    (196) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (197) PRINT_D -> . EMPTY
    (211) EMPTY -> .

    CONCATENATE     shift and go to state 353
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)

    PRINT_D                        shift and go to state 356
    EMPTY                          shift and go to state 355

state 336

    (139) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .

    ID              reduce using rule 139 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    IF              reduce using rule 139 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    FOR_KEYWORD     reduce using rule 139 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    WHILE_KEYWORD   reduce using rule 139 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    PRINT_KEYWORD   reduce using rule 139 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    INPUT_KEYWORD   reduce using rule 139 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    RETURN          reduce using rule 139 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    CLOSE_BRACKET   reduce using rule 139 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)


state 337

    (142) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . INPUT_B
    (144) INPUT_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET shift and go to state 357

    INPUT_B                        shift and go to state 358

state 338

    (137) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 359


state 339

    (60) MODULO_D -> CLOSE_PARENTHESIS param_table . OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 360


state 340

    (83) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    EQUAL           reduce using rule 83 (ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 341

    (171) PLOT_G -> PLOT_K CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 361


state 342

    (172) PLOT_K -> CTE_STRING PLOT_H .

    CLOSE_PARENTHESIS reduce using rule 172 (PLOT_K -> CTE_STRING PLOT_H .)


state 343

    (173) PLOT_H -> COMMA . PLOT_K
    (172) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 318

    PLOT_K                         shift and go to state 362

state 344

    (174) PLOT_H -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 174 (PLOT_H -> EMPTY .)


state 345

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA . CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 363


state 346

    (175) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON . OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    OPEN_SQUARE_BRACKET shift and go to state 364


state 347

    (177) PLOT_O -> COMMA PLOT_N .

    CLOSE_SQUARE_BRACKET reduce using rule 177 (PLOT_O -> COMMA PLOT_N .)


state 348

    (72) LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_PARENTHESIS reduce using rule 72 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)


state 349

    (67) LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .

    CLOSE_PARENTHESIS reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    ID              reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    IF              reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    FOR_KEYWORD     reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    WHILE_KEYWORD   reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    PRINT_KEYWORD   reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    INPUT_KEYWORD   reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    RETURN          reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    CLOSE_BRACKET   reduce using rule 67 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)


state 350

    (88) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .

    ID              reduce using rule 88 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    IF              reduce using rule 88 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    FOR_KEYWORD     reduce using rule 88 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    WHILE_KEYWORD   reduce using rule 88 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    PRINT_KEYWORD   reduce using rule 88 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    INPUT_KEYWORD   reduce using rule 88 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    RETURN          reduce using rule 88 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    CLOSE_BRACKET   reduce using rule 88 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)


state 351

    (91) CONDICION_A -> gotoElse ELSE . BLOQUE
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 365

state 352

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS . BLOQUE repeat_for
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 366

state 353

    (196) PRINT_D -> CONCATENATE . add_sign PRINT_B
    (198) add_sign -> .

    CTE_STRING      reduce using rule 198 (add_sign -> .)
    NOT             reduce using rule 198 (add_sign -> .)
    OPEN_PARENTHESIS reduce using rule 198 (add_sign -> .)
    PLUS            reduce using rule 198 (add_sign -> .)
    MINS            reduce using rule 198 (add_sign -> .)
    CTE_INTEGER     reduce using rule 198 (add_sign -> .)
    CTE_FLOAT       reduce using rule 198 (add_sign -> .)
    BOOLEAN         reduce using rule 198 (add_sign -> .)
    ID              reduce using rule 198 (add_sign -> .)
    CONCATENATE     reduce using rule 198 (add_sign -> .)
    AND             reduce using rule 198 (add_sign -> .)
    OR              reduce using rule 198 (add_sign -> .)
    RELOP           reduce using rule 198 (add_sign -> .)
    TIMES           reduce using rule 198 (add_sign -> .)
    DIVIDE          reduce using rule 198 (add_sign -> .)
    CLOSE_PARENTHESIS reduce using rule 198 (add_sign -> .)

    add_sign                       shift and go to state 367

state 354

    (191) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 191 (PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .)


state 355

    (197) PRINT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 197 (PRINT_D -> EMPTY .)


state 356

    (192) PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 192 (PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .)


state 357

    (144) INPUT_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (100) EXP -> . TERMINO pop_exp EXP_A
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (211) EMPTY -> .
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    EXP                            shift and go to state 368
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 170
    VARS_CTE                       shift and go to state 104

state 358

    (142) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .

    SEMICOLON       reduce using rule 142 (INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .)


state 359

    (137) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    TIMES           reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    DIVIDE          reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PLUS            reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    MINS            reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    RELOP           reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    AND             reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    OR              reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    SEMICOLON       reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CONCATENATE     reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_INTEGER     reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_FLOAT       reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    BOOLEAN         reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    ID              reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_SQUARE_BRACKET reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    IF              reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    FOR_KEYWORD     reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    RETURN          reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 137 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 360

    (60) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET . VARS add_count add_start BLOQUE CLOSE_BRACKET
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 369

state 361

    (171) PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 171 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 171 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 171 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 171 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 171 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 171 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 171 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 171 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)


state 362

    (173) PLOT_H -> COMMA PLOT_K .

    CLOSE_PARENTHESIS reduce using rule 173 (PLOT_H -> COMMA PLOT_K .)


state 363

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER . SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 370


state 364

    (175) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET . PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (179) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 372

    PLOT_P                         shift and go to state 371

state 365

    (91) CONDICION_A -> gotoElse ELSE BLOQUE .

    ID              reduce using rule 91 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    IF              reduce using rule 91 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    FOR_KEYWORD     reduce using rule 91 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    WHILE_KEYWORD   reduce using rule 91 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    PRINT_KEYWORD   reduce using rule 91 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    INPUT_KEYWORD   reduce using rule 91 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    RETURN          reduce using rule 91 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    CLOSE_BRACKET   reduce using rule 91 (CONDICION_A -> gotoElse ELSE BLOQUE .)


state 366

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE . repeat_for
    (95) repeat_for -> .

    ID              reduce using rule 95 (repeat_for -> .)
    IF              reduce using rule 95 (repeat_for -> .)
    FOR_KEYWORD     reduce using rule 95 (repeat_for -> .)
    WHILE_KEYWORD   reduce using rule 95 (repeat_for -> .)
    PRINT_KEYWORD   reduce using rule 95 (repeat_for -> .)
    INPUT_KEYWORD   reduce using rule 95 (repeat_for -> .)
    RETURN          reduce using rule 95 (repeat_for -> .)
    CLOSE_BRACKET   reduce using rule 95 (repeat_for -> .)

    repeat_for                     shift and go to state 373

state 367

    (196) PRINT_D -> CONCATENATE add_sign . PRINT_B
    (184) PRINT_B -> . CTE_STRING add_string PRINT_C
    (185) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (199) EXPRESIONESVARIAS -> . NOT EV_C
    (200) EXPRESIONESVARIAS -> . EV_C
    (201) EV_C -> . EXP_RELOP EV_B
    (206) EXP_RELOP -> . EXP EXP_RELOP_A
    (207) EXP_RELOP -> . EMPTY
    (100) EXP -> . TERMINO pop_exp EXP_A
    (211) EMPTY -> .
    (106) TERMINO -> . FACTOR pop_term TERMINO_A
    (119) FACTOR -> . FACTOR_A
    (120) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (121) FACTOR_A -> . PLUS FACTOR_C
    (122) FACTOR_A -> . MINS FACTOR_C
    (123) FACTOR_A -> . FACTOR_C
    (124) FACTOR_A -> . EMPTY
    (126) FACTOR_C -> . VARS_CTE
    (127) VARS_CTE -> . CTE_INTEGER
    (128) VARS_CTE -> . CTE_FLOAT
    (129) VARS_CTE -> . BOOLEAN
    (130) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 140
    NOT             shift and go to state 92
    AND             reduce using rule 211 (EMPTY -> .)
    OR              reduce using rule 211 (EMPTY -> .)
    CONCATENATE     reduce using rule 211 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (EMPTY -> .)
    TIMES           reduce using rule 211 (EMPTY -> .)
    DIVIDE          reduce using rule 211 (EMPTY -> .)
    RELOP           reduce using rule 211 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 211 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 211 (EMPTY -> .) ]

    PRINT_B                        shift and go to state 374
    EXPRESIONESVARIAS              shift and go to state 141
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 368

    (144) INPUT_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 375


state 369

    (60) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS . add_count add_start BLOQUE CLOSE_BRACKET
    (3) add_count -> .

    OPEN_BRACKET    reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 376

state 370

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON . CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 377


state 371

    (175) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 378


state 372

    (179) PLOT_P -> CTE_STRING . PLOT_Q
    (180) PLOT_Q -> . COMMA PLOT_P
    (181) PLOT_Q -> . EMPTY
    (211) EMPTY -> .

    COMMA           shift and go to state 380
    CLOSE_SQUARE_BRACKET reduce using rule 211 (EMPTY -> .)

    PLOT_Q                         shift and go to state 379
    EMPTY                          shift and go to state 381

state 373

    (94) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .

    ID              reduce using rule 94 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    IF              reduce using rule 94 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    FOR_KEYWORD     reduce using rule 94 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    WHILE_KEYWORD   reduce using rule 94 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    PRINT_KEYWORD   reduce using rule 94 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    INPUT_KEYWORD   reduce using rule 94 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    RETURN          reduce using rule 94 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    CLOSE_BRACKET   reduce using rule 94 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)


state 374

    (196) PRINT_D -> CONCATENATE add_sign PRINT_B .

    CLOSE_PARENTHESIS reduce using rule 196 (PRINT_D -> CONCATENATE add_sign PRINT_B .)


state 375

    (144) INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 144 (INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 376

    (60) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count . add_start BLOQUE CLOSE_BRACKET
    (62) add_start -> .

    OPEN_BRACKET    reduce using rule 62 (add_start -> .)

    add_start                      shift and go to state 382

state 377

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING . COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 383


state 378

    (175) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 384


state 379

    (179) PLOT_P -> CTE_STRING PLOT_Q .

    CLOSE_SQUARE_BRACKET reduce using rule 179 (PLOT_P -> CTE_STRING PLOT_Q .)


state 380

    (180) PLOT_Q -> COMMA . PLOT_P
    (179) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 372

    PLOT_P                         shift and go to state 385

state 381

    (181) PLOT_Q -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 181 (PLOT_Q -> EMPTY .)


state 382

    (60) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start . BLOQUE CLOSE_BRACKET
    (21) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 386

state 383

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 387


state 384

    (175) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 388


state 385

    (180) PLOT_Q -> COMMA PLOT_P .

    CLOSE_SQUARE_BRACKET reduce using rule 180 (PLOT_Q -> COMMA PLOT_P .)


state 386

    (60) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 389


state 387

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 390


state 388

    (175) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 175 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 175 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 175 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 175 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 175 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 175 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 175 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 175 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)


state 389

    (60) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET .

    MODULE          reduce using rule 60 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET .)
    MAIN            reduce using rule 60 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 60 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET VARS add_count add_start BLOQUE CLOSE_BRACKET .)


state 390

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 391


state 391

    (159) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 159 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 159 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 159 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 159 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 159 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 159 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 159 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 159 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINS in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINS in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINS in state 92 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 92 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 92 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINS in state 100 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 100 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 100 resolved as shift
WARNING: shift/reduce conflict for ID in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINS in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINS in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINS in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 159 resolved as shift
WARNING: shift/reduce conflict for MINS in state 159 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MINS in state 160 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 191 resolved as shift
WARNING: shift/reduce conflict for MINS in state 191 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 191 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 191 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 192 resolved as shift
WARNING: shift/reduce conflict for MINS in state 192 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 192 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 192 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 193 resolved as shift
WARNING: shift/reduce conflict for MINS in state 193 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 193 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 193 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 193 resolved as shift
WARNING: shift/reduce conflict for ID in state 193 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 211 resolved as shift
WARNING: shift/reduce conflict for MINS in state 211 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 243 resolved as shift
WARNING: shift/reduce conflict for MINS in state 243 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 247 resolved as shift
WARNING: shift/reduce conflict for MINS in state 247 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 252 resolved as shift
WARNING: shift/reduce conflict for MINS in state 252 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 252 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 252 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 252 resolved as shift
WARNING: shift/reduce conflict for ID in state 252 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 253 resolved as shift
WARNING: shift/reduce conflict for MINS in state 253 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 253 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 253 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 253 resolved as shift
WARNING: shift/reduce conflict for ID in state 253 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 254 resolved as shift
WARNING: shift/reduce conflict for MINS in state 254 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 254 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 254 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 254 resolved as shift
WARNING: shift/reduce conflict for ID in state 254 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 255 resolved as shift
WARNING: shift/reduce conflict for MINS in state 255 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 255 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 255 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 255 resolved as shift
WARNING: shift/reduce conflict for ID in state 255 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 257 resolved as shift
WARNING: shift/reduce conflict for MINS in state 257 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 261 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 267 resolved as shift
WARNING: shift/reduce conflict for MINS in state 267 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 286 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 303 resolved as shift
WARNING: shift/reduce conflict for MINS in state 303 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 328 resolved as shift
WARNING: shift/reduce conflict for MINS in state 328 resolved as shift
WARNING: shift/reduce conflict for ID in state 328 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 357 resolved as shift
WARNING: shift/reduce conflict for MINS in state 357 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 367 resolved as shift
WARNING: shift/reduce conflict for MINS in state 367 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (FACTOR_A -> EMPTY)
WARNING: rejected rule (EXP_RELOP -> EMPTY) in state 96
WARNING: Rule (EXP_RELOP -> EMPTY) is never reduced
