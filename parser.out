Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CREATE
    CTE_CHAR
    E
    FALSE
    PI
    QUOTE
    RETURN
    TRUE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET
Rule 2     addfunction -> <empty>
Rule 3     PROGRAMA_A -> MODULO PROGRAMA_A
Rule 4     PROGRAMA_A -> EMPTY
Rule 5     VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A
Rule 6     VARS_A -> TIPO_P VARS_B
Rule 7     VARS_A -> TIPO_S VARS_B
Rule 8     VARS_B -> ID add_variable VARS_E VARS_C
Rule 9     add_variable -> <empty>
Rule 10    VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F
Rule 11    VARS_E -> EMPTY
Rule 12    VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C
Rule 13    VARS_F -> VARS_C
Rule 14    VARS_C -> SEMICOLON VARS_D
Rule 15    VARS_C -> COMMA VARS_B
Rule 16    VARS_D -> CLOSE_BRACKET
Rule 17    VARS_D -> VARS_A
Rule 18    BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET
Rule 19    ESTATUTO_A -> ESTATUTO ESTATUTO_A
Rule 20    ESTATUTO_A -> EMPTY
Rule 21    ESTATUTO -> ASIGNACION
Rule 22    ESTATUTO -> CONDICION
Rule 23    ESTATUTO -> NOMBRAR
Rule 24    ESTATUTO -> FOR
Rule 25    ESTATUTO -> WHILE
Rule 26    ESTATUTO -> PRINT
Rule 27    ESTATUTO -> PLOT
Rule 28    ESTATUTO -> LLAMADAMODULO
Rule 29    ESTATUTO -> INPUT
Rule 30    ESTATUTO -> COLOR
Rule 31    TIPO_P -> INT
Rule 32    TIPO_P -> FLOAT
Rule 33    TIPO_P -> BOOL
Rule 34    TIPO_P -> CHAR
Rule 35    TIPO_S -> TYPE_GRAPH
Rule 36    TIPO_S -> TYPE_PIECHART
Rule 37    TIPO_S -> TYPE_BARCHART
Rule 38    TIPO_S -> TYPE_HORBARCHART
Rule 39    TIPO_S -> TYPE_DONUTGRAPH
Rule 40    TIPO_S -> TYPE_NETWORK
Rule 41    TIPO_S -> TYPE_VENN
Rule 42    TIPO_S -> TYPE_RADARCHART
Rule 43    MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C change_scope
Rule 44    change_scope -> <empty>
Rule 45    add_functionr -> <empty>
Rule 46    MODULO_A -> VOID
Rule 47    MODULO_A -> TIPO_P
Rule 48    MODULO_B -> COMMA MODULO_C
Rule 49    MODULO_B -> EMPTY
Rule 50    MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET
Rule 51    LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C
Rule 52    LLAMADAMODULO_A -> COMMA LLAMADAMODULO_C
Rule 53    LLAMADAMODULO_A -> EMPTY
Rule 54    LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON
Rule 55    NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 56    NOMBRAR_A -> NAME
Rule 57    NOMBRAR_A -> NAMEX
Rule 58    NOMBRAR_A -> NAMEY
Rule 59    ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
Rule 60    quad -> <empty>
Rule 61    addStackO -> <empty>
Rule 62    ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
Rule 63    ASIGNACION_A -> EMPTY
Rule 64    ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 65    ASIGNACION_B -> EMPTY
Rule 66    ASIGNACION_C -> EQUAL EXPRESIONESVARIAS
Rule 67    ASIGNACION_C -> EQUAL CTE_STRING
Rule 68    CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
Rule 69    fill_end -> <empty>
Rule 70    check_bool -> <empty>
Rule 71    CONDICION_A -> gotoElse ELSE BLOQUE
Rule 72    CONDICION_A -> EMPTY
Rule 73    gotoElse -> <empty>
Rule 74    FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
Rule 75    repeat_for -> <empty>
Rule 76    bool_for -> <empty>
Rule 77    WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
Rule 78    goto_while -> <empty>
Rule 79    bool_while -> <empty>
Rule 80    EXP -> TERMINO EXP_A pop_exp
Rule 81    pop_exp -> <empty>
Rule 82    EXP_A -> PLUS EXP
Rule 83    EXP_A -> MINS EXP
Rule 84    EXP_A -> EMPTY
Rule 85    TERMINO -> FACTOR TERMINO_A pop_term
Rule 86    pop_term -> <empty>
Rule 87    TERMINO_A -> TIMES TERMINO
Rule 88    TERMINO_A -> DIVIDE TERMINO
Rule 89    TERMINO_A -> EMPTY
Rule 90    COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
Rule 91    COLOR_A -> COLOR_RED
Rule 92    COLOR_A -> COLOR_BLACK
Rule 93    COLOR_A -> COLOR_BLUE
Rule 94    COLOR_A -> COLOR_PURPLE
Rule 95    COLOR_A -> COLOR_GREEN
Rule 96    COLOR_A -> COLOR_ORANGE
Rule 97    FACTOR -> FACTOR_A
Rule 98    FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
Rule 99    FACTOR_A -> PLUS FACTOR_C
Rule 100   FACTOR_A -> MINS FACTOR_C
Rule 101   FACTOR_A -> FACTOR_C
Rule 102   FACTOR_A -> EMPTY
Rule 103   FACTOR_B -> EXPRESIONESVARIAS FACTOR_C
Rule 104   FACTOR_C -> VARS_CTE
Rule 105   VARS_CTE -> CTE_INTEGER
Rule 106   VARS_CTE -> CTE_FLOAT
Rule 107   VARS_CTE -> BOOLEAN
Rule 108   VARS_CTE -> ID VARS_CTE_A
Rule 109   VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B
Rule 110   VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
Rule 111   VARS_CTE_A -> EMPTY
Rule 112   VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS
Rule 113   VARS_CTE_C -> COMMA VARS_CTE_B
Rule 114   VARS_CTE_C -> EMPTY
Rule 115   VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 116   VARS_CTE_D -> EMPTY
Rule 117   INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON
Rule 118   INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
Rule 119   INPUT_A -> EMPTY
Rule 120   INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 121   PLOT -> ID POINT PLOT_B
Rule 122   PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C
Rule 123   PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E
Rule 124   PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E
Rule 125   PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E
Rule 126   PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E
Rule 127   PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E
Rule 128   PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
Rule 129   PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 130   PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON
Rule 131   PLOT_I -> CTE_INTEGER PLOT_D
Rule 132   PLOT_I -> CTE_FLOAT PLOT_D
Rule 133   PLOT_D -> COMMA PLOT_I
Rule 134   PLOT_D -> EMPTY
Rule 135   PLOT_E -> PLOT_F SEMICOLON PLOT_G
Rule 136   PLOT_F -> CTE_INTEGER PLOT_J
Rule 137   PLOT_F -> CTE_FLOAT PLOT_J
Rule 138   PLOT_J -> COMMA PLOT_F
Rule 139   PLOT_J -> EMPTY
Rule 140   PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON
Rule 141   PLOT_K -> CTE_STRING PLOT_H
Rule 142   PLOT_H -> COMMA PLOT_K
Rule 143   PLOT_H -> EMPTY
Rule 144   PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
Rule 145   PLOT_N -> CTE_STRING PLOT_O
Rule 146   PLOT_O -> COMMA PLOT_N
Rule 147   PLOT_O -> EMPTY
Rule 148   PLOT_P -> CTE_STRING PLOT_Q
Rule 149   PLOT_Q -> COMMA PLOT_P
Rule 150   PLOT_Q -> EMPTY
Rule 151   PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
Rule 152   PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON
Rule 153   PRINT_B -> CTE_STRING print_string PRINT_C
Rule 154   PRINT_B -> EXPRESIONESVARIAS
Rule 155   print_string -> <empty>
Rule 156   PRINT_C -> PLUS PRINT_B
Rule 157   PRINT_C -> EMPTY
Rule 158   EXPRESIONESVARIAS -> NOT EV_C
Rule 159   EXPRESIONESVARIAS -> EV_C
Rule 160   EV_C -> EXP_RELOP EV_B
Rule 161   EV_B -> AND
Rule 162   EV_B -> OR
Rule 163   EV_B -> EMPTY
Rule 164   EXP_RELOP -> EXP EXP_RELOP_A
Rule 165   EXP_RELOP -> EMPTY
Rule 166   EXP_RELOP_A -> RELOP EXP
Rule 167   EXP_RELOP_A -> EMPTY
Rule 168   EMPTY -> <empty>

Terminals, with rules where they appear

AND                  : 161
BOOL                 : 33
BOOLEAN              : 107
CHAR                 : 34
CLOSE_BRACKET        : 1 16 18 50
CLOSE_PARENTHESIS    : 50 54 55 68 74 77 90 98 112 129 130 140 144 152
CLOSE_SQUARE_BRACKET : 10 12 62 64 110 115 118 120 144 144
COLOR_BLACK          : 92
COLOR_BLUE           : 93
COLOR_GREEN          : 95
COLOR_KEYWORD        : 90
COLOR_ORANGE         : 96
COLOR_PURPLE         : 94
COLOR_RED            : 91
COMMA                : 15 48 52 113 129 129 129 133 138 142 146 149
CREATE               : 
CREATED              : 126
CREATEG              : 122
CREATEGB             : 124
CREATEGBH            : 125
CREATEN              : 128
CREATEPC             : 123
CREATER              : 127
CREATEV              : 129
CTE_CHAR             : 
CTE_FLOAT            : 106 132 137
CTE_INTEGER          : 10 12 105 129 129 129 131 136
CTE_STRING           : 55 67 129 129 141 145 148 153
DIVIDE               : 88
E                    : 
ELSE                 : 71
EQUAL                : 66 67
FALSE                : 
FLOAT                : 32
FOR_KEYWORD          : 74
ID                   : 1 8 43 50 51 55 59 90 108 117 121
IF                   : 68
INPUTSYMBOL          : 117
INPUT_KEYWORD        : 117
INT                  : 31
MAIN                 : 1
MINS                 : 83 100
MODULE               : 43
NAME                 : 56
NAMEX                : 57
NAMEY                : 58
NOT                  : 158
OPEN_BRACKET         : 1 5 18 50
OPEN_PARENTHESIS     : 43 51 55 68 74 77 90 98 109 122 123 124 125 126 127 128 129 151
OPEN_SQUARE_BRACKET  : 10 12 62 64 110 115 118 120 128 144
OR                   : 162
PI                   : 
PLUS                 : 82 99 156
POINT                : 55 90 121
PRINT_KEYWORD        : 151
PROGRAM              : 1
QUOTE                : 
RELOP                : 166
RETURN               : 
SEMICOLON            : 14 54 55 59 74 90 117 129 129 130 135 140 144 144 152
TIMES                : 87
TRUE                 : 
TYPE_BARCHART        : 37
TYPE_DONUTGRAPH      : 39
TYPE_GRAPH           : 35
TYPE_HORBARCHART     : 38
TYPE_NETWORK         : 40
TYPE_PIECHART        : 36
TYPE_RADARCHART      : 42
TYPE_VENN            : 41
VARS_KEYWORD         : 5
VOID                 : 46
WHILE_KEYWORD        : 77
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 21 74 74
ASIGNACION_A         : 59
ASIGNACION_B         : 62
ASIGNACION_C         : 59
BLOQUE               : 1 50 68 71 74 77
COLOR                : 30
COLOR_A              : 90
CONDICION            : 22
CONDICION_A          : 68
EMPTY                : 4 11 20 49 53 63 65 72 84 89 102 111 114 116 119 134 139 143 147 150 157 163 165 167
ESTATUTO             : 19
ESTATUTO_A           : 18 19
EV_B                 : 160
EV_C                 : 158 159
EXP                  : 54 62 64 82 83 110 112 115 118 120 164 166
EXPRESIONESVARIAS    : 66 68 74 77 103 154
EXP_A                : 80
EXP_RELOP            : 160
EXP_RELOP_A          : 164
FACTOR               : 85
FACTOR_A             : 97
FACTOR_B             : 98
FACTOR_C             : 99 100 101 103
FOR                  : 24
INPUT                : 29
INPUT_A              : 117
INPUT_B              : 118
LLAMADAMODULO        : 28
LLAMADAMODULO_A      : 54
LLAMADAMODULO_C      : 51 52
MODULO               : 3
MODULO_A             : 43
MODULO_B             : 50
MODULO_C             : 43 48
NOMBRAR              : 23
NOMBRAR_A            : 55
PLOT                 : 27
PLOT_B               : 121
PLOT_C               : 122
PLOT_D               : 131 132
PLOT_E               : 123 124 125 126 127
PLOT_F               : 135 138
PLOT_G               : 135
PLOT_H               : 141
PLOT_I               : 130 133
PLOT_J               : 136 137
PLOT_K               : 140 142
PLOT_M               : 128
PLOT_N               : 144 146
PLOT_O               : 145
PLOT_P               : 144 149
PLOT_Q               : 148
PRINT                : 26
PRINT_A              : 151
PRINT_B              : 152 156
PRINT_C              : 153
PROGRAMA             : 0
PROGRAMA_A           : 1 3
TERMINO              : 80 87 88
TERMINO_A            : 85
TIPO_P               : 6 47 50
TIPO_S               : 7
VARS                 : 1 50
VARS_A               : 5 17
VARS_B               : 6 7 15
VARS_C               : 8 12 13
VARS_CTE             : 104
VARS_CTE_A           : 108
VARS_CTE_B           : 109 113
VARS_CTE_C           : 112
VARS_CTE_D           : 110
VARS_D               : 14
VARS_E               : 8
VARS_F               : 10
WHILE                : 25
addStackO            : 59
add_functionr        : 43
add_variable         : 8
addfunction          : 1
bool_for             : 74
bool_while           : 77
change_scope         : 43
check_bool           : 68
fill_end             : 68
gotoElse             : 71
goto_while           : 77
pop_exp              : 80
pop_term             : 85
print_string         : 153
quad                 : 59
repeat_for           : 74

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET
    (2) addfunction -> .

    OPEN_BRACKET    reduce using rule 2 (addfunction -> .)

    addfunction                    shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addfunction . OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET . VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET
    (5) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 6

state 6

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS . PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET
    (3) PROGRAMA_A -> . MODULO PROGRAMA_A
    (4) PROGRAMA_A -> . EMPTY
    (43) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C change_scope
    (168) EMPTY -> .

    MODULE          shift and go to state 11
    MAIN            reduce using rule 168 (EMPTY -> .)

    PROGRAMA_A                     shift and go to state 8
    MODULO                         shift and go to state 9
    EMPTY                          shift and go to state 10

state 7

    (5) VARS -> VARS_KEYWORD . OPEN_BRACKET VARS_A

    OPEN_BRACKET    shift and go to state 12


state 8

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A . MAIN BLOQUE CLOSE_BRACKET

    MAIN            shift and go to state 13


state 9

    (3) PROGRAMA_A -> MODULO . PROGRAMA_A
    (3) PROGRAMA_A -> . MODULO PROGRAMA_A
    (4) PROGRAMA_A -> . EMPTY
    (43) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C change_scope
    (168) EMPTY -> .

    MODULE          shift and go to state 11
    MAIN            reduce using rule 168 (EMPTY -> .)

    MODULO                         shift and go to state 9
    PROGRAMA_A                     shift and go to state 14
    EMPTY                          shift and go to state 10

state 10

    (4) PROGRAMA_A -> EMPTY .

    MAIN            reduce using rule 4 (PROGRAMA_A -> EMPTY .)


state 11

    (43) MODULO -> MODULE . MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C change_scope
    (46) MODULO_A -> . VOID
    (47) MODULO_A -> . TIPO_P
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR

    VOID            shift and go to state 16
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21

    MODULO_A                       shift and go to state 15
    TIPO_P                         shift and go to state 17

state 12

    (5) VARS -> VARS_KEYWORD OPEN_BRACKET . VARS_A
    (6) VARS_A -> . TIPO_P VARS_B
    (7) VARS_A -> . TIPO_S VARS_B
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR
    (35) TIPO_S -> . TYPE_GRAPH
    (36) TIPO_S -> . TYPE_PIECHART
    (37) TIPO_S -> . TYPE_BARCHART
    (38) TIPO_S -> . TYPE_HORBARCHART
    (39) TIPO_S -> . TYPE_DONUTGRAPH
    (40) TIPO_S -> . TYPE_NETWORK
    (41) TIPO_S -> . TYPE_VENN
    (42) TIPO_S -> . TYPE_RADARCHART

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21
    TYPE_GRAPH      shift and go to state 25
    TYPE_PIECHART   shift and go to state 26
    TYPE_BARCHART   shift and go to state 27
    TYPE_HORBARCHART shift and go to state 28
    TYPE_DONUTGRAPH shift and go to state 29
    TYPE_NETWORK    shift and go to state 30
    TYPE_VENN       shift and go to state 31
    TYPE_RADARCHART shift and go to state 32

    VARS_A                         shift and go to state 22
    TIPO_P                         shift and go to state 23
    TIPO_S                         shift and go to state 24

state 13

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN . BLOQUE CLOSE_BRACKET
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 34

state 14

    (3) PROGRAMA_A -> MODULO PROGRAMA_A .

    MAIN            reduce using rule 3 (PROGRAMA_A -> MODULO PROGRAMA_A .)


state 15

    (43) MODULO -> MODULE MODULO_A . ID add_functionr OPEN_PARENTHESIS MODULO_C change_scope

    ID              shift and go to state 35


state 16

    (46) MODULO_A -> VOID .

    ID              reduce using rule 46 (MODULO_A -> VOID .)


state 17

    (47) MODULO_A -> TIPO_P .

    ID              reduce using rule 47 (MODULO_A -> TIPO_P .)


state 18

    (31) TIPO_P -> INT .

    ID              reduce using rule 31 (TIPO_P -> INT .)


state 19

    (32) TIPO_P -> FLOAT .

    ID              reduce using rule 32 (TIPO_P -> FLOAT .)


state 20

    (33) TIPO_P -> BOOL .

    ID              reduce using rule 33 (TIPO_P -> BOOL .)


state 21

    (34) TIPO_P -> CHAR .

    ID              reduce using rule 34 (TIPO_P -> CHAR .)


state 22

    (5) VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .

    MODULE          reduce using rule 5 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    MAIN            reduce using rule 5 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    OPEN_BRACKET    reduce using rule 5 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)


state 23

    (6) VARS_A -> TIPO_P . VARS_B
    (8) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 37

    VARS_B                         shift and go to state 36

state 24

    (7) VARS_A -> TIPO_S . VARS_B
    (8) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 37

    VARS_B                         shift and go to state 38

state 25

    (35) TIPO_S -> TYPE_GRAPH .

    ID              reduce using rule 35 (TIPO_S -> TYPE_GRAPH .)


state 26

    (36) TIPO_S -> TYPE_PIECHART .

    ID              reduce using rule 36 (TIPO_S -> TYPE_PIECHART .)


state 27

    (37) TIPO_S -> TYPE_BARCHART .

    ID              reduce using rule 37 (TIPO_S -> TYPE_BARCHART .)


state 28

    (38) TIPO_S -> TYPE_HORBARCHART .

    ID              reduce using rule 38 (TIPO_S -> TYPE_HORBARCHART .)


state 29

    (39) TIPO_S -> TYPE_DONUTGRAPH .

    ID              reduce using rule 39 (TIPO_S -> TYPE_DONUTGRAPH .)


state 30

    (40) TIPO_S -> TYPE_NETWORK .

    ID              reduce using rule 40 (TIPO_S -> TYPE_NETWORK .)


state 31

    (41) TIPO_S -> TYPE_VENN .

    ID              reduce using rule 41 (TIPO_S -> TYPE_VENN .)


state 32

    (42) TIPO_S -> TYPE_RADARCHART .

    ID              reduce using rule 42 (TIPO_S -> TYPE_RADARCHART .)


state 33

    (18) BLOQUE -> OPEN_BRACKET . ESTATUTO_A CLOSE_BRACKET
    (19) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (20) ESTATUTO_A -> . EMPTY
    (21) ESTATUTO -> . ASIGNACION
    (22) ESTATUTO -> . CONDICION
    (23) ESTATUTO -> . NOMBRAR
    (24) ESTATUTO -> . FOR
    (25) ESTATUTO -> . WHILE
    (26) ESTATUTO -> . PRINT
    (27) ESTATUTO -> . PLOT
    (28) ESTATUTO -> . LLAMADAMODULO
    (29) ESTATUTO -> . INPUT
    (30) ESTATUTO -> . COLOR
    (168) EMPTY -> .
    (59) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (68) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (55) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (74) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (77) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (151) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (121) PLOT -> . ID POINT PLOT_B
    (51) LLAMADAMODULO -> . ID OPEN_PARENTHESIS LLAMADAMODULO_C
    (117) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON
    (90) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    CLOSE_BRACKET   reduce using rule 168 (EMPTY -> .)
    ID              shift and go to state 52
    IF              shift and go to state 53
    FOR_KEYWORD     shift and go to state 54
    WHILE_KEYWORD   shift and go to state 55
    PRINT_KEYWORD   shift and go to state 56
    INPUT_KEYWORD   shift and go to state 57

    ESTATUTO_A                     shift and go to state 39
    ESTATUTO                       shift and go to state 40
    EMPTY                          shift and go to state 41
    ASIGNACION                     shift and go to state 42
    CONDICION                      shift and go to state 43
    NOMBRAR                        shift and go to state 44
    FOR                            shift and go to state 45
    WHILE                          shift and go to state 46
    PRINT                          shift and go to state 47
    PLOT                           shift and go to state 48
    LLAMADAMODULO                  shift and go to state 49
    INPUT                          shift and go to state 50
    COLOR                          shift and go to state 51

state 34

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 58


state 35

    (43) MODULO -> MODULE MODULO_A ID . add_functionr OPEN_PARENTHESIS MODULO_C change_scope
    (45) add_functionr -> .

    OPEN_PARENTHESIS reduce using rule 45 (add_functionr -> .)

    add_functionr                  shift and go to state 59

state 36

    (6) VARS_A -> TIPO_P VARS_B .

    MODULE          reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)
    MAIN            reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)
    OPEN_BRACKET    reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)
    SEMICOLON       reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)
    COMMA           reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)


state 37

    (8) VARS_B -> ID . add_variable VARS_E VARS_C
    (9) add_variable -> .

    OPEN_SQUARE_BRACKET reduce using rule 9 (add_variable -> .)
    SEMICOLON       reduce using rule 9 (add_variable -> .)
    COMMA           reduce using rule 9 (add_variable -> .)

    add_variable                   shift and go to state 60

state 38

    (7) VARS_A -> TIPO_S VARS_B .

    MODULE          reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)
    MAIN            reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)
    OPEN_BRACKET    reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)
    SEMICOLON       reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)
    COMMA           reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)


state 39

    (18) BLOQUE -> OPEN_BRACKET ESTATUTO_A . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 61


state 40

    (19) ESTATUTO_A -> ESTATUTO . ESTATUTO_A
    (19) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (20) ESTATUTO_A -> . EMPTY
    (21) ESTATUTO -> . ASIGNACION
    (22) ESTATUTO -> . CONDICION
    (23) ESTATUTO -> . NOMBRAR
    (24) ESTATUTO -> . FOR
    (25) ESTATUTO -> . WHILE
    (26) ESTATUTO -> . PRINT
    (27) ESTATUTO -> . PLOT
    (28) ESTATUTO -> . LLAMADAMODULO
    (29) ESTATUTO -> . INPUT
    (30) ESTATUTO -> . COLOR
    (168) EMPTY -> .
    (59) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (68) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (55) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (74) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (77) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (151) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (121) PLOT -> . ID POINT PLOT_B
    (51) LLAMADAMODULO -> . ID OPEN_PARENTHESIS LLAMADAMODULO_C
    (117) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON
    (90) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    CLOSE_BRACKET   reduce using rule 168 (EMPTY -> .)
    ID              shift and go to state 52
    IF              shift and go to state 53
    FOR_KEYWORD     shift and go to state 54
    WHILE_KEYWORD   shift and go to state 55
    PRINT_KEYWORD   shift and go to state 56
    INPUT_KEYWORD   shift and go to state 57

    ESTATUTO                       shift and go to state 40
    ESTATUTO_A                     shift and go to state 62
    EMPTY                          shift and go to state 41
    ASIGNACION                     shift and go to state 42
    CONDICION                      shift and go to state 43
    NOMBRAR                        shift and go to state 44
    FOR                            shift and go to state 45
    WHILE                          shift and go to state 46
    PRINT                          shift and go to state 47
    PLOT                           shift and go to state 48
    LLAMADAMODULO                  shift and go to state 49
    INPUT                          shift and go to state 50
    COLOR                          shift and go to state 51

state 41

    (20) ESTATUTO_A -> EMPTY .

    CLOSE_BRACKET   reduce using rule 20 (ESTATUTO_A -> EMPTY .)


state 42

    (21) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    FOR_KEYWORD     reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    WHILE_KEYWORD   reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    PRINT_KEYWORD   reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    INPUT_KEYWORD   reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    CLOSE_BRACKET   reduce using rule 21 (ESTATUTO -> ASIGNACION .)


state 43

    (22) ESTATUTO -> CONDICION .

    ID              reduce using rule 22 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 22 (ESTATUTO -> CONDICION .)
    FOR_KEYWORD     reduce using rule 22 (ESTATUTO -> CONDICION .)
    WHILE_KEYWORD   reduce using rule 22 (ESTATUTO -> CONDICION .)
    PRINT_KEYWORD   reduce using rule 22 (ESTATUTO -> CONDICION .)
    INPUT_KEYWORD   reduce using rule 22 (ESTATUTO -> CONDICION .)
    CLOSE_BRACKET   reduce using rule 22 (ESTATUTO -> CONDICION .)


state 44

    (23) ESTATUTO -> NOMBRAR .

    ID              reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    IF              reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    FOR_KEYWORD     reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    WHILE_KEYWORD   reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    PRINT_KEYWORD   reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    INPUT_KEYWORD   reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    CLOSE_BRACKET   reduce using rule 23 (ESTATUTO -> NOMBRAR .)


state 45

    (24) ESTATUTO -> FOR .

    ID              reduce using rule 24 (ESTATUTO -> FOR .)
    IF              reduce using rule 24 (ESTATUTO -> FOR .)
    FOR_KEYWORD     reduce using rule 24 (ESTATUTO -> FOR .)
    WHILE_KEYWORD   reduce using rule 24 (ESTATUTO -> FOR .)
    PRINT_KEYWORD   reduce using rule 24 (ESTATUTO -> FOR .)
    INPUT_KEYWORD   reduce using rule 24 (ESTATUTO -> FOR .)
    CLOSE_BRACKET   reduce using rule 24 (ESTATUTO -> FOR .)


state 46

    (25) ESTATUTO -> WHILE .

    ID              reduce using rule 25 (ESTATUTO -> WHILE .)
    IF              reduce using rule 25 (ESTATUTO -> WHILE .)
    FOR_KEYWORD     reduce using rule 25 (ESTATUTO -> WHILE .)
    WHILE_KEYWORD   reduce using rule 25 (ESTATUTO -> WHILE .)
    PRINT_KEYWORD   reduce using rule 25 (ESTATUTO -> WHILE .)
    INPUT_KEYWORD   reduce using rule 25 (ESTATUTO -> WHILE .)
    CLOSE_BRACKET   reduce using rule 25 (ESTATUTO -> WHILE .)


state 47

    (26) ESTATUTO -> PRINT .

    ID              reduce using rule 26 (ESTATUTO -> PRINT .)
    IF              reduce using rule 26 (ESTATUTO -> PRINT .)
    FOR_KEYWORD     reduce using rule 26 (ESTATUTO -> PRINT .)
    WHILE_KEYWORD   reduce using rule 26 (ESTATUTO -> PRINT .)
    PRINT_KEYWORD   reduce using rule 26 (ESTATUTO -> PRINT .)
    INPUT_KEYWORD   reduce using rule 26 (ESTATUTO -> PRINT .)
    CLOSE_BRACKET   reduce using rule 26 (ESTATUTO -> PRINT .)


state 48

    (27) ESTATUTO -> PLOT .

    ID              reduce using rule 27 (ESTATUTO -> PLOT .)
    IF              reduce using rule 27 (ESTATUTO -> PLOT .)
    FOR_KEYWORD     reduce using rule 27 (ESTATUTO -> PLOT .)
    WHILE_KEYWORD   reduce using rule 27 (ESTATUTO -> PLOT .)
    PRINT_KEYWORD   reduce using rule 27 (ESTATUTO -> PLOT .)
    INPUT_KEYWORD   reduce using rule 27 (ESTATUTO -> PLOT .)
    CLOSE_BRACKET   reduce using rule 27 (ESTATUTO -> PLOT .)


state 49

    (28) ESTATUTO -> LLAMADAMODULO .

    ID              reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    IF              reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    FOR_KEYWORD     reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    WHILE_KEYWORD   reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    PRINT_KEYWORD   reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    INPUT_KEYWORD   reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    CLOSE_BRACKET   reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)


state 50

    (29) ESTATUTO -> INPUT .

    ID              reduce using rule 29 (ESTATUTO -> INPUT .)
    IF              reduce using rule 29 (ESTATUTO -> INPUT .)
    FOR_KEYWORD     reduce using rule 29 (ESTATUTO -> INPUT .)
    WHILE_KEYWORD   reduce using rule 29 (ESTATUTO -> INPUT .)
    PRINT_KEYWORD   reduce using rule 29 (ESTATUTO -> INPUT .)
    INPUT_KEYWORD   reduce using rule 29 (ESTATUTO -> INPUT .)
    CLOSE_BRACKET   reduce using rule 29 (ESTATUTO -> INPUT .)


state 51

    (30) ESTATUTO -> COLOR .

    ID              reduce using rule 30 (ESTATUTO -> COLOR .)
    IF              reduce using rule 30 (ESTATUTO -> COLOR .)
    FOR_KEYWORD     reduce using rule 30 (ESTATUTO -> COLOR .)
    WHILE_KEYWORD   reduce using rule 30 (ESTATUTO -> COLOR .)
    PRINT_KEYWORD   reduce using rule 30 (ESTATUTO -> COLOR .)
    INPUT_KEYWORD   reduce using rule 30 (ESTATUTO -> COLOR .)
    CLOSE_BRACKET   reduce using rule 30 (ESTATUTO -> COLOR .)


state 52

    (59) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (55) NOMBRAR -> ID . POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (121) PLOT -> ID . POINT PLOT_B
    (51) LLAMADAMODULO -> ID . OPEN_PARENTHESIS LLAMADAMODULO_C
    (90) COLOR -> ID . POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (61) addStackO -> .

    POINT           shift and go to state 64
    OPEN_PARENTHESIS shift and go to state 65
    OPEN_SQUARE_BRACKET reduce using rule 61 (addStackO -> .)
    EQUAL           reduce using rule 61 (addStackO -> .)

    addStackO                      shift and go to state 63

state 53

    (68) CONDICION -> IF . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    OPEN_PARENTHESIS shift and go to state 66


state 54

    (74) FOR -> FOR_KEYWORD . OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    OPEN_PARENTHESIS shift and go to state 67


state 55

    (77) WHILE -> WHILE_KEYWORD . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    OPEN_PARENTHESIS shift and go to state 68


state 56

    (151) PRINT -> PRINT_KEYWORD . OPEN_PARENTHESIS PRINT_A

    OPEN_PARENTHESIS shift and go to state 69


state 57

    (117) INPUT -> INPUT_KEYWORD . INPUTSYMBOL ID INPUT_A SEMICOLON

    INPUTSYMBOL     shift and go to state 70


state 58

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET .)


state 59

    (43) MODULO -> MODULE MODULO_A ID add_functionr . OPEN_PARENTHESIS MODULO_C change_scope

    OPEN_PARENTHESIS shift and go to state 71


state 60

    (8) VARS_B -> ID add_variable . VARS_E VARS_C
    (10) VARS_E -> . OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F
    (11) VARS_E -> . EMPTY
    (168) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 73
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)

    VARS_E                         shift and go to state 72
    EMPTY                          shift and go to state 74

state 61

    (18) BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .

    CLOSE_BRACKET   reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ELSE            reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ID              reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    IF              reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    FOR_KEYWORD     reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)


state 62

    (19) ESTATUTO_A -> ESTATUTO ESTATUTO_A .

    CLOSE_BRACKET   reduce using rule 19 (ESTATUTO_A -> ESTATUTO ESTATUTO_A .)


state 63

    (59) ASIGNACION -> ID addStackO . ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (62) ASIGNACION_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
    (63) ASIGNACION_A -> . EMPTY
    (168) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 76
    EQUAL           reduce using rule 168 (EMPTY -> .)

    ASIGNACION_A                   shift and go to state 75
    EMPTY                          shift and go to state 77

state 64

    (55) NOMBRAR -> ID POINT . NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (121) PLOT -> ID POINT . PLOT_B
    (90) COLOR -> ID POINT . COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (56) NOMBRAR_A -> . NAME
    (57) NOMBRAR_A -> . NAMEX
    (58) NOMBRAR_A -> . NAMEY
    (122) PLOT_B -> . CREATEG OPEN_PARENTHESIS PLOT_C
    (123) PLOT_B -> . CREATEPC OPEN_PARENTHESIS PLOT_E
    (124) PLOT_B -> . CREATEGB OPEN_PARENTHESIS PLOT_E
    (125) PLOT_B -> . CREATEGBH OPEN_PARENTHESIS PLOT_E
    (126) PLOT_B -> . CREATED OPEN_PARENTHESIS PLOT_E
    (127) PLOT_B -> . CREATER OPEN_PARENTHESIS PLOT_E
    (128) PLOT_B -> . CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (129) PLOT_B -> . CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COLOR_KEYWORD   shift and go to state 80
    NAME            shift and go to state 81
    NAMEX           shift and go to state 82
    NAMEY           shift and go to state 83
    CREATEG         shift and go to state 84
    CREATEPC        shift and go to state 85
    CREATEGB        shift and go to state 86
    CREATEGBH       shift and go to state 87
    CREATED         shift and go to state 88
    CREATER         shift and go to state 89
    CREATEN         shift and go to state 90
    CREATEV         shift and go to state 91

    NOMBRAR_A                      shift and go to state 78
    PLOT_B                         shift and go to state 79

state 65

    (51) LLAMADAMODULO -> ID OPEN_PARENTHESIS . LLAMADAMODULO_C
    (54) LLAMADAMODULO_C -> . EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 94
    EXP                            shift and go to state 95
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 66

    (68) CONDICION -> IF OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (158) EXPRESIONESVARIAS -> . NOT EV_C
    (159) EXPRESIONESVARIAS -> . EV_C
    (160) EV_C -> . EXP_RELOP EV_B
    (164) EXP_RELOP -> . EXP EXP_RELOP_A
    (165) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (168) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 108
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 107
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 67

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS . ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (59) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 114

    ASIGNACION                     shift and go to state 113

state 68

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (158) EXPRESIONESVARIAS -> . NOT EV_C
    (159) EXPRESIONESVARIAS -> . EV_C
    (160) EV_C -> . EXP_RELOP EV_B
    (164) EXP_RELOP -> . EXP EXP_RELOP_A
    (165) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (168) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 108
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 115
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 69

    (151) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS . PRINT_A
    (152) PRINT_A -> . PRINT_B CLOSE_PARENTHESIS SEMICOLON
    (153) PRINT_B -> . CTE_STRING print_string PRINT_C
    (154) PRINT_B -> . EXPRESIONESVARIAS
    (158) EXPRESIONESVARIAS -> . NOT EV_C
    (159) EXPRESIONESVARIAS -> . EV_C
    (160) EV_C -> . EXP_RELOP EV_B
    (164) EXP_RELOP -> . EXP EXP_RELOP_A
    (165) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (168) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 118
    NOT             shift and go to state 108
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    PRINT_A                        shift and go to state 116
    PRINT_B                        shift and go to state 117
    EXPRESIONESVARIAS              shift and go to state 119
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 70

    (117) INPUT -> INPUT_KEYWORD INPUTSYMBOL . ID INPUT_A SEMICOLON

    ID              shift and go to state 120


state 71

    (43) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS . MODULO_C change_scope
    (50) MODULO_C -> . TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21

    MODULO_C                       shift and go to state 121
    TIPO_P                         shift and go to state 122

state 72

    (8) VARS_B -> ID add_variable VARS_E . VARS_C
    (14) VARS_C -> . SEMICOLON VARS_D
    (15) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 124
    COMMA           shift and go to state 125

    VARS_C                         shift and go to state 123

state 73

    (10) VARS_E -> OPEN_SQUARE_BRACKET . CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F

    CTE_INTEGER     shift and go to state 126


state 74

    (11) VARS_E -> EMPTY .

    SEMICOLON       reduce using rule 11 (VARS_E -> EMPTY .)
    COMMA           reduce using rule 11 (VARS_E -> EMPTY .)


state 75

    (59) ASIGNACION -> ID addStackO ASIGNACION_A . ASIGNACION_C SEMICOLON quad
    (66) ASIGNACION_C -> . EQUAL EXPRESIONESVARIAS
    (67) ASIGNACION_C -> . EQUAL CTE_STRING

    EQUAL           shift and go to state 128

    ASIGNACION_C                   shift and go to state 127

state 76

    (62) ASIGNACION_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 129
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 77

    (63) ASIGNACION_A -> EMPTY .

    EQUAL           reduce using rule 63 (ASIGNACION_A -> EMPTY .)


state 78

    (55) NOMBRAR -> ID POINT NOMBRAR_A . OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 130


state 79

    (121) PLOT -> ID POINT PLOT_B .

    ID              reduce using rule 121 (PLOT -> ID POINT PLOT_B .)
    IF              reduce using rule 121 (PLOT -> ID POINT PLOT_B .)
    FOR_KEYWORD     reduce using rule 121 (PLOT -> ID POINT PLOT_B .)
    WHILE_KEYWORD   reduce using rule 121 (PLOT -> ID POINT PLOT_B .)
    PRINT_KEYWORD   reduce using rule 121 (PLOT -> ID POINT PLOT_B .)
    INPUT_KEYWORD   reduce using rule 121 (PLOT -> ID POINT PLOT_B .)
    CLOSE_BRACKET   reduce using rule 121 (PLOT -> ID POINT PLOT_B .)


state 80

    (90) COLOR -> ID POINT COLOR_KEYWORD . OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 131


state 81

    (56) NOMBRAR_A -> NAME .

    OPEN_PARENTHESIS reduce using rule 56 (NOMBRAR_A -> NAME .)


state 82

    (57) NOMBRAR_A -> NAMEX .

    OPEN_PARENTHESIS reduce using rule 57 (NOMBRAR_A -> NAMEX .)


state 83

    (58) NOMBRAR_A -> NAMEY .

    OPEN_PARENTHESIS reduce using rule 58 (NOMBRAR_A -> NAMEY .)


state 84

    (122) PLOT_B -> CREATEG . OPEN_PARENTHESIS PLOT_C

    OPEN_PARENTHESIS shift and go to state 132


state 85

    (123) PLOT_B -> CREATEPC . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 133


state 86

    (124) PLOT_B -> CREATEGB . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 134


state 87

    (125) PLOT_B -> CREATEGBH . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 135


state 88

    (126) PLOT_B -> CREATED . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 136


state 89

    (127) PLOT_B -> CREATER . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 137


state 90

    (128) PLOT_B -> CREATEN . OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    OPEN_PARENTHESIS shift and go to state 138


state 91

    (129) PLOT_B -> CREATEV . OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 139


state 92

    (108) VARS_CTE -> ID . VARS_CTE_A
    (109) VARS_CTE_A -> . OPEN_PARENTHESIS VARS_CTE_B
    (110) VARS_CTE_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (111) VARS_CTE_A -> . EMPTY
    (168) EMPTY -> .

    OPEN_PARENTHESIS shift and go to state 141
    OPEN_SQUARE_BRACKET shift and go to state 142
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    PLUS            reduce using rule 168 (EMPTY -> .)
    MINS            reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 168 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 168 (EMPTY -> .)
    BOOLEAN         reduce using rule 168 (EMPTY -> .)
    ID              reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    VARS_CTE_A                     shift and go to state 140
    EMPTY                          shift and go to state 143

state 93

    (98) FACTOR_A -> OPEN_PARENTHESIS . FACTOR_B CLOSE_PARENTHESIS
    (103) FACTOR_B -> . EXPRESIONESVARIAS FACTOR_C
    (158) EXPRESIONESVARIAS -> . NOT EV_C
    (159) EXPRESIONESVARIAS -> . EV_C
    (160) EV_C -> . EXP_RELOP EV_B
    (164) EXP_RELOP -> . EXP EXP_RELOP_A
    (165) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (168) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    NOT             shift and go to state 108
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! CTE_INTEGER     [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 168 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 168 (EMPTY -> .) ]
  ! ID              [ reduce using rule 168 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    FACTOR_B                       shift and go to state 144
    EXPRESIONESVARIAS              shift and go to state 145
    FACTOR_C                       shift and go to state 100
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    VARS_CTE                       shift and go to state 103

state 94

    (51) LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .

    ID              reduce using rule 51 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    IF              reduce using rule 51 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    FOR_KEYWORD     reduce using rule 51 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    WHILE_KEYWORD   reduce using rule 51 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    PRINT_KEYWORD   reduce using rule 51 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    INPUT_KEYWORD   reduce using rule 51 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    CLOSE_BRACKET   reduce using rule 51 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)


state 95

    (54) LLAMADAMODULO_C -> EXP . LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON
    (52) LLAMADAMODULO_A -> . COMMA LLAMADAMODULO_C
    (53) LLAMADAMODULO_A -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 147
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)

    LLAMADAMODULO_A                shift and go to state 146
    EMPTY                          shift and go to state 148

state 96

    (80) EXP -> TERMINO . EXP_A pop_exp
    (82) EXP_A -> . PLUS EXP
    (83) EXP_A -> . MINS EXP
    (84) EXP_A -> . EMPTY
    (168) EMPTY -> .

    PLUS            shift and go to state 150
    MINS            shift and go to state 151
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 168 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 168 (EMPTY -> .)
    BOOLEAN         reduce using rule 168 (EMPTY -> .)
    ID              reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    EXP_A                          shift and go to state 149
    EMPTY                          shift and go to state 152

state 97

    (85) TERMINO -> FACTOR . TERMINO_A pop_term
    (87) TERMINO_A -> . TIMES TERMINO
    (88) TERMINO_A -> . DIVIDE TERMINO
    (89) TERMINO_A -> . EMPTY
    (168) EMPTY -> .

    TIMES           shift and go to state 154
    DIVIDE          shift and go to state 155
    PLUS            reduce using rule 168 (EMPTY -> .)
    MINS            reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 168 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 168 (EMPTY -> .)
    BOOLEAN         reduce using rule 168 (EMPTY -> .)
    ID              reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    TERMINO_A                      shift and go to state 153
    EMPTY                          shift and go to state 156

state 98

    (97) FACTOR -> FACTOR_A .

    TIMES           reduce using rule 97 (FACTOR -> FACTOR_A .)
    DIVIDE          reduce using rule 97 (FACTOR -> FACTOR_A .)
    PLUS            reduce using rule 97 (FACTOR -> FACTOR_A .)
    MINS            reduce using rule 97 (FACTOR -> FACTOR_A .)
    COMMA           reduce using rule 97 (FACTOR -> FACTOR_A .)
    CLOSE_PARENTHESIS reduce using rule 97 (FACTOR -> FACTOR_A .)
    RELOP           reduce using rule 97 (FACTOR -> FACTOR_A .)
    AND             reduce using rule 97 (FACTOR -> FACTOR_A .)
    OR              reduce using rule 97 (FACTOR -> FACTOR_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 97 (FACTOR -> FACTOR_A .)
    CTE_INTEGER     reduce using rule 97 (FACTOR -> FACTOR_A .)
    CTE_FLOAT       reduce using rule 97 (FACTOR -> FACTOR_A .)
    BOOLEAN         reduce using rule 97 (FACTOR -> FACTOR_A .)
    ID              reduce using rule 97 (FACTOR -> FACTOR_A .)
    SEMICOLON       reduce using rule 97 (FACTOR -> FACTOR_A .)


state 99

    (99) FACTOR_A -> PLUS . FACTOR_C
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

    FACTOR_C                       shift and go to state 157
    VARS_CTE                       shift and go to state 103

state 100

    (101) FACTOR_A -> FACTOR_C .

    TIMES           reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    DIVIDE          reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    PLUS            reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    MINS            reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    COMMA           reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    RELOP           reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    AND             reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    OR              reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    CTE_INTEGER     reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    CTE_FLOAT       reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    BOOLEAN         reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    ID              reduce using rule 101 (FACTOR_A -> FACTOR_C .)
    SEMICOLON       reduce using rule 101 (FACTOR_A -> FACTOR_C .)


state 101

    (100) FACTOR_A -> MINS . FACTOR_C
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

    FACTOR_C                       shift and go to state 158
    VARS_CTE                       shift and go to state 103

state 102

    (102) FACTOR_A -> EMPTY .

    TIMES           reduce using rule 102 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 102 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 102 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 102 (FACTOR_A -> EMPTY .)
    COMMA           reduce using rule 102 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 102 (FACTOR_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 102 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 102 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 102 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 102 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 102 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 102 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 102 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 102 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 102 (FACTOR_A -> EMPTY .)


state 103

    (104) FACTOR_C -> VARS_CTE .

    TIMES           reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    DIVIDE          reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    PLUS            reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    MINS            reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    COMMA           reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    CLOSE_PARENTHESIS reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    RELOP           reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    AND             reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    OR              reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    CLOSE_SQUARE_BRACKET reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    CTE_INTEGER     reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    CTE_FLOAT       reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    BOOLEAN         reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    ID              reduce using rule 104 (FACTOR_C -> VARS_CTE .)
    SEMICOLON       reduce using rule 104 (FACTOR_C -> VARS_CTE .)


state 104

    (105) VARS_CTE -> CTE_INTEGER .

    TIMES           reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    DIVIDE          reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    PLUS            reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    MINS            reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    COMMA           reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_PARENTHESIS reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    RELOP           reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    AND             reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    OR              reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_SQUARE_BRACKET reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    CTE_INTEGER     reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    CTE_FLOAT       reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    BOOLEAN         reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    ID              reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)
    SEMICOLON       reduce using rule 105 (VARS_CTE -> CTE_INTEGER .)


state 105

    (106) VARS_CTE -> CTE_FLOAT .

    TIMES           reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    DIVIDE          reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    MINS            reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_PARENTHESIS reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    RELOP           reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    AND             reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    OR              reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_SQUARE_BRACKET reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    CTE_INTEGER     reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    CTE_FLOAT       reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    BOOLEAN         reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    ID              reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 106 (VARS_CTE -> CTE_FLOAT .)


state 106

    (107) VARS_CTE -> BOOLEAN .

    TIMES           reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    DIVIDE          reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    PLUS            reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    MINS            reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    COMMA           reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    CLOSE_PARENTHESIS reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    RELOP           reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    AND             reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    OR              reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    CLOSE_SQUARE_BRACKET reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    CTE_INTEGER     reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    CTE_FLOAT       reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    BOOLEAN         reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    ID              reduce using rule 107 (VARS_CTE -> BOOLEAN .)
    SEMICOLON       reduce using rule 107 (VARS_CTE -> BOOLEAN .)


state 107

    (68) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    CLOSE_PARENTHESIS shift and go to state 159


state 108

    (158) EXPRESIONESVARIAS -> NOT . EV_C
    (160) EV_C -> . EXP_RELOP EV_B
    (164) EXP_RELOP -> . EXP EXP_RELOP_A
    (165) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (168) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! CTE_INTEGER     [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 168 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 168 (EMPTY -> .) ]
  ! ID              [ reduce using rule 168 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EV_C                           shift and go to state 160
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 109

    (159) EXPRESIONESVARIAS -> EV_C .

    CLOSE_PARENTHESIS reduce using rule 159 (EXPRESIONESVARIAS -> EV_C .)
    CTE_INTEGER     reduce using rule 159 (EXPRESIONESVARIAS -> EV_C .)
    CTE_FLOAT       reduce using rule 159 (EXPRESIONESVARIAS -> EV_C .)
    BOOLEAN         reduce using rule 159 (EXPRESIONESVARIAS -> EV_C .)
    ID              reduce using rule 159 (EXPRESIONESVARIAS -> EV_C .)
    SEMICOLON       reduce using rule 159 (EXPRESIONESVARIAS -> EV_C .)


state 110

    (160) EV_C -> EXP_RELOP . EV_B
    (161) EV_B -> . AND
    (162) EV_B -> . OR
    (163) EV_B -> . EMPTY
    (168) EMPTY -> .

    AND             shift and go to state 162
    OR              shift and go to state 163
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 168 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 168 (EMPTY -> .)
    BOOLEAN         reduce using rule 168 (EMPTY -> .)
    ID              reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    EV_B                           shift and go to state 161
    EMPTY                          shift and go to state 164

state 111

    (164) EXP_RELOP -> EXP . EXP_RELOP_A
    (166) EXP_RELOP_A -> . RELOP EXP
    (167) EXP_RELOP_A -> . EMPTY
    (168) EMPTY -> .

    RELOP           shift and go to state 166
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 168 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 168 (EMPTY -> .)
    BOOLEAN         reduce using rule 168 (EMPTY -> .)
    ID              reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    EXP_RELOP_A                    shift and go to state 165
    EMPTY                          shift and go to state 167

state 112

    (165) EXP_RELOP -> EMPTY .
    (102) FACTOR_A -> EMPTY .

  ! reduce/reduce conflict for AND resolved using rule 102 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OR resolved using rule 102 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 102 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_INTEGER resolved using rule 102 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_FLOAT resolved using rule 102 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 102 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for ID resolved using rule 102 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 102 (FACTOR_A -> EMPTY .)
    TIMES           reduce using rule 102 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 102 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 102 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 102 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 102 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 102 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 102 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 102 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 102 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 102 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 102 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 102 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 102 (FACTOR_A -> EMPTY .)

  ! AND             [ reduce using rule 165 (EXP_RELOP -> EMPTY .) ]
  ! OR              [ reduce using rule 165 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 165 (EXP_RELOP -> EMPTY .) ]
  ! CTE_INTEGER     [ reduce using rule 165 (EXP_RELOP -> EMPTY .) ]
  ! CTE_FLOAT       [ reduce using rule 165 (EXP_RELOP -> EMPTY .) ]
  ! BOOLEAN         [ reduce using rule 165 (EXP_RELOP -> EMPTY .) ]
  ! ID              [ reduce using rule 165 (EXP_RELOP -> EMPTY .) ]
  ! SEMICOLON       [ reduce using rule 165 (EXP_RELOP -> EMPTY .) ]


state 113

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION . EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (158) EXPRESIONESVARIAS -> . NOT EV_C
    (159) EXPRESIONESVARIAS -> . EV_C
    (160) EV_C -> . EXP_RELOP EV_B
    (164) EXP_RELOP -> . EXP EXP_RELOP_A
    (165) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (168) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 108
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 168
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 114

    (59) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (61) addStackO -> .

    OPEN_SQUARE_BRACKET reduce using rule 61 (addStackO -> .)
    EQUAL           reduce using rule 61 (addStackO -> .)

    addStackO                      shift and go to state 63

state 115

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    CLOSE_PARENTHESIS shift and go to state 169


state 116

    (151) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .

    ID              reduce using rule 151 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    IF              reduce using rule 151 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    FOR_KEYWORD     reduce using rule 151 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    WHILE_KEYWORD   reduce using rule 151 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    PRINT_KEYWORD   reduce using rule 151 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    INPUT_KEYWORD   reduce using rule 151 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    CLOSE_BRACKET   reduce using rule 151 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)


state 117

    (152) PRINT_A -> PRINT_B . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 170


state 118

    (153) PRINT_B -> CTE_STRING . print_string PRINT_C
    (155) print_string -> .

    PLUS            reduce using rule 155 (print_string -> .)
    CLOSE_PARENTHESIS reduce using rule 155 (print_string -> .)

    print_string                   shift and go to state 171

state 119

    (154) PRINT_B -> EXPRESIONESVARIAS .

    CLOSE_PARENTHESIS reduce using rule 154 (PRINT_B -> EXPRESIONESVARIAS .)


state 120

    (117) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID . INPUT_A SEMICOLON
    (118) INPUT_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
    (119) INPUT_A -> . EMPTY
    (168) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 173
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    INPUT_A                        shift and go to state 172
    EMPTY                          shift and go to state 174

state 121

    (43) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C . change_scope
    (44) change_scope -> .

    MODULE          reduce using rule 44 (change_scope -> .)
    MAIN            reduce using rule 44 (change_scope -> .)

    change_scope                   shift and go to state 175

state 122

    (50) MODULO_C -> TIPO_P . ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET

    ID              shift and go to state 176


state 123

    (8) VARS_B -> ID add_variable VARS_E VARS_C .

    MODULE          reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)
    MAIN            reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)
    OPEN_BRACKET    reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)
    SEMICOLON       reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)
    COMMA           reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)


state 124

    (14) VARS_C -> SEMICOLON . VARS_D
    (16) VARS_D -> . CLOSE_BRACKET
    (17) VARS_D -> . VARS_A
    (6) VARS_A -> . TIPO_P VARS_B
    (7) VARS_A -> . TIPO_S VARS_B
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR
    (35) TIPO_S -> . TYPE_GRAPH
    (36) TIPO_S -> . TYPE_PIECHART
    (37) TIPO_S -> . TYPE_BARCHART
    (38) TIPO_S -> . TYPE_HORBARCHART
    (39) TIPO_S -> . TYPE_DONUTGRAPH
    (40) TIPO_S -> . TYPE_NETWORK
    (41) TIPO_S -> . TYPE_VENN
    (42) TIPO_S -> . TYPE_RADARCHART

    CLOSE_BRACKET   shift and go to state 178
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21
    TYPE_GRAPH      shift and go to state 25
    TYPE_PIECHART   shift and go to state 26
    TYPE_BARCHART   shift and go to state 27
    TYPE_HORBARCHART shift and go to state 28
    TYPE_DONUTGRAPH shift and go to state 29
    TYPE_NETWORK    shift and go to state 30
    TYPE_VENN       shift and go to state 31
    TYPE_RADARCHART shift and go to state 32

    VARS_D                         shift and go to state 177
    VARS_A                         shift and go to state 179
    TIPO_P                         shift and go to state 23
    TIPO_S                         shift and go to state 24

state 125

    (15) VARS_C -> COMMA . VARS_B
    (8) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 37

    VARS_B                         shift and go to state 180

state 126

    (10) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER . CLOSE_SQUARE_BRACKET VARS_F

    CLOSE_SQUARE_BRACKET shift and go to state 181


state 127

    (59) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C . SEMICOLON quad

    SEMICOLON       shift and go to state 182


state 128

    (66) ASIGNACION_C -> EQUAL . EXPRESIONESVARIAS
    (67) ASIGNACION_C -> EQUAL . CTE_STRING
    (158) EXPRESIONESVARIAS -> . NOT EV_C
    (159) EXPRESIONESVARIAS -> . EV_C
    (160) EV_C -> . EXP_RELOP EV_B
    (164) EXP_RELOP -> . EXP EXP_RELOP_A
    (165) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (168) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 184
    NOT             shift and go to state 108
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 183
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 129

    (62) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ASIGNACION_B

    CLOSE_SQUARE_BRACKET shift and go to state 185


state 130

    (55) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 186


state 131

    (90) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS . COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (91) COLOR_A -> . COLOR_RED
    (92) COLOR_A -> . COLOR_BLACK
    (93) COLOR_A -> . COLOR_BLUE
    (94) COLOR_A -> . COLOR_PURPLE
    (95) COLOR_A -> . COLOR_GREEN
    (96) COLOR_A -> . COLOR_ORANGE

    COLOR_RED       shift and go to state 188
    COLOR_BLACK     shift and go to state 189
    COLOR_BLUE      shift and go to state 190
    COLOR_PURPLE    shift and go to state 191
    COLOR_GREEN     shift and go to state 192
    COLOR_ORANGE    shift and go to state 193

    COLOR_A                        shift and go to state 187

state 132

    (122) PLOT_B -> CREATEG OPEN_PARENTHESIS . PLOT_C
    (130) PLOT_C -> . PLOT_I CLOSE_PARENTHESIS SEMICOLON
    (131) PLOT_I -> . CTE_INTEGER PLOT_D
    (132) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 196
    CTE_FLOAT       shift and go to state 197

    PLOT_C                         shift and go to state 194
    PLOT_I                         shift and go to state 195

state 133

    (123) PLOT_B -> CREATEPC OPEN_PARENTHESIS . PLOT_E
    (135) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (136) PLOT_F -> . CTE_INTEGER PLOT_J
    (137) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 200
    CTE_FLOAT       shift and go to state 201

    PLOT_E                         shift and go to state 198
    PLOT_F                         shift and go to state 199

state 134

    (124) PLOT_B -> CREATEGB OPEN_PARENTHESIS . PLOT_E
    (135) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (136) PLOT_F -> . CTE_INTEGER PLOT_J
    (137) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 200
    CTE_FLOAT       shift and go to state 201

    PLOT_E                         shift and go to state 202
    PLOT_F                         shift and go to state 199

state 135

    (125) PLOT_B -> CREATEGBH OPEN_PARENTHESIS . PLOT_E
    (135) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (136) PLOT_F -> . CTE_INTEGER PLOT_J
    (137) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 200
    CTE_FLOAT       shift and go to state 201

    PLOT_E                         shift and go to state 203
    PLOT_F                         shift and go to state 199

state 136

    (126) PLOT_B -> CREATED OPEN_PARENTHESIS . PLOT_E
    (135) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (136) PLOT_F -> . CTE_INTEGER PLOT_J
    (137) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 200
    CTE_FLOAT       shift and go to state 201

    PLOT_E                         shift and go to state 204
    PLOT_F                         shift and go to state 199

state 137

    (127) PLOT_B -> CREATER OPEN_PARENTHESIS . PLOT_E
    (135) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (136) PLOT_F -> . CTE_INTEGER PLOT_J
    (137) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 200
    CTE_FLOAT       shift and go to state 201

    PLOT_E                         shift and go to state 205
    PLOT_F                         shift and go to state 199

state 138

    (128) PLOT_B -> CREATEN OPEN_PARENTHESIS . OPEN_SQUARE_BRACKET PLOT_M

    OPEN_SQUARE_BRACKET shift and go to state 206


state 139

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS . CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 207


state 140

    (108) VARS_CTE -> ID VARS_CTE_A .

    TIMES           reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    DIVIDE          reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    PLUS            reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    MINS            reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    COMMA           reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_PARENTHESIS reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    RELOP           reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    AND             reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    OR              reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_INTEGER     reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_FLOAT       reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    BOOLEAN         reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    ID              reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)
    SEMICOLON       reduce using rule 108 (VARS_CTE -> ID VARS_CTE_A .)


state 141

    (109) VARS_CTE_A -> OPEN_PARENTHESIS . VARS_CTE_B
    (112) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 208
    EXP                            shift and go to state 209
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 142

    (110) VARS_CTE_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 210
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 143

    (111) VARS_CTE_A -> EMPTY .

    TIMES           reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    DIVIDE          reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    PLUS            reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    MINS            reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    COMMA           reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    RELOP           reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    AND             reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    OR              reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    BOOLEAN         reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    ID              reduce using rule 111 (VARS_CTE_A -> EMPTY .)
    SEMICOLON       reduce using rule 111 (VARS_CTE_A -> EMPTY .)


state 144

    (98) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 211


state 145

    (103) FACTOR_B -> EXPRESIONESVARIAS . FACTOR_C
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

    FACTOR_C                       shift and go to state 212
    VARS_CTE                       shift and go to state 103

state 146

    (54) LLAMADAMODULO_C -> EXP LLAMADAMODULO_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 213


state 147

    (52) LLAMADAMODULO_A -> COMMA . LLAMADAMODULO_C
    (54) LLAMADAMODULO_C -> . EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 214
    EXP                            shift and go to state 95
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 148

    (53) LLAMADAMODULO_A -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 53 (LLAMADAMODULO_A -> EMPTY .)


state 149

    (80) EXP -> TERMINO EXP_A . pop_exp
    (81) pop_exp -> .

    COMMA           reduce using rule 81 (pop_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 81 (pop_exp -> .)
    RELOP           reduce using rule 81 (pop_exp -> .)
    AND             reduce using rule 81 (pop_exp -> .)
    OR              reduce using rule 81 (pop_exp -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 81 (pop_exp -> .)
    CTE_INTEGER     reduce using rule 81 (pop_exp -> .)
    CTE_FLOAT       reduce using rule 81 (pop_exp -> .)
    BOOLEAN         reduce using rule 81 (pop_exp -> .)
    ID              reduce using rule 81 (pop_exp -> .)
    SEMICOLON       reduce using rule 81 (pop_exp -> .)

    pop_exp                        shift and go to state 215

state 150

    (82) EXP_A -> PLUS . EXP
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 168 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 168 (EMPTY -> .) ]
  ! ID              [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 216
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 151

    (83) EXP_A -> MINS . EXP
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 168 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 168 (EMPTY -> .) ]
  ! ID              [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 217
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 152

    (84) EXP_A -> EMPTY .

    COMMA           reduce using rule 84 (EXP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 84 (EXP_A -> EMPTY .)
    RELOP           reduce using rule 84 (EXP_A -> EMPTY .)
    AND             reduce using rule 84 (EXP_A -> EMPTY .)
    OR              reduce using rule 84 (EXP_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 84 (EXP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 84 (EXP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 84 (EXP_A -> EMPTY .)
    BOOLEAN         reduce using rule 84 (EXP_A -> EMPTY .)
    ID              reduce using rule 84 (EXP_A -> EMPTY .)
    SEMICOLON       reduce using rule 84 (EXP_A -> EMPTY .)


state 153

    (85) TERMINO -> FACTOR TERMINO_A . pop_term
    (86) pop_term -> .

    PLUS            reduce using rule 86 (pop_term -> .)
    MINS            reduce using rule 86 (pop_term -> .)
    COMMA           reduce using rule 86 (pop_term -> .)
    CLOSE_PARENTHESIS reduce using rule 86 (pop_term -> .)
    RELOP           reduce using rule 86 (pop_term -> .)
    AND             reduce using rule 86 (pop_term -> .)
    OR              reduce using rule 86 (pop_term -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 86 (pop_term -> .)
    CTE_INTEGER     reduce using rule 86 (pop_term -> .)
    CTE_FLOAT       reduce using rule 86 (pop_term -> .)
    BOOLEAN         reduce using rule 86 (pop_term -> .)
    ID              reduce using rule 86 (pop_term -> .)
    SEMICOLON       reduce using rule 86 (pop_term -> .)

    pop_term                       shift and go to state 218

state 154

    (87) TERMINO_A -> TIMES . TERMINO
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 168 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 168 (EMPTY -> .) ]
  ! ID              [ reduce using rule 168 (EMPTY -> .) ]

    TERMINO                        shift and go to state 219
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 155

    (88) TERMINO_A -> DIVIDE . TERMINO
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 168 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 168 (EMPTY -> .) ]
  ! ID              [ reduce using rule 168 (EMPTY -> .) ]

    TERMINO                        shift and go to state 220
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 156

    (89) TERMINO_A -> EMPTY .

    PLUS            reduce using rule 89 (TERMINO_A -> EMPTY .)
    MINS            reduce using rule 89 (TERMINO_A -> EMPTY .)
    COMMA           reduce using rule 89 (TERMINO_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 89 (TERMINO_A -> EMPTY .)
    RELOP           reduce using rule 89 (TERMINO_A -> EMPTY .)
    AND             reduce using rule 89 (TERMINO_A -> EMPTY .)
    OR              reduce using rule 89 (TERMINO_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 89 (TERMINO_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 89 (TERMINO_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 89 (TERMINO_A -> EMPTY .)
    BOOLEAN         reduce using rule 89 (TERMINO_A -> EMPTY .)
    ID              reduce using rule 89 (TERMINO_A -> EMPTY .)
    SEMICOLON       reduce using rule 89 (TERMINO_A -> EMPTY .)


state 157

    (99) FACTOR_A -> PLUS FACTOR_C .

    TIMES           reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    DIVIDE          reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    PLUS            reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    MINS            reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    COMMA           reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    RELOP           reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    AND             reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    OR              reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_INTEGER     reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_FLOAT       reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    BOOLEAN         reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    ID              reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)
    SEMICOLON       reduce using rule 99 (FACTOR_A -> PLUS FACTOR_C .)


state 158

    (100) FACTOR_A -> MINS FACTOR_C .

    TIMES           reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    DIVIDE          reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    PLUS            reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    MINS            reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    COMMA           reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    RELOP           reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    AND             reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    OR              reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    CTE_INTEGER     reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    CTE_FLOAT       reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    BOOLEAN         reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    ID              reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)
    SEMICOLON       reduce using rule 100 (FACTOR_A -> MINS FACTOR_C .)


state 159

    (68) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . check_bool BLOQUE CONDICION_A fill_end
    (70) check_bool -> .

    OPEN_BRACKET    reduce using rule 70 (check_bool -> .)

    check_bool                     shift and go to state 221

state 160

    (158) EXPRESIONESVARIAS -> NOT EV_C .

    CLOSE_PARENTHESIS reduce using rule 158 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_INTEGER     reduce using rule 158 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_FLOAT       reduce using rule 158 (EXPRESIONESVARIAS -> NOT EV_C .)
    BOOLEAN         reduce using rule 158 (EXPRESIONESVARIAS -> NOT EV_C .)
    ID              reduce using rule 158 (EXPRESIONESVARIAS -> NOT EV_C .)
    SEMICOLON       reduce using rule 158 (EXPRESIONESVARIAS -> NOT EV_C .)


state 161

    (160) EV_C -> EXP_RELOP EV_B .

    CLOSE_PARENTHESIS reduce using rule 160 (EV_C -> EXP_RELOP EV_B .)
    CTE_INTEGER     reduce using rule 160 (EV_C -> EXP_RELOP EV_B .)
    CTE_FLOAT       reduce using rule 160 (EV_C -> EXP_RELOP EV_B .)
    BOOLEAN         reduce using rule 160 (EV_C -> EXP_RELOP EV_B .)
    ID              reduce using rule 160 (EV_C -> EXP_RELOP EV_B .)
    SEMICOLON       reduce using rule 160 (EV_C -> EXP_RELOP EV_B .)


state 162

    (161) EV_B -> AND .

    CLOSE_PARENTHESIS reduce using rule 161 (EV_B -> AND .)
    CTE_INTEGER     reduce using rule 161 (EV_B -> AND .)
    CTE_FLOAT       reduce using rule 161 (EV_B -> AND .)
    BOOLEAN         reduce using rule 161 (EV_B -> AND .)
    ID              reduce using rule 161 (EV_B -> AND .)
    SEMICOLON       reduce using rule 161 (EV_B -> AND .)


state 163

    (162) EV_B -> OR .

    CLOSE_PARENTHESIS reduce using rule 162 (EV_B -> OR .)
    CTE_INTEGER     reduce using rule 162 (EV_B -> OR .)
    CTE_FLOAT       reduce using rule 162 (EV_B -> OR .)
    BOOLEAN         reduce using rule 162 (EV_B -> OR .)
    ID              reduce using rule 162 (EV_B -> OR .)
    SEMICOLON       reduce using rule 162 (EV_B -> OR .)


state 164

    (163) EV_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 163 (EV_B -> EMPTY .)
    CTE_INTEGER     reduce using rule 163 (EV_B -> EMPTY .)
    CTE_FLOAT       reduce using rule 163 (EV_B -> EMPTY .)
    BOOLEAN         reduce using rule 163 (EV_B -> EMPTY .)
    ID              reduce using rule 163 (EV_B -> EMPTY .)
    SEMICOLON       reduce using rule 163 (EV_B -> EMPTY .)


state 165

    (164) EXP_RELOP -> EXP EXP_RELOP_A .

    AND             reduce using rule 164 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OR              reduce using rule 164 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_PARENTHESIS reduce using rule 164 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_INTEGER     reduce using rule 164 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_FLOAT       reduce using rule 164 (EXP_RELOP -> EXP EXP_RELOP_A .)
    BOOLEAN         reduce using rule 164 (EXP_RELOP -> EXP EXP_RELOP_A .)
    ID              reduce using rule 164 (EXP_RELOP -> EXP EXP_RELOP_A .)
    SEMICOLON       reduce using rule 164 (EXP_RELOP -> EXP EXP_RELOP_A .)


state 166

    (166) EXP_RELOP_A -> RELOP . EXP
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 168 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 168 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 168 (EMPTY -> .) ]
  ! ID              [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 222
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 167

    (167) EXP_RELOP_A -> EMPTY .

    AND             reduce using rule 167 (EXP_RELOP_A -> EMPTY .)
    OR              reduce using rule 167 (EXP_RELOP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 167 (EXP_RELOP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 167 (EXP_RELOP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 167 (EXP_RELOP_A -> EMPTY .)
    BOOLEAN         reduce using rule 167 (EXP_RELOP_A -> EMPTY .)
    ID              reduce using rule 167 (EXP_RELOP_A -> EMPTY .)
    SEMICOLON       reduce using rule 167 (EXP_RELOP_A -> EMPTY .)


state 168

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS . bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (76) bool_for -> .

    SEMICOLON       reduce using rule 76 (bool_for -> .)

    bool_for                       shift and go to state 223

state 169

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . bool_while BLOQUE goto_while
    (79) bool_while -> .

    OPEN_BRACKET    reduce using rule 79 (bool_while -> .)

    bool_while                     shift and go to state 224

state 170

    (152) PRINT_A -> PRINT_B CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 225


state 171

    (153) PRINT_B -> CTE_STRING print_string . PRINT_C
    (156) PRINT_C -> . PLUS PRINT_B
    (157) PRINT_C -> . EMPTY
    (168) EMPTY -> .

    PLUS            shift and go to state 227
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)

    PRINT_C                        shift and go to state 226
    EMPTY                          shift and go to state 228

state 172

    (117) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A . SEMICOLON

    SEMICOLON       shift and go to state 229


state 173

    (118) INPUT_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET INPUT_B
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 230
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 174

    (119) INPUT_A -> EMPTY .

    SEMICOLON       reduce using rule 119 (INPUT_A -> EMPTY .)


state 175

    (43) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C change_scope .

    MODULE          reduce using rule 43 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C change_scope .)
    MAIN            reduce using rule 43 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C change_scope .)


state 176

    (50) MODULO_C -> TIPO_P ID . MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET
    (48) MODULO_B -> . COMMA MODULO_C
    (49) MODULO_B -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 232
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)

    MODULO_B                       shift and go to state 231
    EMPTY                          shift and go to state 233

state 177

    (14) VARS_C -> SEMICOLON VARS_D .

    MODULE          reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)
    MAIN            reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)
    OPEN_BRACKET    reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)
    SEMICOLON       reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)
    COMMA           reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)


state 178

    (16) VARS_D -> CLOSE_BRACKET .

    MODULE          reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)
    MAIN            reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)
    COMMA           reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)


state 179

    (17) VARS_D -> VARS_A .

    MODULE          reduce using rule 17 (VARS_D -> VARS_A .)
    MAIN            reduce using rule 17 (VARS_D -> VARS_A .)
    OPEN_BRACKET    reduce using rule 17 (VARS_D -> VARS_A .)
    SEMICOLON       reduce using rule 17 (VARS_D -> VARS_A .)
    COMMA           reduce using rule 17 (VARS_D -> VARS_A .)


state 180

    (15) VARS_C -> COMMA VARS_B .

    MODULE          reduce using rule 15 (VARS_C -> COMMA VARS_B .)
    MAIN            reduce using rule 15 (VARS_C -> COMMA VARS_B .)
    OPEN_BRACKET    reduce using rule 15 (VARS_C -> COMMA VARS_B .)
    SEMICOLON       reduce using rule 15 (VARS_C -> COMMA VARS_B .)
    COMMA           reduce using rule 15 (VARS_C -> COMMA VARS_B .)


state 181

    (10) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET . VARS_F
    (12) VARS_F -> . OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C
    (13) VARS_F -> . VARS_C
    (14) VARS_C -> . SEMICOLON VARS_D
    (15) VARS_C -> . COMMA VARS_B

    OPEN_SQUARE_BRACKET shift and go to state 234
    SEMICOLON       shift and go to state 124
    COMMA           shift and go to state 125

    VARS_F                         shift and go to state 235
    VARS_C                         shift and go to state 236

state 182

    (59) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON . quad
    (60) quad -> .

    ID              reduce using rule 60 (quad -> .)
    IF              reduce using rule 60 (quad -> .)
    FOR_KEYWORD     reduce using rule 60 (quad -> .)
    WHILE_KEYWORD   reduce using rule 60 (quad -> .)
    PRINT_KEYWORD   reduce using rule 60 (quad -> .)
    INPUT_KEYWORD   reduce using rule 60 (quad -> .)
    CLOSE_BRACKET   reduce using rule 60 (quad -> .)
    NOT             reduce using rule 60 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 60 (quad -> .)
    PLUS            reduce using rule 60 (quad -> .)
    MINS            reduce using rule 60 (quad -> .)
    CTE_INTEGER     reduce using rule 60 (quad -> .)
    CTE_FLOAT       reduce using rule 60 (quad -> .)
    BOOLEAN         reduce using rule 60 (quad -> .)
    SEMICOLON       reduce using rule 60 (quad -> .)
    AND             reduce using rule 60 (quad -> .)
    OR              reduce using rule 60 (quad -> .)
    RELOP           reduce using rule 60 (quad -> .)
    TIMES           reduce using rule 60 (quad -> .)
    DIVIDE          reduce using rule 60 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 60 (quad -> .)

    quad                           shift and go to state 237

state 183

    (66) ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .

    SEMICOLON       reduce using rule 66 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)


state 184

    (67) ASIGNACION_C -> EQUAL CTE_STRING .

    SEMICOLON       reduce using rule 67 (ASIGNACION_C -> EQUAL CTE_STRING .)


state 185

    (62) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ASIGNACION_B
    (64) ASIGNACION_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (65) ASIGNACION_B -> . EMPTY
    (168) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 238
    EQUAL           reduce using rule 168 (EMPTY -> .)

    ASIGNACION_B                   shift and go to state 239
    EMPTY                          shift and go to state 240

state 186

    (55) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 241


state 187

    (90) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 242


state 188

    (91) COLOR_A -> COLOR_RED .

    CLOSE_PARENTHESIS reduce using rule 91 (COLOR_A -> COLOR_RED .)


state 189

    (92) COLOR_A -> COLOR_BLACK .

    CLOSE_PARENTHESIS reduce using rule 92 (COLOR_A -> COLOR_BLACK .)


state 190

    (93) COLOR_A -> COLOR_BLUE .

    CLOSE_PARENTHESIS reduce using rule 93 (COLOR_A -> COLOR_BLUE .)


state 191

    (94) COLOR_A -> COLOR_PURPLE .

    CLOSE_PARENTHESIS reduce using rule 94 (COLOR_A -> COLOR_PURPLE .)


state 192

    (95) COLOR_A -> COLOR_GREEN .

    CLOSE_PARENTHESIS reduce using rule 95 (COLOR_A -> COLOR_GREEN .)


state 193

    (96) COLOR_A -> COLOR_ORANGE .

    CLOSE_PARENTHESIS reduce using rule 96 (COLOR_A -> COLOR_ORANGE .)


state 194

    (122) PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .

    ID              reduce using rule 122 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    IF              reduce using rule 122 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    FOR_KEYWORD     reduce using rule 122 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    WHILE_KEYWORD   reduce using rule 122 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    PRINT_KEYWORD   reduce using rule 122 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    INPUT_KEYWORD   reduce using rule 122 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    CLOSE_BRACKET   reduce using rule 122 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)


state 195

    (130) PLOT_C -> PLOT_I . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 243


state 196

    (131) PLOT_I -> CTE_INTEGER . PLOT_D
    (133) PLOT_D -> . COMMA PLOT_I
    (134) PLOT_D -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 245
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)

    PLOT_D                         shift and go to state 244
    EMPTY                          shift and go to state 246

state 197

    (132) PLOT_I -> CTE_FLOAT . PLOT_D
    (133) PLOT_D -> . COMMA PLOT_I
    (134) PLOT_D -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 245
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)

    PLOT_D                         shift and go to state 247
    EMPTY                          shift and go to state 246

state 198

    (123) PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 123 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 123 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 123 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 123 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 123 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 123 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 123 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)


state 199

    (135) PLOT_E -> PLOT_F . SEMICOLON PLOT_G

    SEMICOLON       shift and go to state 248


state 200

    (136) PLOT_F -> CTE_INTEGER . PLOT_J
    (138) PLOT_J -> . COMMA PLOT_F
    (139) PLOT_J -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 250
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    PLOT_J                         shift and go to state 249
    EMPTY                          shift and go to state 251

state 201

    (137) PLOT_F -> CTE_FLOAT . PLOT_J
    (138) PLOT_J -> . COMMA PLOT_F
    (139) PLOT_J -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 250
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    PLOT_J                         shift and go to state 252
    EMPTY                          shift and go to state 251

state 202

    (124) PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 124 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 124 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 124 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 124 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 124 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 124 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 124 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)


state 203

    (125) PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 125 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 125 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 125 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 125 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 125 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 125 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 125 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)


state 204

    (126) PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 126 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 126 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 126 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 126 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 126 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 126 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 126 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)


state 205

    (127) PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 127 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 127 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 127 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 127 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 127 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 127 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 127 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)


state 206

    (128) PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET . PLOT_M
    (144) PLOT_M -> . PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (145) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 255

    PLOT_M                         shift and go to state 253
    PLOT_N                         shift and go to state 254

state 207

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER . COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 256


state 208

    (109) VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .

    TIMES           reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    DIVIDE          reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PLUS            reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    MINS            reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    COMMA           reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    RELOP           reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    AND             reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    OR              reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_SQUARE_BRACKET reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_INTEGER     reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_FLOAT       reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    BOOLEAN         reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    ID              reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    SEMICOLON       reduce using rule 109 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)


state 209

    (112) VARS_CTE_B -> EXP . VARS_CTE_C CLOSE_PARENTHESIS
    (113) VARS_CTE_C -> . COMMA VARS_CTE_B
    (114) VARS_CTE_C -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 258
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)

    VARS_CTE_C                     shift and go to state 257
    EMPTY                          shift and go to state 259

state 210

    (110) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET VARS_CTE_D

    CLOSE_SQUARE_BRACKET shift and go to state 260


state 211

    (98) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .

    TIMES           reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    MINS            reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    AND             reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    OR              reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    ID              reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 98 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)


state 212

    (103) FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .

    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .)


state 213

    (54) LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 261


state 214

    (52) LLAMADAMODULO_A -> COMMA LLAMADAMODULO_C .

    CLOSE_PARENTHESIS reduce using rule 52 (LLAMADAMODULO_A -> COMMA LLAMADAMODULO_C .)


state 215

    (80) EXP -> TERMINO EXP_A pop_exp .

    COMMA           reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CLOSE_PARENTHESIS reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    RELOP           reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    AND             reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    OR              reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CLOSE_SQUARE_BRACKET reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CTE_INTEGER     reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CTE_FLOAT       reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    BOOLEAN         reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    ID              reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    SEMICOLON       reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)


state 216

    (82) EXP_A -> PLUS EXP .

    COMMA           reduce using rule 82 (EXP_A -> PLUS EXP .)
    CLOSE_PARENTHESIS reduce using rule 82 (EXP_A -> PLUS EXP .)
    RELOP           reduce using rule 82 (EXP_A -> PLUS EXP .)
    AND             reduce using rule 82 (EXP_A -> PLUS EXP .)
    OR              reduce using rule 82 (EXP_A -> PLUS EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 82 (EXP_A -> PLUS EXP .)
    CTE_INTEGER     reduce using rule 82 (EXP_A -> PLUS EXP .)
    CTE_FLOAT       reduce using rule 82 (EXP_A -> PLUS EXP .)
    BOOLEAN         reduce using rule 82 (EXP_A -> PLUS EXP .)
    ID              reduce using rule 82 (EXP_A -> PLUS EXP .)
    SEMICOLON       reduce using rule 82 (EXP_A -> PLUS EXP .)


state 217

    (83) EXP_A -> MINS EXP .

    COMMA           reduce using rule 83 (EXP_A -> MINS EXP .)
    CLOSE_PARENTHESIS reduce using rule 83 (EXP_A -> MINS EXP .)
    RELOP           reduce using rule 83 (EXP_A -> MINS EXP .)
    AND             reduce using rule 83 (EXP_A -> MINS EXP .)
    OR              reduce using rule 83 (EXP_A -> MINS EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 83 (EXP_A -> MINS EXP .)
    CTE_INTEGER     reduce using rule 83 (EXP_A -> MINS EXP .)
    CTE_FLOAT       reduce using rule 83 (EXP_A -> MINS EXP .)
    BOOLEAN         reduce using rule 83 (EXP_A -> MINS EXP .)
    ID              reduce using rule 83 (EXP_A -> MINS EXP .)
    SEMICOLON       reduce using rule 83 (EXP_A -> MINS EXP .)


state 218

    (85) TERMINO -> FACTOR TERMINO_A pop_term .

    PLUS            reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    MINS            reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    COMMA           reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    CLOSE_PARENTHESIS reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    RELOP           reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    AND             reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    OR              reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    CLOSE_SQUARE_BRACKET reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    CTE_INTEGER     reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    CTE_FLOAT       reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    BOOLEAN         reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    ID              reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)
    SEMICOLON       reduce using rule 85 (TERMINO -> FACTOR TERMINO_A pop_term .)


state 219

    (87) TERMINO_A -> TIMES TERMINO .

    PLUS            reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    MINS            reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    COMMA           reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    RELOP           reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    AND             reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    OR              reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    CTE_INTEGER     reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    CTE_FLOAT       reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    BOOLEAN         reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    ID              reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)
    SEMICOLON       reduce using rule 87 (TERMINO_A -> TIMES TERMINO .)


state 220

    (88) TERMINO_A -> DIVIDE TERMINO .

    PLUS            reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    MINS            reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    COMMA           reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    RELOP           reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    AND             reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    OR              reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    CTE_INTEGER     reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    CTE_FLOAT       reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    BOOLEAN         reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    ID              reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)
    SEMICOLON       reduce using rule 88 (TERMINO_A -> DIVIDE TERMINO .)


state 221

    (68) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool . BLOQUE CONDICION_A fill_end
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 262

state 222

    (166) EXP_RELOP_A -> RELOP EXP .

    AND             reduce using rule 166 (EXP_RELOP_A -> RELOP EXP .)
    OR              reduce using rule 166 (EXP_RELOP_A -> RELOP EXP .)
    CLOSE_PARENTHESIS reduce using rule 166 (EXP_RELOP_A -> RELOP EXP .)
    CTE_INTEGER     reduce using rule 166 (EXP_RELOP_A -> RELOP EXP .)
    CTE_FLOAT       reduce using rule 166 (EXP_RELOP_A -> RELOP EXP .)
    BOOLEAN         reduce using rule 166 (EXP_RELOP_A -> RELOP EXP .)
    ID              reduce using rule 166 (EXP_RELOP_A -> RELOP EXP .)
    SEMICOLON       reduce using rule 166 (EXP_RELOP_A -> RELOP EXP .)


state 223

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for . SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    SEMICOLON       shift and go to state 263


state 224

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while . BLOQUE goto_while
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 264

state 225

    (152) PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 152 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 152 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 152 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 152 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 152 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 152 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 152 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)


state 226

    (153) PRINT_B -> CTE_STRING print_string PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 153 (PRINT_B -> CTE_STRING print_string PRINT_C .)


state 227

    (156) PRINT_C -> PLUS . PRINT_B
    (153) PRINT_B -> . CTE_STRING print_string PRINT_C
    (154) PRINT_B -> . EXPRESIONESVARIAS
    (158) EXPRESIONESVARIAS -> . NOT EV_C
    (159) EXPRESIONESVARIAS -> . EV_C
    (160) EV_C -> . EXP_RELOP EV_B
    (164) EXP_RELOP -> . EXP EXP_RELOP_A
    (165) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (168) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 118
    NOT             shift and go to state 108
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    PRINT_B                        shift and go to state 265
    EXPRESIONESVARIAS              shift and go to state 119
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 228

    (157) PRINT_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 157 (PRINT_C -> EMPTY .)


state 229

    (117) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .

    ID              reduce using rule 117 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    IF              reduce using rule 117 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    FOR_KEYWORD     reduce using rule 117 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 117 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 117 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 117 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 117 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)


state 230

    (118) INPUT_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET INPUT_B

    CLOSE_SQUARE_BRACKET shift and go to state 266


state 231

    (50) MODULO_C -> TIPO_P ID MODULO_B . CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET

    CLOSE_PARENTHESIS shift and go to state 267


state 232

    (48) MODULO_B -> COMMA . MODULO_C
    (50) MODULO_C -> . TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21

    MODULO_C                       shift and go to state 268
    TIPO_P                         shift and go to state 122

state 233

    (49) MODULO_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 49 (MODULO_B -> EMPTY .)


state 234

    (12) VARS_F -> OPEN_SQUARE_BRACKET . CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C

    CTE_INTEGER     shift and go to state 269


state 235

    (10) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .

    SEMICOLON       reduce using rule 10 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .)
    COMMA           reduce using rule 10 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .)


state 236

    (13) VARS_F -> VARS_C .

    SEMICOLON       reduce using rule 13 (VARS_F -> VARS_C .)
    COMMA           reduce using rule 13 (VARS_F -> VARS_C .)


state 237

    (59) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .

    ID              reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    IF              reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FOR_KEYWORD     reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    WHILE_KEYWORD   reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PRINT_KEYWORD   reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    INPUT_KEYWORD   reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_BRACKET   reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    NOT             reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OPEN_PARENTHESIS reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PLUS            reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    MINS            reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_INTEGER     reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_FLOAT       reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    BOOLEAN         reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    SEMICOLON       reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    AND             reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OR              reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RELOP           reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TIMES           reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    DIVIDE          reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_PARENTHESIS reduce using rule 59 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)


state 238

    (64) ASIGNACION_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 270
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 239

    (62) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B .

    EQUAL           reduce using rule 62 (ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B .)


state 240

    (65) ASIGNACION_B -> EMPTY .

    EQUAL           reduce using rule 65 (ASIGNACION_B -> EMPTY .)


state 241

    (55) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 271


state 242

    (90) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 272


state 243

    (130) PLOT_C -> PLOT_I CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 273


state 244

    (131) PLOT_I -> CTE_INTEGER PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 131 (PLOT_I -> CTE_INTEGER PLOT_D .)


state 245

    (133) PLOT_D -> COMMA . PLOT_I
    (131) PLOT_I -> . CTE_INTEGER PLOT_D
    (132) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 196
    CTE_FLOAT       shift and go to state 197

    PLOT_I                         shift and go to state 274

state 246

    (134) PLOT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 134 (PLOT_D -> EMPTY .)


state 247

    (132) PLOT_I -> CTE_FLOAT PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 132 (PLOT_I -> CTE_FLOAT PLOT_D .)


state 248

    (135) PLOT_E -> PLOT_F SEMICOLON . PLOT_G
    (140) PLOT_G -> . PLOT_K CLOSE_PARENTHESIS SEMICOLON
    (141) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 277

    PLOT_G                         shift and go to state 275
    PLOT_K                         shift and go to state 276

state 249

    (136) PLOT_F -> CTE_INTEGER PLOT_J .

    SEMICOLON       reduce using rule 136 (PLOT_F -> CTE_INTEGER PLOT_J .)


state 250

    (138) PLOT_J -> COMMA . PLOT_F
    (136) PLOT_F -> . CTE_INTEGER PLOT_J
    (137) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 200
    CTE_FLOAT       shift and go to state 201

    PLOT_F                         shift and go to state 278

state 251

    (139) PLOT_J -> EMPTY .

    SEMICOLON       reduce using rule 139 (PLOT_J -> EMPTY .)


state 252

    (137) PLOT_F -> CTE_FLOAT PLOT_J .

    SEMICOLON       reduce using rule 137 (PLOT_F -> CTE_FLOAT PLOT_J .)


state 253

    (128) PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .

    ID              reduce using rule 128 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    IF              reduce using rule 128 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    FOR_KEYWORD     reduce using rule 128 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    WHILE_KEYWORD   reduce using rule 128 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    PRINT_KEYWORD   reduce using rule 128 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    INPUT_KEYWORD   reduce using rule 128 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    CLOSE_BRACKET   reduce using rule 128 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)


state 254

    (144) PLOT_M -> PLOT_N . CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 279


state 255

    (145) PLOT_N -> CTE_STRING . PLOT_O
    (146) PLOT_O -> . COMMA PLOT_N
    (147) PLOT_O -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 281
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)

    PLOT_O                         shift and go to state 280
    EMPTY                          shift and go to state 282

state 256

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA . CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 283


state 257

    (112) VARS_CTE_B -> EXP VARS_CTE_C . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 284


state 258

    (113) VARS_CTE_C -> COMMA . VARS_CTE_B
    (112) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 285
    EXP                            shift and go to state 209
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 259

    (114) VARS_CTE_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 114 (VARS_CTE_C -> EMPTY .)


state 260

    (110) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . VARS_CTE_D
    (115) VARS_CTE_D -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (116) VARS_CTE_D -> . EMPTY
    (168) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 286
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    PLUS            reduce using rule 168 (EMPTY -> .)
    MINS            reduce using rule 168 (EMPTY -> .)
    COMMA           reduce using rule 168 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)
    RELOP           reduce using rule 168 (EMPTY -> .)
    AND             reduce using rule 168 (EMPTY -> .)
    OR              reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 168 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 168 (EMPTY -> .)
    BOOLEAN         reduce using rule 168 (EMPTY -> .)
    ID              reduce using rule 168 (EMPTY -> .)
    SEMICOLON       reduce using rule 168 (EMPTY -> .)

    VARS_CTE_D                     shift and go to state 287
    EMPTY                          shift and go to state 288

state 261

    (54) LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 54 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 54 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 54 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 54 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 54 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 54 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 54 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_PARENTHESIS reduce using rule 54 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)


state 262

    (68) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE . CONDICION_A fill_end
    (71) CONDICION_A -> . gotoElse ELSE BLOQUE
    (72) CONDICION_A -> . EMPTY
    (73) gotoElse -> .
    (168) EMPTY -> .

    ELSE            reduce using rule 73 (gotoElse -> .)
    ID              reduce using rule 168 (EMPTY -> .)
    IF              reduce using rule 168 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 168 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 168 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 168 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 168 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 168 (EMPTY -> .)

    CONDICION_A                    shift and go to state 289
    gotoElse                       shift and go to state 290
    EMPTY                          shift and go to state 291

state 263

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON . ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (59) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 114

    ASIGNACION                     shift and go to state 292

state 264

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE . goto_while
    (78) goto_while -> .

    ID              reduce using rule 78 (goto_while -> .)
    IF              reduce using rule 78 (goto_while -> .)
    FOR_KEYWORD     reduce using rule 78 (goto_while -> .)
    WHILE_KEYWORD   reduce using rule 78 (goto_while -> .)
    PRINT_KEYWORD   reduce using rule 78 (goto_while -> .)
    INPUT_KEYWORD   reduce using rule 78 (goto_while -> .)
    CLOSE_BRACKET   reduce using rule 78 (goto_while -> .)

    goto_while                     shift and go to state 293

state 265

    (156) PRINT_C -> PLUS PRINT_B .

    CLOSE_PARENTHESIS reduce using rule 156 (PRINT_C -> PLUS PRINT_B .)


state 266

    (118) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . INPUT_B
    (120) INPUT_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET shift and go to state 294

    INPUT_B                        shift and go to state 295

state 267

    (50) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS . OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 296


state 268

    (48) MODULO_B -> COMMA MODULO_C .

    CLOSE_PARENTHESIS reduce using rule 48 (MODULO_B -> COMMA MODULO_C .)


state 269

    (12) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER . CLOSE_SQUARE_BRACKET VARS_C

    CLOSE_SQUARE_BRACKET shift and go to state 297


state 270

    (64) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 298


state 271

    (55) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 55 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 55 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 55 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 55 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 55 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 55 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 55 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 272

    (90) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 90 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 90 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 90 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 90 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 90 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 90 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 90 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)


state 273

    (130) PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 130 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 130 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 130 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 130 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 130 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 130 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 130 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)


state 274

    (133) PLOT_D -> COMMA PLOT_I .

    CLOSE_PARENTHESIS reduce using rule 133 (PLOT_D -> COMMA PLOT_I .)


state 275

    (135) PLOT_E -> PLOT_F SEMICOLON PLOT_G .

    ID              reduce using rule 135 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    IF              reduce using rule 135 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    FOR_KEYWORD     reduce using rule 135 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    WHILE_KEYWORD   reduce using rule 135 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    PRINT_KEYWORD   reduce using rule 135 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    INPUT_KEYWORD   reduce using rule 135 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    CLOSE_BRACKET   reduce using rule 135 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)


state 276

    (140) PLOT_G -> PLOT_K . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 299


state 277

    (141) PLOT_K -> CTE_STRING . PLOT_H
    (142) PLOT_H -> . COMMA PLOT_K
    (143) PLOT_H -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 301
    CLOSE_PARENTHESIS reduce using rule 168 (EMPTY -> .)

    PLOT_H                         shift and go to state 300
    EMPTY                          shift and go to state 302

state 278

    (138) PLOT_J -> COMMA PLOT_F .

    SEMICOLON       reduce using rule 138 (PLOT_J -> COMMA PLOT_F .)


state 279

    (144) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET . SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 303


state 280

    (145) PLOT_N -> CTE_STRING PLOT_O .

    CLOSE_SQUARE_BRACKET reduce using rule 145 (PLOT_N -> CTE_STRING PLOT_O .)


state 281

    (146) PLOT_O -> COMMA . PLOT_N
    (145) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 255

    PLOT_N                         shift and go to state 304

state 282

    (147) PLOT_O -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 147 (PLOT_O -> EMPTY .)


state 283

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER . COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 305


state 284

    (112) VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .

    TIMES           reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    MINS            reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    AND             reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    OR              reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    ID              reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 112 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)


state 285

    (113) VARS_CTE_C -> COMMA VARS_CTE_B .

    CLOSE_PARENTHESIS reduce using rule 113 (VARS_CTE_C -> COMMA VARS_CTE_B .)


state 286

    (115) VARS_CTE_D -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 306
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 287

    (110) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .

    TIMES           reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    DIVIDE          reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PLUS            reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    MINS            reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    COMMA           reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_PARENTHESIS reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    RELOP           reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    AND             reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    OR              reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_SQUARE_BRACKET reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_INTEGER     reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_FLOAT       reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    BOOLEAN         reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    ID              reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    SEMICOLON       reduce using rule 110 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)


state 288

    (116) VARS_CTE_D -> EMPTY .

    TIMES           reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    DIVIDE          reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    PLUS            reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    MINS            reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    COMMA           reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    RELOP           reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    AND             reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    OR              reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    CTE_INTEGER     reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    CTE_FLOAT       reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    BOOLEAN         reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    ID              reduce using rule 116 (VARS_CTE_D -> EMPTY .)
    SEMICOLON       reduce using rule 116 (VARS_CTE_D -> EMPTY .)


state 289

    (68) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A . fill_end
    (69) fill_end -> .

    ID              reduce using rule 69 (fill_end -> .)
    IF              reduce using rule 69 (fill_end -> .)
    FOR_KEYWORD     reduce using rule 69 (fill_end -> .)
    WHILE_KEYWORD   reduce using rule 69 (fill_end -> .)
    PRINT_KEYWORD   reduce using rule 69 (fill_end -> .)
    INPUT_KEYWORD   reduce using rule 69 (fill_end -> .)
    CLOSE_BRACKET   reduce using rule 69 (fill_end -> .)

    fill_end                       shift and go to state 307

state 290

    (71) CONDICION_A -> gotoElse . ELSE BLOQUE

    ELSE            shift and go to state 308


state 291

    (72) CONDICION_A -> EMPTY .

    ID              reduce using rule 72 (CONDICION_A -> EMPTY .)
    IF              reduce using rule 72 (CONDICION_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 72 (CONDICION_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 72 (CONDICION_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 72 (CONDICION_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 72 (CONDICION_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 72 (CONDICION_A -> EMPTY .)


state 292

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION . CLOSE_PARENTHESIS BLOQUE repeat_for

    CLOSE_PARENTHESIS shift and go to state 309


state 293

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .

    ID              reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    IF              reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    FOR_KEYWORD     reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    WHILE_KEYWORD   reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    PRINT_KEYWORD   reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    INPUT_KEYWORD   reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    CLOSE_BRACKET   reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)


state 294

    (120) INPUT_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A pop_term
    (97) FACTOR -> . FACTOR_A
    (98) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (99) FACTOR_A -> . PLUS FACTOR_C
    (100) FACTOR_A -> . MINS FACTOR_C
    (101) FACTOR_A -> . FACTOR_C
    (102) FACTOR_A -> . EMPTY
    (104) FACTOR_C -> . VARS_CTE
    (168) EMPTY -> .
    (105) VARS_CTE -> . CTE_INTEGER
    (106) VARS_CTE -> . CTE_FLOAT
    (107) VARS_CTE -> . BOOLEAN
    (108) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 168 (EMPTY -> .)
    DIVIDE          reduce using rule 168 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 168 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 168 (EMPTY -> .) ]

    EXP                            shift and go to state 310
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 295

    (118) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .

    SEMICOLON       reduce using rule 118 (INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .)


state 296

    (50) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET . VARS BLOQUE CLOSE_BRACKET
    (5) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 311

state 297

    (12) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET . VARS_C
    (14) VARS_C -> . SEMICOLON VARS_D
    (15) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 124
    COMMA           shift and go to state 125

    VARS_C                         shift and go to state 312

state 298

    (64) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    EQUAL           reduce using rule 64 (ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 299

    (140) PLOT_G -> PLOT_K CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 313


state 300

    (141) PLOT_K -> CTE_STRING PLOT_H .

    CLOSE_PARENTHESIS reduce using rule 141 (PLOT_K -> CTE_STRING PLOT_H .)


state 301

    (142) PLOT_H -> COMMA . PLOT_K
    (141) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 277

    PLOT_K                         shift and go to state 314

state 302

    (143) PLOT_H -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 143 (PLOT_H -> EMPTY .)


state 303

    (144) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON . OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    OPEN_SQUARE_BRACKET shift and go to state 315


state 304

    (146) PLOT_O -> COMMA PLOT_N .

    CLOSE_SQUARE_BRACKET reduce using rule 146 (PLOT_O -> COMMA PLOT_N .)


state 305

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA . CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 316


state 306

    (115) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 317


state 307

    (68) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .

    ID              reduce using rule 68 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    IF              reduce using rule 68 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    FOR_KEYWORD     reduce using rule 68 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    WHILE_KEYWORD   reduce using rule 68 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    PRINT_KEYWORD   reduce using rule 68 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    INPUT_KEYWORD   reduce using rule 68 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    CLOSE_BRACKET   reduce using rule 68 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)


state 308

    (71) CONDICION_A -> gotoElse ELSE . BLOQUE
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 318

state 309

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS . BLOQUE repeat_for
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 319

state 310

    (120) INPUT_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 320


state 311

    (50) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS . BLOQUE CLOSE_BRACKET
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 321

state 312

    (12) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .

    SEMICOLON       reduce using rule 12 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .)
    COMMA           reduce using rule 12 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .)


state 313

    (140) PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 140 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 140 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 140 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 140 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 140 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 140 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 140 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)


state 314

    (142) PLOT_H -> COMMA PLOT_K .

    CLOSE_PARENTHESIS reduce using rule 142 (PLOT_H -> COMMA PLOT_K .)


state 315

    (144) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET . PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (148) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 323

    PLOT_P                         shift and go to state 322

state 316

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER . SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 324


state 317

    (115) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    TIMES           reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    DIVIDE          reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PLUS            reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    MINS            reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    RELOP           reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    AND             reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    OR              reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_SQUARE_BRACKET reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_INTEGER     reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_FLOAT       reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    BOOLEAN         reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    ID              reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    SEMICOLON       reduce using rule 115 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 318

    (71) CONDICION_A -> gotoElse ELSE BLOQUE .

    ID              reduce using rule 71 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    IF              reduce using rule 71 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    FOR_KEYWORD     reduce using rule 71 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    WHILE_KEYWORD   reduce using rule 71 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    PRINT_KEYWORD   reduce using rule 71 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    INPUT_KEYWORD   reduce using rule 71 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    CLOSE_BRACKET   reduce using rule 71 (CONDICION_A -> gotoElse ELSE BLOQUE .)


state 319

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE . repeat_for
    (75) repeat_for -> .

    ID              reduce using rule 75 (repeat_for -> .)
    IF              reduce using rule 75 (repeat_for -> .)
    FOR_KEYWORD     reduce using rule 75 (repeat_for -> .)
    WHILE_KEYWORD   reduce using rule 75 (repeat_for -> .)
    PRINT_KEYWORD   reduce using rule 75 (repeat_for -> .)
    INPUT_KEYWORD   reduce using rule 75 (repeat_for -> .)
    CLOSE_BRACKET   reduce using rule 75 (repeat_for -> .)

    repeat_for                     shift and go to state 325

state 320

    (120) INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 120 (INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 321

    (50) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 326


state 322

    (144) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 327


state 323

    (148) PLOT_P -> CTE_STRING . PLOT_Q
    (149) PLOT_Q -> . COMMA PLOT_P
    (150) PLOT_Q -> . EMPTY
    (168) EMPTY -> .

    COMMA           shift and go to state 329
    CLOSE_SQUARE_BRACKET reduce using rule 168 (EMPTY -> .)

    PLOT_Q                         shift and go to state 328
    EMPTY                          shift and go to state 330

state 324

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON . CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 331


state 325

    (74) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .

    ID              reduce using rule 74 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    IF              reduce using rule 74 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    FOR_KEYWORD     reduce using rule 74 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    WHILE_KEYWORD   reduce using rule 74 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    PRINT_KEYWORD   reduce using rule 74 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    INPUT_KEYWORD   reduce using rule 74 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    CLOSE_BRACKET   reduce using rule 74 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)


state 326

    (50) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET .

    MODULE          reduce using rule 50 (MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET .)
    MAIN            reduce using rule 50 (MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 50 (MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET .)


state 327

    (144) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 332


state 328

    (148) PLOT_P -> CTE_STRING PLOT_Q .

    CLOSE_SQUARE_BRACKET reduce using rule 148 (PLOT_P -> CTE_STRING PLOT_Q .)


state 329

    (149) PLOT_Q -> COMMA . PLOT_P
    (148) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 323

    PLOT_P                         shift and go to state 333

state 330

    (150) PLOT_Q -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 150 (PLOT_Q -> EMPTY .)


state 331

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING . COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 334


state 332

    (144) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 335


state 333

    (149) PLOT_Q -> COMMA PLOT_P .

    CLOSE_SQUARE_BRACKET reduce using rule 149 (PLOT_Q -> COMMA PLOT_P .)


state 334

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 336


state 335

    (144) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 144 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 144 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 144 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 144 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 144 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 144 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 144 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)


state 336

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 337


state 337

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 338


state 338

    (129) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 129 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 129 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 129 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 129 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 129 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 129 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 129 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINS in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINS in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINS in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINS in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINS in state 93 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 93 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 93 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINS in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 108 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 108 resolved as shift
WARNING: shift/reduce conflict for ID in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINS in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 128 resolved as shift
WARNING: shift/reduce conflict for MINS in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINS in state 141 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINS in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINS in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINS in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 150 resolved as shift
WARNING: shift/reduce conflict for ID in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MINS in state 151 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 151 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 151 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 151 resolved as shift
WARNING: shift/reduce conflict for ID in state 151 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MINS in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 154 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 154 resolved as shift
WARNING: shift/reduce conflict for ID in state 154 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 155 resolved as shift
WARNING: shift/reduce conflict for MINS in state 155 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 155 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 155 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINS in state 166 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 166 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 166 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MINS in state 173 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 227 resolved as shift
WARNING: shift/reduce conflict for MINS in state 227 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 238 resolved as shift
WARNING: shift/reduce conflict for MINS in state 238 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 258 resolved as shift
WARNING: shift/reduce conflict for MINS in state 258 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 286 resolved as shift
WARNING: shift/reduce conflict for MINS in state 286 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 294 resolved as shift
WARNING: shift/reduce conflict for MINS in state 294 resolved as shift
WARNING: reduce/reduce conflict in state 112 resolved using rule (FACTOR_A -> EMPTY)
WARNING: rejected rule (EXP_RELOP -> EMPTY) in state 112
WARNING: Rule (EXP_RELOP -> EMPTY) is never reduced
