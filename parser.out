Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CREATE
    CTE_CHAR
    E
    FALSE
    PI
    QUOTE
    RETURN
    TRUE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET
Rule 2     addfunction -> <empty>
Rule 3     PROGRAMA_A -> MODULO PROGRAMA_A
Rule 4     PROGRAMA_A -> EMPTY
Rule 5     VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A
Rule 6     VARS_A -> TIPO_P VARS_B
Rule 7     VARS_A -> TIPO_S VARS_B
Rule 8     VARS_B -> ID add_variable VARS_E VARS_C
Rule 9     add_variable -> <empty>
Rule 10    VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F
Rule 11    VARS_E -> EMPTY
Rule 12    VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C
Rule 13    VARS_F -> VARS_C
Rule 14    VARS_C -> SEMICOLON VARS_D
Rule 15    VARS_C -> COMMA VARS_B
Rule 16    VARS_D -> CLOSE_BRACKET
Rule 17    VARS_D -> VARS_A
Rule 18    BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET
Rule 19    ESTATUTO_A -> ESTATUTO ESTATUTO_A
Rule 20    ESTATUTO_A -> EMPTY
Rule 21    ESTATUTO -> ASIGNACION
Rule 22    ESTATUTO -> CONDICION
Rule 23    ESTATUTO -> NOMBRAR
Rule 24    ESTATUTO -> FOR
Rule 25    ESTATUTO -> WHILE
Rule 26    ESTATUTO -> PRINT
Rule 27    ESTATUTO -> PLOT
Rule 28    ESTATUTO -> LLAMADAMODULO
Rule 29    ESTATUTO -> INPUT
Rule 30    ESTATUTO -> COLOR
Rule 31    TIPO_P -> INT
Rule 32    TIPO_P -> FLOAT
Rule 33    TIPO_P -> BOOL
Rule 34    TIPO_P -> CHAR
Rule 35    TIPO_S -> TYPE_GRAPH
Rule 36    TIPO_S -> TYPE_PIECHART
Rule 37    TIPO_S -> TYPE_BARCHART
Rule 38    TIPO_S -> TYPE_HORBARCHART
Rule 39    TIPO_S -> TYPE_DONUTGRAPH
Rule 40    TIPO_S -> TYPE_NETWORK
Rule 41    TIPO_S -> TYPE_VENN
Rule 42    TIPO_S -> TYPE_RADARCHART
Rule 43    MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C
Rule 44    add_functionr -> <empty>
Rule 45    MODULO_A -> VOID
Rule 46    MODULO_A -> TIPO_P
Rule 47    MODULO_B -> COMMA MODULO_C
Rule 48    MODULO_B -> EMPTY
Rule 49    MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET
Rule 50    LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C
Rule 51    LLAMADAMODULO_A -> COMMA LLAMADAMODULO_C
Rule 52    LLAMADAMODULO_A -> EMPTY
Rule 53    LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON
Rule 54    NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 55    NOMBRAR_A -> NAME
Rule 56    NOMBRAR_A -> NAMEX
Rule 57    NOMBRAR_A -> NAMEY
Rule 58    ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D
Rule 59    ASIGNACION_D -> SEMICOLON quad
Rule 60    ASIGNACION_D -> EMPTY quad
Rule 61    quad -> <empty>
Rule 62    addStackO -> <empty>
Rule 63    ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
Rule 64    ASIGNACION_A -> EMPTY
Rule 65    ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 66    ASIGNACION_B -> EMPTY
Rule 67    ASIGNACION_C -> EQUAL EXPRESIONESVARIAS
Rule 68    ASIGNACION_C -> EQUAL CTE_STRING
Rule 69    CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
Rule 70    fill_end -> <empty>
Rule 71    check_bool -> <empty>
Rule 72    CONDICION_A -> gotoElse ELSE BLOQUE
Rule 73    CONDICION_A -> EMPTY
Rule 74    gotoElse -> <empty>
Rule 75    FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
Rule 76    repeat_for -> <empty>
Rule 77    WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
Rule 78    goto_while -> <empty>
Rule 79    bool_while -> <empty>
Rule 80    EXP -> TERMINO EXP_A pop_exp
Rule 81    pop_exp -> <empty>
Rule 82    EXP_A -> PLUS EXP
Rule 83    EXP_A -> MINS EXP
Rule 84    EXP_A -> EMPTY
Rule 85    TERMINO -> FACTOR TERMINO_A
Rule 86    TERMINO_A -> TIMES TERMINO
Rule 87    TERMINO_A -> DIVIDE TERMINO
Rule 88    TERMINO_A -> EMPTY
Rule 89    COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
Rule 90    COLOR_A -> COLOR_RED
Rule 91    COLOR_A -> COLOR_BLACK
Rule 92    COLOR_A -> COLOR_BLUE
Rule 93    COLOR_A -> COLOR_PURPLE
Rule 94    COLOR_A -> COLOR_GREEN
Rule 95    COLOR_A -> COLOR_ORANGE
Rule 96    FACTOR -> FACTOR_A
Rule 97    FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
Rule 98    FACTOR_A -> PLUS FACTOR_C
Rule 99    FACTOR_A -> MINS FACTOR_C
Rule 100   FACTOR_A -> FACTOR_C
Rule 101   FACTOR_A -> EMPTY
Rule 102   FACTOR_B -> EXPRESIONESVARIAS FACTOR_C
Rule 103   FACTOR_C -> VARS_CTE
Rule 104   VARS_CTE -> CTE_INTEGER
Rule 105   VARS_CTE -> CTE_FLOAT
Rule 106   VARS_CTE -> BOOLEAN
Rule 107   VARS_CTE -> ID VARS_CTE_A
Rule 108   VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B
Rule 109   VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
Rule 110   VARS_CTE_A -> EMPTY
Rule 111   VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS
Rule 112   VARS_CTE_C -> COMMA VARS_CTE_B
Rule 113   VARS_CTE_C -> EMPTY
Rule 114   VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 115   VARS_CTE_D -> EMPTY
Rule 116   INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON
Rule 117   INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
Rule 118   INPUT_A -> EMPTY
Rule 119   INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 120   PLOT -> ID POINT PLOT_B
Rule 121   PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C
Rule 122   PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E
Rule 123   PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E
Rule 124   PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E
Rule 125   PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E
Rule 126   PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E
Rule 127   PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
Rule 128   PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 129   PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON
Rule 130   PLOT_I -> CTE_INTEGER PLOT_D
Rule 131   PLOT_I -> CTE_FLOAT PLOT_D
Rule 132   PLOT_D -> COMMA PLOT_I
Rule 133   PLOT_D -> EMPTY
Rule 134   PLOT_E -> PLOT_F SEMICOLON PLOT_G
Rule 135   PLOT_F -> CTE_INTEGER PLOT_J
Rule 136   PLOT_F -> CTE_FLOAT PLOT_J
Rule 137   PLOT_J -> COMMA PLOT_F
Rule 138   PLOT_J -> EMPTY
Rule 139   PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON
Rule 140   PLOT_K -> CTE_STRING PLOT_H
Rule 141   PLOT_H -> COMMA PLOT_K
Rule 142   PLOT_H -> EMPTY
Rule 143   PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
Rule 144   PLOT_N -> CTE_STRING PLOT_O
Rule 145   PLOT_O -> COMMA PLOT_N
Rule 146   PLOT_O -> EMPTY
Rule 147   PLOT_P -> CTE_STRING PLOT_Q
Rule 148   PLOT_Q -> COMMA PLOT_P
Rule 149   PLOT_Q -> EMPTY
Rule 150   PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
Rule 151   PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON
Rule 152   PRINT_B -> CTE_STRING PRINT_C
Rule 153   PRINT_B -> EXPRESIONESVARIAS
Rule 154   PRINT_C -> PLUS PRINT_B
Rule 155   PRINT_C -> EMPTY
Rule 156   EXPRESIONESVARIAS -> NOT EV_C
Rule 157   EXPRESIONESVARIAS -> EV_C
Rule 158   EV_C -> EXP_RELOP EV_B
Rule 159   EV_B -> AND
Rule 160   EV_B -> OR
Rule 161   EV_B -> EMPTY
Rule 162   EXP_RELOP -> EXP EXP_RELOP_A
Rule 163   EXP_RELOP -> EMPTY
Rule 164   EXP_RELOP_A -> RELOP EXP
Rule 165   EXP_RELOP_A -> EMPTY
Rule 166   EMPTY -> <empty>

Terminals, with rules where they appear

AND                  : 159
BOOL                 : 33
BOOLEAN              : 106
CHAR                 : 34
CLOSE_BRACKET        : 1 16 18 49
CLOSE_PARENTHESIS    : 49 53 54 69 75 77 89 97 111 128 129 139 143 151
CLOSE_SQUARE_BRACKET : 10 12 63 65 109 114 117 119 143 143
COLOR_BLACK          : 91
COLOR_BLUE           : 92
COLOR_GREEN          : 94
COLOR_KEYWORD        : 89
COLOR_ORANGE         : 95
COLOR_PURPLE         : 93
COLOR_RED            : 90
COMMA                : 15 47 51 112 128 128 128 132 137 141 145 148
CREATE               : 
CREATED              : 125
CREATEG              : 121
CREATEGB             : 123
CREATEGBH            : 124
CREATEN              : 127
CREATEPC             : 122
CREATER              : 126
CREATEV              : 128
CTE_CHAR             : 
CTE_FLOAT            : 105 131 136
CTE_INTEGER          : 10 12 104 128 128 128 130 135
CTE_STRING           : 54 68 128 128 140 144 147 152
DIVIDE               : 87
E                    : 
ELSE                 : 72
EQUAL                : 67 68
FALSE                : 
FLOAT                : 32
FOR_KEYWORD          : 75
ID                   : 1 8 43 49 50 54 58 89 107 116 120
IF                   : 69
INPUTSYMBOL          : 116
INPUT_KEYWORD        : 116
INT                  : 31
MAIN                 : 1
MINS                 : 83 99
MODULE               : 43
NAME                 : 55
NAMEX                : 56
NAMEY                : 57
NOT                  : 156
OPEN_BRACKET         : 1 5 18 49
OPEN_PARENTHESIS     : 43 50 54 69 75 77 89 97 108 121 122 123 124 125 126 127 128 150
OPEN_SQUARE_BRACKET  : 10 12 63 65 109 114 117 119 127 143
OR                   : 160
PI                   : 
PLUS                 : 82 98 154
POINT                : 54 89 120
PRINT_KEYWORD        : 150
PROGRAM              : 1
QUOTE                : 
RELOP                : 164
RETURN               : 
SEMICOLON            : 14 53 54 59 75 89 116 128 128 129 134 139 143 143 151
TIMES                : 86
TRUE                 : 
TYPE_BARCHART        : 37
TYPE_DONUTGRAPH      : 39
TYPE_GRAPH           : 35
TYPE_HORBARCHART     : 38
TYPE_NETWORK         : 40
TYPE_PIECHART        : 36
TYPE_RADARCHART      : 42
TYPE_VENN            : 41
VARS_KEYWORD         : 5
VOID                 : 45
WHILE_KEYWORD        : 77
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 21 75 75
ASIGNACION_A         : 58
ASIGNACION_B         : 63
ASIGNACION_C         : 58
ASIGNACION_D         : 58
BLOQUE               : 1 49 69 72 75 77
COLOR                : 30
COLOR_A              : 89
CONDICION            : 22
CONDICION_A          : 69
EMPTY                : 4 11 20 48 52 60 64 66 73 84 88 101 110 113 115 118 133 138 142 146 149 155 161 163 165
ESTATUTO             : 19
ESTATUTO_A           : 18 19
EV_B                 : 158
EV_C                 : 156 157
EXP                  : 53 63 65 82 83 109 111 114 117 119 162 164
EXPRESIONESVARIAS    : 67 69 75 77 102 153
EXP_A                : 80
EXP_RELOP            : 158
EXP_RELOP_A          : 162
FACTOR               : 85
FACTOR_A             : 96
FACTOR_B             : 97
FACTOR_C             : 98 99 100 102
FOR                  : 24
INPUT                : 29
INPUT_A              : 116
INPUT_B              : 117
LLAMADAMODULO        : 28
LLAMADAMODULO_A      : 53
LLAMADAMODULO_C      : 50 51
MODULO               : 3
MODULO_A             : 43
MODULO_B             : 49
MODULO_C             : 43 47
NOMBRAR              : 23
NOMBRAR_A            : 54
PLOT                 : 27
PLOT_B               : 120
PLOT_C               : 121
PLOT_D               : 130 131
PLOT_E               : 122 123 124 125 126
PLOT_F               : 134 137
PLOT_G               : 134
PLOT_H               : 140
PLOT_I               : 129 132
PLOT_J               : 135 136
PLOT_K               : 139 141
PLOT_M               : 127
PLOT_N               : 143 145
PLOT_O               : 144
PLOT_P               : 143 148
PLOT_Q               : 147
PRINT                : 26
PRINT_A              : 150
PRINT_B              : 151 154
PRINT_C              : 152
PROGRAMA             : 0
PROGRAMA_A           : 1 3
TERMINO              : 80 86 87
TERMINO_A            : 85
TIPO_P               : 6 46 49
TIPO_S               : 7
VARS                 : 1 49
VARS_A               : 5 17
VARS_B               : 6 7 15
VARS_C               : 8 12 13
VARS_CTE             : 103
VARS_CTE_A           : 107
VARS_CTE_B           : 108 112
VARS_CTE_C           : 111
VARS_CTE_D           : 109
VARS_D               : 14
VARS_E               : 8
VARS_F               : 10
WHILE                : 25
addStackO            : 58
add_functionr        : 43
add_variable         : 8
addfunction          : 1
bool_while           : 75 77
check_bool           : 69
fill_end             : 69
gotoElse             : 72
goto_while           : 77
pop_exp              : 80
quad                 : 59 60
repeat_for           : 75

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET
    (2) addfunction -> .

    OPEN_BRACKET    reduce using rule 2 (addfunction -> .)

    addfunction                    shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addfunction . OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET . VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET
    (5) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 6

state 6

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS . PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET
    (3) PROGRAMA_A -> . MODULO PROGRAMA_A
    (4) PROGRAMA_A -> . EMPTY
    (43) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C
    (166) EMPTY -> .

    MODULE          shift and go to state 11
    MAIN            reduce using rule 166 (EMPTY -> .)

    PROGRAMA_A                     shift and go to state 8
    MODULO                         shift and go to state 9
    EMPTY                          shift and go to state 10

state 7

    (5) VARS -> VARS_KEYWORD . OPEN_BRACKET VARS_A

    OPEN_BRACKET    shift and go to state 12


state 8

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A . MAIN BLOQUE CLOSE_BRACKET

    MAIN            shift and go to state 13


state 9

    (3) PROGRAMA_A -> MODULO . PROGRAMA_A
    (3) PROGRAMA_A -> . MODULO PROGRAMA_A
    (4) PROGRAMA_A -> . EMPTY
    (43) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C
    (166) EMPTY -> .

    MODULE          shift and go to state 11
    MAIN            reduce using rule 166 (EMPTY -> .)

    MODULO                         shift and go to state 9
    PROGRAMA_A                     shift and go to state 14
    EMPTY                          shift and go to state 10

state 10

    (4) PROGRAMA_A -> EMPTY .

    MAIN            reduce using rule 4 (PROGRAMA_A -> EMPTY .)


state 11

    (43) MODULO -> MODULE . MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C
    (45) MODULO_A -> . VOID
    (46) MODULO_A -> . TIPO_P
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR

    VOID            shift and go to state 16
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21

    MODULO_A                       shift and go to state 15
    TIPO_P                         shift and go to state 17

state 12

    (5) VARS -> VARS_KEYWORD OPEN_BRACKET . VARS_A
    (6) VARS_A -> . TIPO_P VARS_B
    (7) VARS_A -> . TIPO_S VARS_B
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR
    (35) TIPO_S -> . TYPE_GRAPH
    (36) TIPO_S -> . TYPE_PIECHART
    (37) TIPO_S -> . TYPE_BARCHART
    (38) TIPO_S -> . TYPE_HORBARCHART
    (39) TIPO_S -> . TYPE_DONUTGRAPH
    (40) TIPO_S -> . TYPE_NETWORK
    (41) TIPO_S -> . TYPE_VENN
    (42) TIPO_S -> . TYPE_RADARCHART

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21
    TYPE_GRAPH      shift and go to state 25
    TYPE_PIECHART   shift and go to state 26
    TYPE_BARCHART   shift and go to state 27
    TYPE_HORBARCHART shift and go to state 28
    TYPE_DONUTGRAPH shift and go to state 29
    TYPE_NETWORK    shift and go to state 30
    TYPE_VENN       shift and go to state 31
    TYPE_RADARCHART shift and go to state 32

    VARS_A                         shift and go to state 22
    TIPO_P                         shift and go to state 23
    TIPO_S                         shift and go to state 24

state 13

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN . BLOQUE CLOSE_BRACKET
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 34

state 14

    (3) PROGRAMA_A -> MODULO PROGRAMA_A .

    MAIN            reduce using rule 3 (PROGRAMA_A -> MODULO PROGRAMA_A .)


state 15

    (43) MODULO -> MODULE MODULO_A . ID add_functionr OPEN_PARENTHESIS MODULO_C

    ID              shift and go to state 35


state 16

    (45) MODULO_A -> VOID .

    ID              reduce using rule 45 (MODULO_A -> VOID .)


state 17

    (46) MODULO_A -> TIPO_P .

    ID              reduce using rule 46 (MODULO_A -> TIPO_P .)


state 18

    (31) TIPO_P -> INT .

    ID              reduce using rule 31 (TIPO_P -> INT .)


state 19

    (32) TIPO_P -> FLOAT .

    ID              reduce using rule 32 (TIPO_P -> FLOAT .)


state 20

    (33) TIPO_P -> BOOL .

    ID              reduce using rule 33 (TIPO_P -> BOOL .)


state 21

    (34) TIPO_P -> CHAR .

    ID              reduce using rule 34 (TIPO_P -> CHAR .)


state 22

    (5) VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .

    MODULE          reduce using rule 5 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    MAIN            reduce using rule 5 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    OPEN_BRACKET    reduce using rule 5 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)


state 23

    (6) VARS_A -> TIPO_P . VARS_B
    (8) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 37

    VARS_B                         shift and go to state 36

state 24

    (7) VARS_A -> TIPO_S . VARS_B
    (8) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 37

    VARS_B                         shift and go to state 38

state 25

    (35) TIPO_S -> TYPE_GRAPH .

    ID              reduce using rule 35 (TIPO_S -> TYPE_GRAPH .)


state 26

    (36) TIPO_S -> TYPE_PIECHART .

    ID              reduce using rule 36 (TIPO_S -> TYPE_PIECHART .)


state 27

    (37) TIPO_S -> TYPE_BARCHART .

    ID              reduce using rule 37 (TIPO_S -> TYPE_BARCHART .)


state 28

    (38) TIPO_S -> TYPE_HORBARCHART .

    ID              reduce using rule 38 (TIPO_S -> TYPE_HORBARCHART .)


state 29

    (39) TIPO_S -> TYPE_DONUTGRAPH .

    ID              reduce using rule 39 (TIPO_S -> TYPE_DONUTGRAPH .)


state 30

    (40) TIPO_S -> TYPE_NETWORK .

    ID              reduce using rule 40 (TIPO_S -> TYPE_NETWORK .)


state 31

    (41) TIPO_S -> TYPE_VENN .

    ID              reduce using rule 41 (TIPO_S -> TYPE_VENN .)


state 32

    (42) TIPO_S -> TYPE_RADARCHART .

    ID              reduce using rule 42 (TIPO_S -> TYPE_RADARCHART .)


state 33

    (18) BLOQUE -> OPEN_BRACKET . ESTATUTO_A CLOSE_BRACKET
    (19) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (20) ESTATUTO_A -> . EMPTY
    (21) ESTATUTO -> . ASIGNACION
    (22) ESTATUTO -> . CONDICION
    (23) ESTATUTO -> . NOMBRAR
    (24) ESTATUTO -> . FOR
    (25) ESTATUTO -> . WHILE
    (26) ESTATUTO -> . PRINT
    (27) ESTATUTO -> . PLOT
    (28) ESTATUTO -> . LLAMADAMODULO
    (29) ESTATUTO -> . INPUT
    (30) ESTATUTO -> . COLOR
    (166) EMPTY -> .
    (58) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D
    (69) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (54) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (75) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (77) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (150) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (120) PLOT -> . ID POINT PLOT_B
    (50) LLAMADAMODULO -> . ID OPEN_PARENTHESIS LLAMADAMODULO_C
    (116) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON
    (89) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    ID              shift and go to state 52
    IF              shift and go to state 53
    FOR_KEYWORD     shift and go to state 54
    WHILE_KEYWORD   shift and go to state 55
    PRINT_KEYWORD   shift and go to state 56
    INPUT_KEYWORD   shift and go to state 57

    ESTATUTO_A                     shift and go to state 39
    ESTATUTO                       shift and go to state 40
    EMPTY                          shift and go to state 41
    ASIGNACION                     shift and go to state 42
    CONDICION                      shift and go to state 43
    NOMBRAR                        shift and go to state 44
    FOR                            shift and go to state 45
    WHILE                          shift and go to state 46
    PRINT                          shift and go to state 47
    PLOT                           shift and go to state 48
    LLAMADAMODULO                  shift and go to state 49
    INPUT                          shift and go to state 50
    COLOR                          shift and go to state 51

state 34

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 58


state 35

    (43) MODULO -> MODULE MODULO_A ID . add_functionr OPEN_PARENTHESIS MODULO_C
    (44) add_functionr -> .

    OPEN_PARENTHESIS reduce using rule 44 (add_functionr -> .)

    add_functionr                  shift and go to state 59

state 36

    (6) VARS_A -> TIPO_P VARS_B .

    MODULE          reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)
    MAIN            reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)
    OPEN_BRACKET    reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)
    SEMICOLON       reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)
    COMMA           reduce using rule 6 (VARS_A -> TIPO_P VARS_B .)


state 37

    (8) VARS_B -> ID . add_variable VARS_E VARS_C
    (9) add_variable -> .

    OPEN_SQUARE_BRACKET reduce using rule 9 (add_variable -> .)
    SEMICOLON       reduce using rule 9 (add_variable -> .)
    COMMA           reduce using rule 9 (add_variable -> .)

    add_variable                   shift and go to state 60

state 38

    (7) VARS_A -> TIPO_S VARS_B .

    MODULE          reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)
    MAIN            reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)
    OPEN_BRACKET    reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)
    SEMICOLON       reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)
    COMMA           reduce using rule 7 (VARS_A -> TIPO_S VARS_B .)


state 39

    (18) BLOQUE -> OPEN_BRACKET ESTATUTO_A . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 61


state 40

    (19) ESTATUTO_A -> ESTATUTO . ESTATUTO_A
    (19) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (20) ESTATUTO_A -> . EMPTY
    (21) ESTATUTO -> . ASIGNACION
    (22) ESTATUTO -> . CONDICION
    (23) ESTATUTO -> . NOMBRAR
    (24) ESTATUTO -> . FOR
    (25) ESTATUTO -> . WHILE
    (26) ESTATUTO -> . PRINT
    (27) ESTATUTO -> . PLOT
    (28) ESTATUTO -> . LLAMADAMODULO
    (29) ESTATUTO -> . INPUT
    (30) ESTATUTO -> . COLOR
    (166) EMPTY -> .
    (58) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D
    (69) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (54) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (75) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (77) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (150) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (120) PLOT -> . ID POINT PLOT_B
    (50) LLAMADAMODULO -> . ID OPEN_PARENTHESIS LLAMADAMODULO_C
    (116) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON
    (89) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    ID              shift and go to state 52
    IF              shift and go to state 53
    FOR_KEYWORD     shift and go to state 54
    WHILE_KEYWORD   shift and go to state 55
    PRINT_KEYWORD   shift and go to state 56
    INPUT_KEYWORD   shift and go to state 57

    ESTATUTO                       shift and go to state 40
    ESTATUTO_A                     shift and go to state 62
    EMPTY                          shift and go to state 41
    ASIGNACION                     shift and go to state 42
    CONDICION                      shift and go to state 43
    NOMBRAR                        shift and go to state 44
    FOR                            shift and go to state 45
    WHILE                          shift and go to state 46
    PRINT                          shift and go to state 47
    PLOT                           shift and go to state 48
    LLAMADAMODULO                  shift and go to state 49
    INPUT                          shift and go to state 50
    COLOR                          shift and go to state 51

state 41

    (20) ESTATUTO_A -> EMPTY .

    CLOSE_BRACKET   reduce using rule 20 (ESTATUTO_A -> EMPTY .)


state 42

    (21) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    FOR_KEYWORD     reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    WHILE_KEYWORD   reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    PRINT_KEYWORD   reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    INPUT_KEYWORD   reduce using rule 21 (ESTATUTO -> ASIGNACION .)
    CLOSE_BRACKET   reduce using rule 21 (ESTATUTO -> ASIGNACION .)


state 43

    (22) ESTATUTO -> CONDICION .

    ID              reduce using rule 22 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 22 (ESTATUTO -> CONDICION .)
    FOR_KEYWORD     reduce using rule 22 (ESTATUTO -> CONDICION .)
    WHILE_KEYWORD   reduce using rule 22 (ESTATUTO -> CONDICION .)
    PRINT_KEYWORD   reduce using rule 22 (ESTATUTO -> CONDICION .)
    INPUT_KEYWORD   reduce using rule 22 (ESTATUTO -> CONDICION .)
    CLOSE_BRACKET   reduce using rule 22 (ESTATUTO -> CONDICION .)


state 44

    (23) ESTATUTO -> NOMBRAR .

    ID              reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    IF              reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    FOR_KEYWORD     reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    WHILE_KEYWORD   reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    PRINT_KEYWORD   reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    INPUT_KEYWORD   reduce using rule 23 (ESTATUTO -> NOMBRAR .)
    CLOSE_BRACKET   reduce using rule 23 (ESTATUTO -> NOMBRAR .)


state 45

    (24) ESTATUTO -> FOR .

    ID              reduce using rule 24 (ESTATUTO -> FOR .)
    IF              reduce using rule 24 (ESTATUTO -> FOR .)
    FOR_KEYWORD     reduce using rule 24 (ESTATUTO -> FOR .)
    WHILE_KEYWORD   reduce using rule 24 (ESTATUTO -> FOR .)
    PRINT_KEYWORD   reduce using rule 24 (ESTATUTO -> FOR .)
    INPUT_KEYWORD   reduce using rule 24 (ESTATUTO -> FOR .)
    CLOSE_BRACKET   reduce using rule 24 (ESTATUTO -> FOR .)


state 46

    (25) ESTATUTO -> WHILE .

    ID              reduce using rule 25 (ESTATUTO -> WHILE .)
    IF              reduce using rule 25 (ESTATUTO -> WHILE .)
    FOR_KEYWORD     reduce using rule 25 (ESTATUTO -> WHILE .)
    WHILE_KEYWORD   reduce using rule 25 (ESTATUTO -> WHILE .)
    PRINT_KEYWORD   reduce using rule 25 (ESTATUTO -> WHILE .)
    INPUT_KEYWORD   reduce using rule 25 (ESTATUTO -> WHILE .)
    CLOSE_BRACKET   reduce using rule 25 (ESTATUTO -> WHILE .)


state 47

    (26) ESTATUTO -> PRINT .

    ID              reduce using rule 26 (ESTATUTO -> PRINT .)
    IF              reduce using rule 26 (ESTATUTO -> PRINT .)
    FOR_KEYWORD     reduce using rule 26 (ESTATUTO -> PRINT .)
    WHILE_KEYWORD   reduce using rule 26 (ESTATUTO -> PRINT .)
    PRINT_KEYWORD   reduce using rule 26 (ESTATUTO -> PRINT .)
    INPUT_KEYWORD   reduce using rule 26 (ESTATUTO -> PRINT .)
    CLOSE_BRACKET   reduce using rule 26 (ESTATUTO -> PRINT .)


state 48

    (27) ESTATUTO -> PLOT .

    ID              reduce using rule 27 (ESTATUTO -> PLOT .)
    IF              reduce using rule 27 (ESTATUTO -> PLOT .)
    FOR_KEYWORD     reduce using rule 27 (ESTATUTO -> PLOT .)
    WHILE_KEYWORD   reduce using rule 27 (ESTATUTO -> PLOT .)
    PRINT_KEYWORD   reduce using rule 27 (ESTATUTO -> PLOT .)
    INPUT_KEYWORD   reduce using rule 27 (ESTATUTO -> PLOT .)
    CLOSE_BRACKET   reduce using rule 27 (ESTATUTO -> PLOT .)


state 49

    (28) ESTATUTO -> LLAMADAMODULO .

    ID              reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    IF              reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    FOR_KEYWORD     reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    WHILE_KEYWORD   reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    PRINT_KEYWORD   reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    INPUT_KEYWORD   reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)
    CLOSE_BRACKET   reduce using rule 28 (ESTATUTO -> LLAMADAMODULO .)


state 50

    (29) ESTATUTO -> INPUT .

    ID              reduce using rule 29 (ESTATUTO -> INPUT .)
    IF              reduce using rule 29 (ESTATUTO -> INPUT .)
    FOR_KEYWORD     reduce using rule 29 (ESTATUTO -> INPUT .)
    WHILE_KEYWORD   reduce using rule 29 (ESTATUTO -> INPUT .)
    PRINT_KEYWORD   reduce using rule 29 (ESTATUTO -> INPUT .)
    INPUT_KEYWORD   reduce using rule 29 (ESTATUTO -> INPUT .)
    CLOSE_BRACKET   reduce using rule 29 (ESTATUTO -> INPUT .)


state 51

    (30) ESTATUTO -> COLOR .

    ID              reduce using rule 30 (ESTATUTO -> COLOR .)
    IF              reduce using rule 30 (ESTATUTO -> COLOR .)
    FOR_KEYWORD     reduce using rule 30 (ESTATUTO -> COLOR .)
    WHILE_KEYWORD   reduce using rule 30 (ESTATUTO -> COLOR .)
    PRINT_KEYWORD   reduce using rule 30 (ESTATUTO -> COLOR .)
    INPUT_KEYWORD   reduce using rule 30 (ESTATUTO -> COLOR .)
    CLOSE_BRACKET   reduce using rule 30 (ESTATUTO -> COLOR .)


state 52

    (58) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D
    (54) NOMBRAR -> ID . POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (120) PLOT -> ID . POINT PLOT_B
    (50) LLAMADAMODULO -> ID . OPEN_PARENTHESIS LLAMADAMODULO_C
    (89) COLOR -> ID . POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (62) addStackO -> .

    POINT           shift and go to state 64
    OPEN_PARENTHESIS shift and go to state 65
    OPEN_SQUARE_BRACKET reduce using rule 62 (addStackO -> .)
    EQUAL           reduce using rule 62 (addStackO -> .)

    addStackO                      shift and go to state 63

state 53

    (69) CONDICION -> IF . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    OPEN_PARENTHESIS shift and go to state 66


state 54

    (75) FOR -> FOR_KEYWORD . OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    OPEN_PARENTHESIS shift and go to state 67


state 55

    (77) WHILE -> WHILE_KEYWORD . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    OPEN_PARENTHESIS shift and go to state 68


state 56

    (150) PRINT -> PRINT_KEYWORD . OPEN_PARENTHESIS PRINT_A

    OPEN_PARENTHESIS shift and go to state 69


state 57

    (116) INPUT -> INPUT_KEYWORD . INPUTSYMBOL ID INPUT_A SEMICOLON

    INPUTSYMBOL     shift and go to state 70


state 58

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS PROGRAMA_A MAIN BLOQUE CLOSE_BRACKET .)


state 59

    (43) MODULO -> MODULE MODULO_A ID add_functionr . OPEN_PARENTHESIS MODULO_C

    OPEN_PARENTHESIS shift and go to state 71


state 60

    (8) VARS_B -> ID add_variable . VARS_E VARS_C
    (10) VARS_E -> . OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F
    (11) VARS_E -> . EMPTY
    (166) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 73
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)

    VARS_E                         shift and go to state 72
    EMPTY                          shift and go to state 74

state 61

    (18) BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .

    CLOSE_BRACKET   reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ELSE            reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ID              reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    IF              reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    FOR_KEYWORD     reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 18 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)


state 62

    (19) ESTATUTO_A -> ESTATUTO ESTATUTO_A .

    CLOSE_BRACKET   reduce using rule 19 (ESTATUTO_A -> ESTATUTO ESTATUTO_A .)


state 63

    (58) ASIGNACION -> ID addStackO . ASIGNACION_A ASIGNACION_C ASIGNACION_D
    (63) ASIGNACION_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
    (64) ASIGNACION_A -> . EMPTY
    (166) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 76
    EQUAL           reduce using rule 166 (EMPTY -> .)

    ASIGNACION_A                   shift and go to state 75
    EMPTY                          shift and go to state 77

state 64

    (54) NOMBRAR -> ID POINT . NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (120) PLOT -> ID POINT . PLOT_B
    (89) COLOR -> ID POINT . COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (55) NOMBRAR_A -> . NAME
    (56) NOMBRAR_A -> . NAMEX
    (57) NOMBRAR_A -> . NAMEY
    (121) PLOT_B -> . CREATEG OPEN_PARENTHESIS PLOT_C
    (122) PLOT_B -> . CREATEPC OPEN_PARENTHESIS PLOT_E
    (123) PLOT_B -> . CREATEGB OPEN_PARENTHESIS PLOT_E
    (124) PLOT_B -> . CREATEGBH OPEN_PARENTHESIS PLOT_E
    (125) PLOT_B -> . CREATED OPEN_PARENTHESIS PLOT_E
    (126) PLOT_B -> . CREATER OPEN_PARENTHESIS PLOT_E
    (127) PLOT_B -> . CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (128) PLOT_B -> . CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COLOR_KEYWORD   shift and go to state 80
    NAME            shift and go to state 81
    NAMEX           shift and go to state 82
    NAMEY           shift and go to state 83
    CREATEG         shift and go to state 84
    CREATEPC        shift and go to state 85
    CREATEGB        shift and go to state 86
    CREATEGBH       shift and go to state 87
    CREATED         shift and go to state 88
    CREATER         shift and go to state 89
    CREATEN         shift and go to state 90
    CREATEV         shift and go to state 91

    NOMBRAR_A                      shift and go to state 78
    PLOT_B                         shift and go to state 79

state 65

    (50) LLAMADAMODULO -> ID OPEN_PARENTHESIS . LLAMADAMODULO_C
    (53) LLAMADAMODULO_C -> . EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 94
    EXP                            shift and go to state 95
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 66

    (69) CONDICION -> IF OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (156) EXPRESIONESVARIAS -> . NOT EV_C
    (157) EXPRESIONESVARIAS -> . EV_C
    (158) EV_C -> . EXP_RELOP EV_B
    (162) EXP_RELOP -> . EXP EXP_RELOP_A
    (163) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (166) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 108
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 107
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 67

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS . ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (58) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D

    ID              shift and go to state 114

    ASIGNACION                     shift and go to state 113

state 68

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (156) EXPRESIONESVARIAS -> . NOT EV_C
    (157) EXPRESIONESVARIAS -> . EV_C
    (158) EV_C -> . EXP_RELOP EV_B
    (162) EXP_RELOP -> . EXP EXP_RELOP_A
    (163) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (166) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 108
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 115
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 69

    (150) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS . PRINT_A
    (151) PRINT_A -> . PRINT_B CLOSE_PARENTHESIS SEMICOLON
    (152) PRINT_B -> . CTE_STRING PRINT_C
    (153) PRINT_B -> . EXPRESIONESVARIAS
    (156) EXPRESIONESVARIAS -> . NOT EV_C
    (157) EXPRESIONESVARIAS -> . EV_C
    (158) EV_C -> . EXP_RELOP EV_B
    (162) EXP_RELOP -> . EXP EXP_RELOP_A
    (163) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (166) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 118
    NOT             shift and go to state 108
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    PRINT_A                        shift and go to state 116
    PRINT_B                        shift and go to state 117
    EXPRESIONESVARIAS              shift and go to state 119
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 70

    (116) INPUT -> INPUT_KEYWORD INPUTSYMBOL . ID INPUT_A SEMICOLON

    ID              shift and go to state 120


state 71

    (43) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS . MODULO_C
    (49) MODULO_C -> . TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21

    MODULO_C                       shift and go to state 121
    TIPO_P                         shift and go to state 122

state 72

    (8) VARS_B -> ID add_variable VARS_E . VARS_C
    (14) VARS_C -> . SEMICOLON VARS_D
    (15) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 124
    COMMA           shift and go to state 125

    VARS_C                         shift and go to state 123

state 73

    (10) VARS_E -> OPEN_SQUARE_BRACKET . CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F

    CTE_INTEGER     shift and go to state 126


state 74

    (11) VARS_E -> EMPTY .

    SEMICOLON       reduce using rule 11 (VARS_E -> EMPTY .)
    COMMA           reduce using rule 11 (VARS_E -> EMPTY .)


state 75

    (58) ASIGNACION -> ID addStackO ASIGNACION_A . ASIGNACION_C ASIGNACION_D
    (67) ASIGNACION_C -> . EQUAL EXPRESIONESVARIAS
    (68) ASIGNACION_C -> . EQUAL CTE_STRING

    EQUAL           shift and go to state 128

    ASIGNACION_C                   shift and go to state 127

state 76

    (63) ASIGNACION_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ASIGNACION_B
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 129
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 77

    (64) ASIGNACION_A -> EMPTY .

    EQUAL           reduce using rule 64 (ASIGNACION_A -> EMPTY .)


state 78

    (54) NOMBRAR -> ID POINT NOMBRAR_A . OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 130


state 79

    (120) PLOT -> ID POINT PLOT_B .

    ID              reduce using rule 120 (PLOT -> ID POINT PLOT_B .)
    IF              reduce using rule 120 (PLOT -> ID POINT PLOT_B .)
    FOR_KEYWORD     reduce using rule 120 (PLOT -> ID POINT PLOT_B .)
    WHILE_KEYWORD   reduce using rule 120 (PLOT -> ID POINT PLOT_B .)
    PRINT_KEYWORD   reduce using rule 120 (PLOT -> ID POINT PLOT_B .)
    INPUT_KEYWORD   reduce using rule 120 (PLOT -> ID POINT PLOT_B .)
    CLOSE_BRACKET   reduce using rule 120 (PLOT -> ID POINT PLOT_B .)


state 80

    (89) COLOR -> ID POINT COLOR_KEYWORD . OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 131


state 81

    (55) NOMBRAR_A -> NAME .

    OPEN_PARENTHESIS reduce using rule 55 (NOMBRAR_A -> NAME .)


state 82

    (56) NOMBRAR_A -> NAMEX .

    OPEN_PARENTHESIS reduce using rule 56 (NOMBRAR_A -> NAMEX .)


state 83

    (57) NOMBRAR_A -> NAMEY .

    OPEN_PARENTHESIS reduce using rule 57 (NOMBRAR_A -> NAMEY .)


state 84

    (121) PLOT_B -> CREATEG . OPEN_PARENTHESIS PLOT_C

    OPEN_PARENTHESIS shift and go to state 132


state 85

    (122) PLOT_B -> CREATEPC . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 133


state 86

    (123) PLOT_B -> CREATEGB . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 134


state 87

    (124) PLOT_B -> CREATEGBH . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 135


state 88

    (125) PLOT_B -> CREATED . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 136


state 89

    (126) PLOT_B -> CREATER . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 137


state 90

    (127) PLOT_B -> CREATEN . OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    OPEN_PARENTHESIS shift and go to state 138


state 91

    (128) PLOT_B -> CREATEV . OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 139


state 92

    (107) VARS_CTE -> ID . VARS_CTE_A
    (108) VARS_CTE_A -> . OPEN_PARENTHESIS VARS_CTE_B
    (109) VARS_CTE_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (110) VARS_CTE_A -> . EMPTY
    (166) EMPTY -> .

  ! shift/reduce conflict for OPEN_PARENTHESIS resolved as shift
    OPEN_PARENTHESIS shift and go to state 141
    OPEN_SQUARE_BRACKET shift and go to state 142
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    PLUS            reduce using rule 166 (EMPTY -> .)
    MINS            reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 166 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 166 (EMPTY -> .)
    BOOLEAN         reduce using rule 166 (EMPTY -> .)
    ID              reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)

  ! OPEN_PARENTHESIS [ reduce using rule 166 (EMPTY -> .) ]

    VARS_CTE_A                     shift and go to state 140
    EMPTY                          shift and go to state 143

state 93

    (97) FACTOR_A -> OPEN_PARENTHESIS . FACTOR_B CLOSE_PARENTHESIS
    (102) FACTOR_B -> . EXPRESIONESVARIAS FACTOR_C
    (156) EXPRESIONESVARIAS -> . NOT EV_C
    (157) EXPRESIONESVARIAS -> . EV_C
    (158) EV_C -> . EXP_RELOP EV_B
    (162) EXP_RELOP -> . EXP EXP_RELOP_A
    (163) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (166) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    NOT             shift and go to state 108
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! CTE_INTEGER     [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 166 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 166 (EMPTY -> .) ]
  ! ID              [ reduce using rule 166 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    FACTOR_B                       shift and go to state 144
    EXPRESIONESVARIAS              shift and go to state 145
    FACTOR_C                       shift and go to state 100
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    VARS_CTE                       shift and go to state 103

state 94

    (50) LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .

    ID              reduce using rule 50 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    IF              reduce using rule 50 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    FOR_KEYWORD     reduce using rule 50 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    WHILE_KEYWORD   reduce using rule 50 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    PRINT_KEYWORD   reduce using rule 50 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    INPUT_KEYWORD   reduce using rule 50 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)
    CLOSE_BRACKET   reduce using rule 50 (LLAMADAMODULO -> ID OPEN_PARENTHESIS LLAMADAMODULO_C .)


state 95

    (53) LLAMADAMODULO_C -> EXP . LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON
    (51) LLAMADAMODULO_A -> . COMMA LLAMADAMODULO_C
    (52) LLAMADAMODULO_A -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 147
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)

    LLAMADAMODULO_A                shift and go to state 146
    EMPTY                          shift and go to state 148

state 96

    (80) EXP -> TERMINO . EXP_A pop_exp
    (82) EXP_A -> . PLUS EXP
    (83) EXP_A -> . MINS EXP
    (84) EXP_A -> . EMPTY
    (166) EMPTY -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    PLUS            shift and go to state 150
    MINS            shift and go to state 151
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 166 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 166 (EMPTY -> .)
    BOOLEAN         reduce using rule 166 (EMPTY -> .)
    ID              reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXP_A                          shift and go to state 149
    EMPTY                          shift and go to state 152

state 97

    (85) TERMINO -> FACTOR . TERMINO_A
    (86) TERMINO_A -> . TIMES TERMINO
    (87) TERMINO_A -> . DIVIDE TERMINO
    (88) TERMINO_A -> . EMPTY
    (166) EMPTY -> .

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    TIMES           shift and go to state 154
    DIVIDE          shift and go to state 155
    PLUS            reduce using rule 166 (EMPTY -> .)
    MINS            reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 166 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 166 (EMPTY -> .)
    BOOLEAN         reduce using rule 166 (EMPTY -> .)
    ID              reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS reduce using rule 166 (EMPTY -> .)

  ! TIMES           [ reduce using rule 166 (EMPTY -> .) ]
  ! DIVIDE          [ reduce using rule 166 (EMPTY -> .) ]

    TERMINO_A                      shift and go to state 153
    EMPTY                          shift and go to state 156

state 98

    (96) FACTOR -> FACTOR_A .

    TIMES           reduce using rule 96 (FACTOR -> FACTOR_A .)
    DIVIDE          reduce using rule 96 (FACTOR -> FACTOR_A .)
    PLUS            reduce using rule 96 (FACTOR -> FACTOR_A .)
    MINS            reduce using rule 96 (FACTOR -> FACTOR_A .)
    COMMA           reduce using rule 96 (FACTOR -> FACTOR_A .)
    CLOSE_PARENTHESIS reduce using rule 96 (FACTOR -> FACTOR_A .)
    RELOP           reduce using rule 96 (FACTOR -> FACTOR_A .)
    AND             reduce using rule 96 (FACTOR -> FACTOR_A .)
    OR              reduce using rule 96 (FACTOR -> FACTOR_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 96 (FACTOR -> FACTOR_A .)
    CTE_INTEGER     reduce using rule 96 (FACTOR -> FACTOR_A .)
    CTE_FLOAT       reduce using rule 96 (FACTOR -> FACTOR_A .)
    BOOLEAN         reduce using rule 96 (FACTOR -> FACTOR_A .)
    ID              reduce using rule 96 (FACTOR -> FACTOR_A .)
    SEMICOLON       reduce using rule 96 (FACTOR -> FACTOR_A .)
    IF              reduce using rule 96 (FACTOR -> FACTOR_A .)
    FOR_KEYWORD     reduce using rule 96 (FACTOR -> FACTOR_A .)
    WHILE_KEYWORD   reduce using rule 96 (FACTOR -> FACTOR_A .)
    PRINT_KEYWORD   reduce using rule 96 (FACTOR -> FACTOR_A .)
    INPUT_KEYWORD   reduce using rule 96 (FACTOR -> FACTOR_A .)
    CLOSE_BRACKET   reduce using rule 96 (FACTOR -> FACTOR_A .)
    NOT             reduce using rule 96 (FACTOR -> FACTOR_A .)
    OPEN_PARENTHESIS reduce using rule 96 (FACTOR -> FACTOR_A .)


state 99

    (98) FACTOR_A -> PLUS . FACTOR_C
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

    FACTOR_C                       shift and go to state 157
    VARS_CTE                       shift and go to state 103

state 100

    (100) FACTOR_A -> FACTOR_C .

    TIMES           reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    DIVIDE          reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    PLUS            reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    MINS            reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    COMMA           reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    RELOP           reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    AND             reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    OR              reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    CTE_INTEGER     reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    CTE_FLOAT       reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    BOOLEAN         reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    ID              reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    SEMICOLON       reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    IF              reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    FOR_KEYWORD     reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    NOT             reduce using rule 100 (FACTOR_A -> FACTOR_C .)
    OPEN_PARENTHESIS reduce using rule 100 (FACTOR_A -> FACTOR_C .)


state 101

    (99) FACTOR_A -> MINS . FACTOR_C
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

    FACTOR_C                       shift and go to state 158
    VARS_CTE                       shift and go to state 103

state 102

    (101) FACTOR_A -> EMPTY .

    TIMES           reduce using rule 101 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 101 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 101 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 101 (FACTOR_A -> EMPTY .)
    COMMA           reduce using rule 101 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 101 (FACTOR_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 101 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 101 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 101 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 101 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 101 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 101 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 101 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 101 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 101 (FACTOR_A -> EMPTY .)
    IF              reduce using rule 101 (FACTOR_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 101 (FACTOR_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 101 (FACTOR_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 101 (FACTOR_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 101 (FACTOR_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 101 (FACTOR_A -> EMPTY .)
    NOT             reduce using rule 101 (FACTOR_A -> EMPTY .)
    OPEN_PARENTHESIS reduce using rule 101 (FACTOR_A -> EMPTY .)


state 103

    (103) FACTOR_C -> VARS_CTE .

    TIMES           reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    DIVIDE          reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    PLUS            reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    MINS            reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    COMMA           reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    RELOP           reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    AND             reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    OR              reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    CLOSE_SQUARE_BRACKET reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    CTE_INTEGER     reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    CTE_FLOAT       reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    BOOLEAN         reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    ID              reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    SEMICOLON       reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    IF              reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    FOR_KEYWORD     reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    WHILE_KEYWORD   reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    PRINT_KEYWORD   reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    INPUT_KEYWORD   reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    CLOSE_BRACKET   reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    NOT             reduce using rule 103 (FACTOR_C -> VARS_CTE .)
    OPEN_PARENTHESIS reduce using rule 103 (FACTOR_C -> VARS_CTE .)


state 104

    (104) VARS_CTE -> CTE_INTEGER .

    TIMES           reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    DIVIDE          reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    PLUS            reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    MINS            reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    COMMA           reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_PARENTHESIS reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    RELOP           reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    AND             reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    OR              reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_SQUARE_BRACKET reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    CTE_INTEGER     reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    CTE_FLOAT       reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    BOOLEAN         reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    ID              reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    SEMICOLON       reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    IF              reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    FOR_KEYWORD     reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    WHILE_KEYWORD   reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    PRINT_KEYWORD   reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    INPUT_KEYWORD   reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_BRACKET   reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    NOT             reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)
    OPEN_PARENTHESIS reduce using rule 104 (VARS_CTE -> CTE_INTEGER .)


state 105

    (105) VARS_CTE -> CTE_FLOAT .

    TIMES           reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    DIVIDE          reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    MINS            reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_PARENTHESIS reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    RELOP           reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    AND             reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    OR              reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_SQUARE_BRACKET reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    CTE_INTEGER     reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    CTE_FLOAT       reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    BOOLEAN         reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    ID              reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    IF              reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    FOR_KEYWORD     reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    WHILE_KEYWORD   reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    PRINT_KEYWORD   reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    INPUT_KEYWORD   reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_BRACKET   reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    NOT             reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)
    OPEN_PARENTHESIS reduce using rule 105 (VARS_CTE -> CTE_FLOAT .)


state 106

    (106) VARS_CTE -> BOOLEAN .

    TIMES           reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    DIVIDE          reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    PLUS            reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    MINS            reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    COMMA           reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    CLOSE_PARENTHESIS reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    RELOP           reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    AND             reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    OR              reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    CLOSE_SQUARE_BRACKET reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    CTE_INTEGER     reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    CTE_FLOAT       reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    BOOLEAN         reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    ID              reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    SEMICOLON       reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    IF              reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    FOR_KEYWORD     reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    WHILE_KEYWORD   reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    PRINT_KEYWORD   reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    INPUT_KEYWORD   reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    CLOSE_BRACKET   reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    NOT             reduce using rule 106 (VARS_CTE -> BOOLEAN .)
    OPEN_PARENTHESIS reduce using rule 106 (VARS_CTE -> BOOLEAN .)


state 107

    (69) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    CLOSE_PARENTHESIS shift and go to state 159


state 108

    (156) EXPRESIONESVARIAS -> NOT . EV_C
    (158) EV_C -> . EXP_RELOP EV_B
    (162) EXP_RELOP -> . EXP EXP_RELOP_A
    (163) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (166) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for OPEN_PARENTHESIS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! CTE_INTEGER     [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 166 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 166 (EMPTY -> .) ]
  ! ID              [ reduce using rule 166 (EMPTY -> .) ]
  ! OPEN_PARENTHESIS [ reduce using rule 166 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EV_C                           shift and go to state 160
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 109

    (157) EXPRESIONESVARIAS -> EV_C .

    CLOSE_PARENTHESIS reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    CTE_INTEGER     reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    CTE_FLOAT       reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    BOOLEAN         reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    ID              reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    SEMICOLON       reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    IF              reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    FOR_KEYWORD     reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    WHILE_KEYWORD   reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    PRINT_KEYWORD   reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    INPUT_KEYWORD   reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    CLOSE_BRACKET   reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    NOT             reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    OPEN_PARENTHESIS reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    PLUS            reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    MINS            reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    AND             reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    OR              reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    RELOP           reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    TIMES           reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)
    DIVIDE          reduce using rule 157 (EXPRESIONESVARIAS -> EV_C .)


state 110

    (158) EV_C -> EXP_RELOP . EV_B
    (159) EV_B -> . AND
    (160) EV_B -> . OR
    (161) EV_B -> . EMPTY
    (166) EMPTY -> .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    AND             shift and go to state 162
    OR              shift and go to state 163
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 166 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 166 (EMPTY -> .)
    BOOLEAN         reduce using rule 166 (EMPTY -> .)
    ID              reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    PLUS            reduce using rule 166 (EMPTY -> .)
    MINS            reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)

  ! AND             [ reduce using rule 166 (EMPTY -> .) ]
  ! OR              [ reduce using rule 166 (EMPTY -> .) ]

    EV_B                           shift and go to state 161
    EMPTY                          shift and go to state 164

state 111

    (162) EXP_RELOP -> EXP . EXP_RELOP_A
    (164) EXP_RELOP_A -> . RELOP EXP
    (165) EXP_RELOP_A -> . EMPTY
    (166) EMPTY -> .

  ! shift/reduce conflict for RELOP resolved as shift
    RELOP           shift and go to state 166
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 166 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 166 (EMPTY -> .)
    BOOLEAN         reduce using rule 166 (EMPTY -> .)
    ID              reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    PLUS            reduce using rule 166 (EMPTY -> .)
    MINS            reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)

  ! RELOP           [ reduce using rule 166 (EMPTY -> .) ]

    EXP_RELOP_A                    shift and go to state 165
    EMPTY                          shift and go to state 167

state 112

    (163) EXP_RELOP -> EMPTY .
    (101) FACTOR_A -> EMPTY .

  ! reduce/reduce conflict for TIMES resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for PLUS resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for MINS resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for RELOP resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for AND resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OR resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_INTEGER resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_FLOAT resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for ID resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for IF resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for FOR_KEYWORD resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for WHILE_KEYWORD resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for PRINT_KEYWORD resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for INPUT_KEYWORD resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for NOT resolved using rule 101 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OPEN_PARENTHESIS resolved using rule 101 (FACTOR_A -> EMPTY .)
    TIMES           reduce using rule 101 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 101 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 101 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 101 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 101 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 101 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 101 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 101 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 101 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 101 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 101 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 101 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 101 (FACTOR_A -> EMPTY .)
    IF              reduce using rule 101 (FACTOR_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 101 (FACTOR_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 101 (FACTOR_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 101 (FACTOR_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 101 (FACTOR_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 101 (FACTOR_A -> EMPTY .)
    NOT             reduce using rule 101 (FACTOR_A -> EMPTY .)
    OPEN_PARENTHESIS reduce using rule 101 (FACTOR_A -> EMPTY .)

  ! AND             [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! OR              [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! CTE_INTEGER     [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! CTE_FLOAT       [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! BOOLEAN         [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! ID              [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! SEMICOLON       [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! IF              [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! FOR_KEYWORD     [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! WHILE_KEYWORD   [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! PRINT_KEYWORD   [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! INPUT_KEYWORD   [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_BRACKET   [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! NOT             [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! OPEN_PARENTHESIS [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! PLUS            [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! MINS            [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! RELOP           [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! TIMES           [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]
  ! DIVIDE          [ reduce using rule 163 (EXP_RELOP -> EMPTY .) ]


state 113

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION . EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (156) EXPRESIONESVARIAS -> . NOT EV_C
    (157) EXPRESIONESVARIAS -> . EV_C
    (158) EV_C -> . EXP_RELOP EV_B
    (162) EXP_RELOP -> . EXP EXP_RELOP_A
    (163) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (166) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 108
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 168
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 114

    (58) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D
    (62) addStackO -> .

    OPEN_SQUARE_BRACKET reduce using rule 62 (addStackO -> .)
    EQUAL           reduce using rule 62 (addStackO -> .)

    addStackO                      shift and go to state 63

state 115

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    CLOSE_PARENTHESIS shift and go to state 169


state 116

    (150) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .

    ID              reduce using rule 150 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    IF              reduce using rule 150 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    FOR_KEYWORD     reduce using rule 150 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    WHILE_KEYWORD   reduce using rule 150 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    PRINT_KEYWORD   reduce using rule 150 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    INPUT_KEYWORD   reduce using rule 150 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    CLOSE_BRACKET   reduce using rule 150 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)


state 117

    (151) PRINT_A -> PRINT_B . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 170


state 118

    (152) PRINT_B -> CTE_STRING . PRINT_C
    (154) PRINT_C -> . PLUS PRINT_B
    (155) PRINT_C -> . EMPTY
    (166) EMPTY -> .

    PLUS            shift and go to state 172
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)

    PRINT_C                        shift and go to state 171
    EMPTY                          shift and go to state 173

state 119

    (153) PRINT_B -> EXPRESIONESVARIAS .

    CLOSE_PARENTHESIS reduce using rule 153 (PRINT_B -> EXPRESIONESVARIAS .)


state 120

    (116) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID . INPUT_A SEMICOLON
    (117) INPUT_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
    (118) INPUT_A -> . EMPTY
    (166) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 175
    SEMICOLON       reduce using rule 166 (EMPTY -> .)

    INPUT_A                        shift and go to state 174
    EMPTY                          shift and go to state 176

state 121

    (43) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C .

    MODULE          reduce using rule 43 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C .)
    MAIN            reduce using rule 43 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C .)


state 122

    (49) MODULO_C -> TIPO_P . ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET

    ID              shift and go to state 177


state 123

    (8) VARS_B -> ID add_variable VARS_E VARS_C .

    MODULE          reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)
    MAIN            reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)
    OPEN_BRACKET    reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)
    SEMICOLON       reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)
    COMMA           reduce using rule 8 (VARS_B -> ID add_variable VARS_E VARS_C .)


state 124

    (14) VARS_C -> SEMICOLON . VARS_D
    (16) VARS_D -> . CLOSE_BRACKET
    (17) VARS_D -> . VARS_A
    (6) VARS_A -> . TIPO_P VARS_B
    (7) VARS_A -> . TIPO_S VARS_B
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR
    (35) TIPO_S -> . TYPE_GRAPH
    (36) TIPO_S -> . TYPE_PIECHART
    (37) TIPO_S -> . TYPE_BARCHART
    (38) TIPO_S -> . TYPE_HORBARCHART
    (39) TIPO_S -> . TYPE_DONUTGRAPH
    (40) TIPO_S -> . TYPE_NETWORK
    (41) TIPO_S -> . TYPE_VENN
    (42) TIPO_S -> . TYPE_RADARCHART

    CLOSE_BRACKET   shift and go to state 179
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21
    TYPE_GRAPH      shift and go to state 25
    TYPE_PIECHART   shift and go to state 26
    TYPE_BARCHART   shift and go to state 27
    TYPE_HORBARCHART shift and go to state 28
    TYPE_DONUTGRAPH shift and go to state 29
    TYPE_NETWORK    shift and go to state 30
    TYPE_VENN       shift and go to state 31
    TYPE_RADARCHART shift and go to state 32

    VARS_D                         shift and go to state 178
    VARS_A                         shift and go to state 180
    TIPO_P                         shift and go to state 23
    TIPO_S                         shift and go to state 24

state 125

    (15) VARS_C -> COMMA . VARS_B
    (8) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 37

    VARS_B                         shift and go to state 181

state 126

    (10) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER . CLOSE_SQUARE_BRACKET VARS_F

    CLOSE_SQUARE_BRACKET shift and go to state 182


state 127

    (58) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C . ASIGNACION_D
    (59) ASIGNACION_D -> . SEMICOLON quad
    (60) ASIGNACION_D -> . EMPTY quad
    (166) EMPTY -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 184
    ID              reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    PLUS            reduce using rule 166 (EMPTY -> .)
    MINS            reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 166 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 166 (EMPTY -> .)
    BOOLEAN         reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)

  ! SEMICOLON       [ reduce using rule 166 (EMPTY -> .) ]

    ASIGNACION_D                   shift and go to state 183
    EMPTY                          shift and go to state 185

state 128

    (67) ASIGNACION_C -> EQUAL . EXPRESIONESVARIAS
    (68) ASIGNACION_C -> EQUAL . CTE_STRING
    (156) EXPRESIONESVARIAS -> . NOT EV_C
    (157) EXPRESIONESVARIAS -> . EV_C
    (158) EV_C -> . EXP_RELOP EV_B
    (162) EXP_RELOP -> . EXP EXP_RELOP_A
    (163) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (166) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for OPEN_PARENTHESIS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTE_STRING      shift and go to state 187
    NOT             shift and go to state 108
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! ID              [ reduce using rule 166 (EMPTY -> .) ]
  ! NOT             [ reduce using rule 166 (EMPTY -> .) ]
  ! OPEN_PARENTHESIS [ reduce using rule 166 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 166 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 166 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 186
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 129

    (63) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ASIGNACION_B

    CLOSE_SQUARE_BRACKET shift and go to state 188


state 130

    (54) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 189


state 131

    (89) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS . COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (90) COLOR_A -> . COLOR_RED
    (91) COLOR_A -> . COLOR_BLACK
    (92) COLOR_A -> . COLOR_BLUE
    (93) COLOR_A -> . COLOR_PURPLE
    (94) COLOR_A -> . COLOR_GREEN
    (95) COLOR_A -> . COLOR_ORANGE

    COLOR_RED       shift and go to state 191
    COLOR_BLACK     shift and go to state 192
    COLOR_BLUE      shift and go to state 193
    COLOR_PURPLE    shift and go to state 194
    COLOR_GREEN     shift and go to state 195
    COLOR_ORANGE    shift and go to state 196

    COLOR_A                        shift and go to state 190

state 132

    (121) PLOT_B -> CREATEG OPEN_PARENTHESIS . PLOT_C
    (129) PLOT_C -> . PLOT_I CLOSE_PARENTHESIS SEMICOLON
    (130) PLOT_I -> . CTE_INTEGER PLOT_D
    (131) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 199
    CTE_FLOAT       shift and go to state 200

    PLOT_C                         shift and go to state 197
    PLOT_I                         shift and go to state 198

state 133

    (122) PLOT_B -> CREATEPC OPEN_PARENTHESIS . PLOT_E
    (134) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (135) PLOT_F -> . CTE_INTEGER PLOT_J
    (136) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 203
    CTE_FLOAT       shift and go to state 204

    PLOT_E                         shift and go to state 201
    PLOT_F                         shift and go to state 202

state 134

    (123) PLOT_B -> CREATEGB OPEN_PARENTHESIS . PLOT_E
    (134) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (135) PLOT_F -> . CTE_INTEGER PLOT_J
    (136) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 203
    CTE_FLOAT       shift and go to state 204

    PLOT_E                         shift and go to state 205
    PLOT_F                         shift and go to state 202

state 135

    (124) PLOT_B -> CREATEGBH OPEN_PARENTHESIS . PLOT_E
    (134) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (135) PLOT_F -> . CTE_INTEGER PLOT_J
    (136) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 203
    CTE_FLOAT       shift and go to state 204

    PLOT_E                         shift and go to state 206
    PLOT_F                         shift and go to state 202

state 136

    (125) PLOT_B -> CREATED OPEN_PARENTHESIS . PLOT_E
    (134) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (135) PLOT_F -> . CTE_INTEGER PLOT_J
    (136) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 203
    CTE_FLOAT       shift and go to state 204

    PLOT_E                         shift and go to state 207
    PLOT_F                         shift and go to state 202

state 137

    (126) PLOT_B -> CREATER OPEN_PARENTHESIS . PLOT_E
    (134) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (135) PLOT_F -> . CTE_INTEGER PLOT_J
    (136) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 203
    CTE_FLOAT       shift and go to state 204

    PLOT_E                         shift and go to state 208
    PLOT_F                         shift and go to state 202

state 138

    (127) PLOT_B -> CREATEN OPEN_PARENTHESIS . OPEN_SQUARE_BRACKET PLOT_M

    OPEN_SQUARE_BRACKET shift and go to state 209


state 139

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS . CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 210


state 140

    (107) VARS_CTE -> ID VARS_CTE_A .

    TIMES           reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    DIVIDE          reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    PLUS            reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    MINS            reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    COMMA           reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_PARENTHESIS reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    RELOP           reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    AND             reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    OR              reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_INTEGER     reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_FLOAT       reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    BOOLEAN         reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    ID              reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    SEMICOLON       reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    IF              reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    FOR_KEYWORD     reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    WHILE_KEYWORD   reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    PRINT_KEYWORD   reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    INPUT_KEYWORD   reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_BRACKET   reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    NOT             reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)
    OPEN_PARENTHESIS reduce using rule 107 (VARS_CTE -> ID VARS_CTE_A .)


state 141

    (108) VARS_CTE_A -> OPEN_PARENTHESIS . VARS_CTE_B
    (111) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 211
    EXP                            shift and go to state 212
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 142

    (109) VARS_CTE_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 213
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 143

    (110) VARS_CTE_A -> EMPTY .

    TIMES           reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    DIVIDE          reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    PLUS            reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    MINS            reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    COMMA           reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    RELOP           reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    AND             reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    OR              reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    BOOLEAN         reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    ID              reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    SEMICOLON       reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    IF              reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    NOT             reduce using rule 110 (VARS_CTE_A -> EMPTY .)
    OPEN_PARENTHESIS reduce using rule 110 (VARS_CTE_A -> EMPTY .)


state 144

    (97) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 214


state 145

    (102) FACTOR_B -> EXPRESIONESVARIAS . FACTOR_C
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

    FACTOR_C                       shift and go to state 215
    VARS_CTE                       shift and go to state 103

state 146

    (53) LLAMADAMODULO_C -> EXP LLAMADAMODULO_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 216


state 147

    (51) LLAMADAMODULO_A -> COMMA . LLAMADAMODULO_C
    (53) LLAMADAMODULO_C -> . EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 217
    EXP                            shift and go to state 95
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 148

    (52) LLAMADAMODULO_A -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 52 (LLAMADAMODULO_A -> EMPTY .)


state 149

    (80) EXP -> TERMINO EXP_A . pop_exp
    (81) pop_exp -> .

    COMMA           reduce using rule 81 (pop_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 81 (pop_exp -> .)
    RELOP           reduce using rule 81 (pop_exp -> .)
    AND             reduce using rule 81 (pop_exp -> .)
    OR              reduce using rule 81 (pop_exp -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 81 (pop_exp -> .)
    CTE_INTEGER     reduce using rule 81 (pop_exp -> .)
    CTE_FLOAT       reduce using rule 81 (pop_exp -> .)
    BOOLEAN         reduce using rule 81 (pop_exp -> .)
    ID              reduce using rule 81 (pop_exp -> .)
    SEMICOLON       reduce using rule 81 (pop_exp -> .)
    IF              reduce using rule 81 (pop_exp -> .)
    FOR_KEYWORD     reduce using rule 81 (pop_exp -> .)
    WHILE_KEYWORD   reduce using rule 81 (pop_exp -> .)
    PRINT_KEYWORD   reduce using rule 81 (pop_exp -> .)
    INPUT_KEYWORD   reduce using rule 81 (pop_exp -> .)
    CLOSE_BRACKET   reduce using rule 81 (pop_exp -> .)
    NOT             reduce using rule 81 (pop_exp -> .)
    OPEN_PARENTHESIS reduce using rule 81 (pop_exp -> .)
    PLUS            reduce using rule 81 (pop_exp -> .)
    MINS            reduce using rule 81 (pop_exp -> .)
    TIMES           reduce using rule 81 (pop_exp -> .)
    DIVIDE          reduce using rule 81 (pop_exp -> .)

    pop_exp                        shift and go to state 218

state 150

    (82) EXP_A -> PLUS . EXP
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for OPEN_PARENTHESIS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 166 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 166 (EMPTY -> .) ]
  ! ID              [ reduce using rule 166 (EMPTY -> .) ]
  ! OPEN_PARENTHESIS [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 219
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 151

    (83) EXP_A -> MINS . EXP
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for OPEN_PARENTHESIS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 166 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 166 (EMPTY -> .) ]
  ! ID              [ reduce using rule 166 (EMPTY -> .) ]
  ! OPEN_PARENTHESIS [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 220
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 152

    (84) EXP_A -> EMPTY .

    COMMA           reduce using rule 84 (EXP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 84 (EXP_A -> EMPTY .)
    RELOP           reduce using rule 84 (EXP_A -> EMPTY .)
    AND             reduce using rule 84 (EXP_A -> EMPTY .)
    OR              reduce using rule 84 (EXP_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 84 (EXP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 84 (EXP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 84 (EXP_A -> EMPTY .)
    BOOLEAN         reduce using rule 84 (EXP_A -> EMPTY .)
    ID              reduce using rule 84 (EXP_A -> EMPTY .)
    SEMICOLON       reduce using rule 84 (EXP_A -> EMPTY .)
    IF              reduce using rule 84 (EXP_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 84 (EXP_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 84 (EXP_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 84 (EXP_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 84 (EXP_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 84 (EXP_A -> EMPTY .)
    NOT             reduce using rule 84 (EXP_A -> EMPTY .)
    OPEN_PARENTHESIS reduce using rule 84 (EXP_A -> EMPTY .)
    PLUS            reduce using rule 84 (EXP_A -> EMPTY .)
    MINS            reduce using rule 84 (EXP_A -> EMPTY .)
    TIMES           reduce using rule 84 (EXP_A -> EMPTY .)
    DIVIDE          reduce using rule 84 (EXP_A -> EMPTY .)


state 153

    (85) TERMINO -> FACTOR TERMINO_A .

    PLUS            reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    MINS            reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    COMMA           reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    CLOSE_PARENTHESIS reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    RELOP           reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    AND             reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    OR              reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    CTE_INTEGER     reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    CTE_FLOAT       reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    BOOLEAN         reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    ID              reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    SEMICOLON       reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    IF              reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    FOR_KEYWORD     reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    WHILE_KEYWORD   reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    PRINT_KEYWORD   reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    INPUT_KEYWORD   reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    CLOSE_BRACKET   reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    NOT             reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    OPEN_PARENTHESIS reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    TIMES           reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)
    DIVIDE          reduce using rule 85 (TERMINO -> FACTOR TERMINO_A .)


state 154

    (86) TERMINO_A -> TIMES . TERMINO
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for OPEN_PARENTHESIS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 166 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 166 (EMPTY -> .) ]
  ! ID              [ reduce using rule 166 (EMPTY -> .) ]
  ! OPEN_PARENTHESIS [ reduce using rule 166 (EMPTY -> .) ]

    TERMINO                        shift and go to state 221
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 155

    (87) TERMINO_A -> DIVIDE . TERMINO
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for OPEN_PARENTHESIS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 166 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 166 (EMPTY -> .) ]
  ! ID              [ reduce using rule 166 (EMPTY -> .) ]
  ! OPEN_PARENTHESIS [ reduce using rule 166 (EMPTY -> .) ]

    TERMINO                        shift and go to state 222
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 156

    (88) TERMINO_A -> EMPTY .

    PLUS            reduce using rule 88 (TERMINO_A -> EMPTY .)
    MINS            reduce using rule 88 (TERMINO_A -> EMPTY .)
    COMMA           reduce using rule 88 (TERMINO_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 88 (TERMINO_A -> EMPTY .)
    RELOP           reduce using rule 88 (TERMINO_A -> EMPTY .)
    AND             reduce using rule 88 (TERMINO_A -> EMPTY .)
    OR              reduce using rule 88 (TERMINO_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 88 (TERMINO_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 88 (TERMINO_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 88 (TERMINO_A -> EMPTY .)
    BOOLEAN         reduce using rule 88 (TERMINO_A -> EMPTY .)
    ID              reduce using rule 88 (TERMINO_A -> EMPTY .)
    SEMICOLON       reduce using rule 88 (TERMINO_A -> EMPTY .)
    IF              reduce using rule 88 (TERMINO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 88 (TERMINO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 88 (TERMINO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 88 (TERMINO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 88 (TERMINO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 88 (TERMINO_A -> EMPTY .)
    NOT             reduce using rule 88 (TERMINO_A -> EMPTY .)
    OPEN_PARENTHESIS reduce using rule 88 (TERMINO_A -> EMPTY .)
    TIMES           reduce using rule 88 (TERMINO_A -> EMPTY .)
    DIVIDE          reduce using rule 88 (TERMINO_A -> EMPTY .)


state 157

    (98) FACTOR_A -> PLUS FACTOR_C .

    TIMES           reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    DIVIDE          reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    PLUS            reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    MINS            reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    COMMA           reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    RELOP           reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    AND             reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    OR              reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_INTEGER     reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_FLOAT       reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    BOOLEAN         reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    ID              reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    SEMICOLON       reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    IF              reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    NOT             reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)
    OPEN_PARENTHESIS reduce using rule 98 (FACTOR_A -> PLUS FACTOR_C .)


state 158

    (99) FACTOR_A -> MINS FACTOR_C .

    TIMES           reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    DIVIDE          reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    PLUS            reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    MINS            reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    COMMA           reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    RELOP           reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    AND             reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    OR              reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    CTE_INTEGER     reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    CTE_FLOAT       reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    BOOLEAN         reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    ID              reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    SEMICOLON       reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    IF              reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    NOT             reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)
    OPEN_PARENTHESIS reduce using rule 99 (FACTOR_A -> MINS FACTOR_C .)


state 159

    (69) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . check_bool BLOQUE CONDICION_A fill_end
    (71) check_bool -> .

    OPEN_BRACKET    reduce using rule 71 (check_bool -> .)

    check_bool                     shift and go to state 223

state 160

    (156) EXPRESIONESVARIAS -> NOT EV_C .

    CLOSE_PARENTHESIS reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_INTEGER     reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_FLOAT       reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    BOOLEAN         reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    ID              reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    SEMICOLON       reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    IF              reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    FOR_KEYWORD     reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    WHILE_KEYWORD   reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    PRINT_KEYWORD   reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    INPUT_KEYWORD   reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    CLOSE_BRACKET   reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    NOT             reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    OPEN_PARENTHESIS reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    PLUS            reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    MINS            reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    AND             reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    OR              reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    RELOP           reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    TIMES           reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)
    DIVIDE          reduce using rule 156 (EXPRESIONESVARIAS -> NOT EV_C .)


state 161

    (158) EV_C -> EXP_RELOP EV_B .

    CLOSE_PARENTHESIS reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    CTE_INTEGER     reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    CTE_FLOAT       reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    BOOLEAN         reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    ID              reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    SEMICOLON       reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    IF              reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    FOR_KEYWORD     reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    WHILE_KEYWORD   reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    PRINT_KEYWORD   reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    INPUT_KEYWORD   reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    CLOSE_BRACKET   reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    NOT             reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    OPEN_PARENTHESIS reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    PLUS            reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    MINS            reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    AND             reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    OR              reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    RELOP           reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    TIMES           reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)
    DIVIDE          reduce using rule 158 (EV_C -> EXP_RELOP EV_B .)


state 162

    (159) EV_B -> AND .

    CLOSE_PARENTHESIS reduce using rule 159 (EV_B -> AND .)
    CTE_INTEGER     reduce using rule 159 (EV_B -> AND .)
    CTE_FLOAT       reduce using rule 159 (EV_B -> AND .)
    BOOLEAN         reduce using rule 159 (EV_B -> AND .)
    ID              reduce using rule 159 (EV_B -> AND .)
    SEMICOLON       reduce using rule 159 (EV_B -> AND .)
    IF              reduce using rule 159 (EV_B -> AND .)
    FOR_KEYWORD     reduce using rule 159 (EV_B -> AND .)
    WHILE_KEYWORD   reduce using rule 159 (EV_B -> AND .)
    PRINT_KEYWORD   reduce using rule 159 (EV_B -> AND .)
    INPUT_KEYWORD   reduce using rule 159 (EV_B -> AND .)
    CLOSE_BRACKET   reduce using rule 159 (EV_B -> AND .)
    NOT             reduce using rule 159 (EV_B -> AND .)
    OPEN_PARENTHESIS reduce using rule 159 (EV_B -> AND .)
    PLUS            reduce using rule 159 (EV_B -> AND .)
    MINS            reduce using rule 159 (EV_B -> AND .)
    AND             reduce using rule 159 (EV_B -> AND .)
    OR              reduce using rule 159 (EV_B -> AND .)
    RELOP           reduce using rule 159 (EV_B -> AND .)
    TIMES           reduce using rule 159 (EV_B -> AND .)
    DIVIDE          reduce using rule 159 (EV_B -> AND .)


state 163

    (160) EV_B -> OR .

    CLOSE_PARENTHESIS reduce using rule 160 (EV_B -> OR .)
    CTE_INTEGER     reduce using rule 160 (EV_B -> OR .)
    CTE_FLOAT       reduce using rule 160 (EV_B -> OR .)
    BOOLEAN         reduce using rule 160 (EV_B -> OR .)
    ID              reduce using rule 160 (EV_B -> OR .)
    SEMICOLON       reduce using rule 160 (EV_B -> OR .)
    IF              reduce using rule 160 (EV_B -> OR .)
    FOR_KEYWORD     reduce using rule 160 (EV_B -> OR .)
    WHILE_KEYWORD   reduce using rule 160 (EV_B -> OR .)
    PRINT_KEYWORD   reduce using rule 160 (EV_B -> OR .)
    INPUT_KEYWORD   reduce using rule 160 (EV_B -> OR .)
    CLOSE_BRACKET   reduce using rule 160 (EV_B -> OR .)
    NOT             reduce using rule 160 (EV_B -> OR .)
    OPEN_PARENTHESIS reduce using rule 160 (EV_B -> OR .)
    PLUS            reduce using rule 160 (EV_B -> OR .)
    MINS            reduce using rule 160 (EV_B -> OR .)
    AND             reduce using rule 160 (EV_B -> OR .)
    OR              reduce using rule 160 (EV_B -> OR .)
    RELOP           reduce using rule 160 (EV_B -> OR .)
    TIMES           reduce using rule 160 (EV_B -> OR .)
    DIVIDE          reduce using rule 160 (EV_B -> OR .)


state 164

    (161) EV_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 161 (EV_B -> EMPTY .)
    CTE_INTEGER     reduce using rule 161 (EV_B -> EMPTY .)
    CTE_FLOAT       reduce using rule 161 (EV_B -> EMPTY .)
    BOOLEAN         reduce using rule 161 (EV_B -> EMPTY .)
    ID              reduce using rule 161 (EV_B -> EMPTY .)
    SEMICOLON       reduce using rule 161 (EV_B -> EMPTY .)
    IF              reduce using rule 161 (EV_B -> EMPTY .)
    FOR_KEYWORD     reduce using rule 161 (EV_B -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 161 (EV_B -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 161 (EV_B -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 161 (EV_B -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 161 (EV_B -> EMPTY .)
    NOT             reduce using rule 161 (EV_B -> EMPTY .)
    OPEN_PARENTHESIS reduce using rule 161 (EV_B -> EMPTY .)
    PLUS            reduce using rule 161 (EV_B -> EMPTY .)
    MINS            reduce using rule 161 (EV_B -> EMPTY .)
    AND             reduce using rule 161 (EV_B -> EMPTY .)
    OR              reduce using rule 161 (EV_B -> EMPTY .)
    RELOP           reduce using rule 161 (EV_B -> EMPTY .)
    TIMES           reduce using rule 161 (EV_B -> EMPTY .)
    DIVIDE          reduce using rule 161 (EV_B -> EMPTY .)


state 165

    (162) EXP_RELOP -> EXP EXP_RELOP_A .

    AND             reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OR              reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_PARENTHESIS reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_INTEGER     reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_FLOAT       reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    BOOLEAN         reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    ID              reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    SEMICOLON       reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    IF              reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    FOR_KEYWORD     reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    WHILE_KEYWORD   reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    PRINT_KEYWORD   reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    INPUT_KEYWORD   reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_BRACKET   reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    NOT             reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OPEN_PARENTHESIS reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    PLUS            reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    MINS            reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    RELOP           reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    TIMES           reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)
    DIVIDE          reduce using rule 162 (EXP_RELOP -> EXP EXP_RELOP_A .)


state 166

    (164) EXP_RELOP_A -> RELOP . EXP
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for OPEN_PARENTHESIS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 166 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 166 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 166 (EMPTY -> .) ]
  ! ID              [ reduce using rule 166 (EMPTY -> .) ]
  ! OPEN_PARENTHESIS [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 224
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 167

    (165) EXP_RELOP_A -> EMPTY .

    AND             reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    OR              reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    BOOLEAN         reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    ID              reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    SEMICOLON       reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    IF              reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    NOT             reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    OPEN_PARENTHESIS reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    PLUS            reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    MINS            reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    RELOP           reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    TIMES           reduce using rule 165 (EXP_RELOP_A -> EMPTY .)
    DIVIDE          reduce using rule 165 (EXP_RELOP_A -> EMPTY .)


state 168

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS . bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (79) bool_while -> .

    SEMICOLON       reduce using rule 79 (bool_while -> .)

    bool_while                     shift and go to state 225

state 169

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . bool_while BLOQUE goto_while
    (79) bool_while -> .

    OPEN_BRACKET    reduce using rule 79 (bool_while -> .)

    bool_while                     shift and go to state 226

state 170

    (151) PRINT_A -> PRINT_B CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 227


state 171

    (152) PRINT_B -> CTE_STRING PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 152 (PRINT_B -> CTE_STRING PRINT_C .)


state 172

    (154) PRINT_C -> PLUS . PRINT_B
    (152) PRINT_B -> . CTE_STRING PRINT_C
    (153) PRINT_B -> . EXPRESIONESVARIAS
    (156) EXPRESIONESVARIAS -> . NOT EV_C
    (157) EXPRESIONESVARIAS -> . EV_C
    (158) EV_C -> . EXP_RELOP EV_B
    (162) EXP_RELOP -> . EXP EXP_RELOP_A
    (163) EXP_RELOP -> . EMPTY
    (80) EXP -> . TERMINO EXP_A pop_exp
    (166) EMPTY -> .
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 118
    NOT             shift and go to state 108
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    PRINT_B                        shift and go to state 228
    EXPRESIONESVARIAS              shift and go to state 119
    EV_C                           shift and go to state 109
    EXP_RELOP                      shift and go to state 110
    EXP                            shift and go to state 111
    EMPTY                          shift and go to state 112
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    VARS_CTE                       shift and go to state 103

state 173

    (155) PRINT_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 155 (PRINT_C -> EMPTY .)


state 174

    (116) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A . SEMICOLON

    SEMICOLON       shift and go to state 229


state 175

    (117) INPUT_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET INPUT_B
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 230
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 176

    (118) INPUT_A -> EMPTY .

    SEMICOLON       reduce using rule 118 (INPUT_A -> EMPTY .)


state 177

    (49) MODULO_C -> TIPO_P ID . MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET
    (47) MODULO_B -> . COMMA MODULO_C
    (48) MODULO_B -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 232
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)

    MODULO_B                       shift and go to state 231
    EMPTY                          shift and go to state 233

state 178

    (14) VARS_C -> SEMICOLON VARS_D .

    MODULE          reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)
    MAIN            reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)
    OPEN_BRACKET    reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)
    SEMICOLON       reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)
    COMMA           reduce using rule 14 (VARS_C -> SEMICOLON VARS_D .)


state 179

    (16) VARS_D -> CLOSE_BRACKET .

    MODULE          reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)
    MAIN            reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)
    COMMA           reduce using rule 16 (VARS_D -> CLOSE_BRACKET .)


state 180

    (17) VARS_D -> VARS_A .

    MODULE          reduce using rule 17 (VARS_D -> VARS_A .)
    MAIN            reduce using rule 17 (VARS_D -> VARS_A .)
    OPEN_BRACKET    reduce using rule 17 (VARS_D -> VARS_A .)
    SEMICOLON       reduce using rule 17 (VARS_D -> VARS_A .)
    COMMA           reduce using rule 17 (VARS_D -> VARS_A .)


state 181

    (15) VARS_C -> COMMA VARS_B .

    MODULE          reduce using rule 15 (VARS_C -> COMMA VARS_B .)
    MAIN            reduce using rule 15 (VARS_C -> COMMA VARS_B .)
    OPEN_BRACKET    reduce using rule 15 (VARS_C -> COMMA VARS_B .)
    SEMICOLON       reduce using rule 15 (VARS_C -> COMMA VARS_B .)
    COMMA           reduce using rule 15 (VARS_C -> COMMA VARS_B .)


state 182

    (10) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET . VARS_F
    (12) VARS_F -> . OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C
    (13) VARS_F -> . VARS_C
    (14) VARS_C -> . SEMICOLON VARS_D
    (15) VARS_C -> . COMMA VARS_B

    OPEN_SQUARE_BRACKET shift and go to state 234
    SEMICOLON       shift and go to state 124
    COMMA           shift and go to state 125

    VARS_F                         shift and go to state 235
    VARS_C                         shift and go to state 236

state 183

    (58) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .

    ID              reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    IF              reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    FOR_KEYWORD     reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    WHILE_KEYWORD   reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    PRINT_KEYWORD   reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    INPUT_KEYWORD   reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    CLOSE_BRACKET   reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    NOT             reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    OPEN_PARENTHESIS reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    PLUS            reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    MINS            reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    CTE_INTEGER     reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    CTE_FLOAT       reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    BOOLEAN         reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    SEMICOLON       reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    AND             reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    OR              reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    RELOP           reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    TIMES           reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    DIVIDE          reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)
    CLOSE_PARENTHESIS reduce using rule 58 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D .)


state 184

    (59) ASIGNACION_D -> SEMICOLON . quad
    (61) quad -> .

    ID              reduce using rule 61 (quad -> .)
    IF              reduce using rule 61 (quad -> .)
    FOR_KEYWORD     reduce using rule 61 (quad -> .)
    WHILE_KEYWORD   reduce using rule 61 (quad -> .)
    PRINT_KEYWORD   reduce using rule 61 (quad -> .)
    INPUT_KEYWORD   reduce using rule 61 (quad -> .)
    CLOSE_BRACKET   reduce using rule 61 (quad -> .)
    NOT             reduce using rule 61 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 61 (quad -> .)
    PLUS            reduce using rule 61 (quad -> .)
    MINS            reduce using rule 61 (quad -> .)
    CTE_INTEGER     reduce using rule 61 (quad -> .)
    CTE_FLOAT       reduce using rule 61 (quad -> .)
    BOOLEAN         reduce using rule 61 (quad -> .)
    SEMICOLON       reduce using rule 61 (quad -> .)
    AND             reduce using rule 61 (quad -> .)
    OR              reduce using rule 61 (quad -> .)
    RELOP           reduce using rule 61 (quad -> .)
    TIMES           reduce using rule 61 (quad -> .)
    DIVIDE          reduce using rule 61 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (quad -> .)

    quad                           shift and go to state 237

state 185

    (60) ASIGNACION_D -> EMPTY . quad
    (61) quad -> .

    ID              reduce using rule 61 (quad -> .)
    IF              reduce using rule 61 (quad -> .)
    FOR_KEYWORD     reduce using rule 61 (quad -> .)
    WHILE_KEYWORD   reduce using rule 61 (quad -> .)
    PRINT_KEYWORD   reduce using rule 61 (quad -> .)
    INPUT_KEYWORD   reduce using rule 61 (quad -> .)
    CLOSE_BRACKET   reduce using rule 61 (quad -> .)
    NOT             reduce using rule 61 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 61 (quad -> .)
    PLUS            reduce using rule 61 (quad -> .)
    MINS            reduce using rule 61 (quad -> .)
    CTE_INTEGER     reduce using rule 61 (quad -> .)
    CTE_FLOAT       reduce using rule 61 (quad -> .)
    BOOLEAN         reduce using rule 61 (quad -> .)
    SEMICOLON       reduce using rule 61 (quad -> .)
    AND             reduce using rule 61 (quad -> .)
    OR              reduce using rule 61 (quad -> .)
    RELOP           reduce using rule 61 (quad -> .)
    TIMES           reduce using rule 61 (quad -> .)
    DIVIDE          reduce using rule 61 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (quad -> .)

    quad                           shift and go to state 238

state 186

    (67) ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .

    SEMICOLON       reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    ID              reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    IF              reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    FOR_KEYWORD     reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    WHILE_KEYWORD   reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    PRINT_KEYWORD   reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    INPUT_KEYWORD   reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    CLOSE_BRACKET   reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    NOT             reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    OPEN_PARENTHESIS reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    PLUS            reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    MINS            reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    CTE_INTEGER     reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    CTE_FLOAT       reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    BOOLEAN         reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    AND             reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    OR              reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    RELOP           reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    TIMES           reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    DIVIDE          reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)
    CLOSE_PARENTHESIS reduce using rule 67 (ASIGNACION_C -> EQUAL EXPRESIONESVARIAS .)


state 187

    (68) ASIGNACION_C -> EQUAL CTE_STRING .

    SEMICOLON       reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    ID              reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    IF              reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    FOR_KEYWORD     reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    WHILE_KEYWORD   reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    PRINT_KEYWORD   reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    INPUT_KEYWORD   reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    CLOSE_BRACKET   reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    NOT             reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    OPEN_PARENTHESIS reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    PLUS            reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    MINS            reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    CTE_INTEGER     reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    CTE_FLOAT       reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    BOOLEAN         reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    AND             reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    OR              reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    RELOP           reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    TIMES           reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    DIVIDE          reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)
    CLOSE_PARENTHESIS reduce using rule 68 (ASIGNACION_C -> EQUAL CTE_STRING .)


state 188

    (63) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ASIGNACION_B
    (65) ASIGNACION_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (66) ASIGNACION_B -> . EMPTY
    (166) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 239
    EQUAL           reduce using rule 166 (EMPTY -> .)

    ASIGNACION_B                   shift and go to state 240
    EMPTY                          shift and go to state 241

state 189

    (54) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 242


state 190

    (89) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 243


state 191

    (90) COLOR_A -> COLOR_RED .

    CLOSE_PARENTHESIS reduce using rule 90 (COLOR_A -> COLOR_RED .)


state 192

    (91) COLOR_A -> COLOR_BLACK .

    CLOSE_PARENTHESIS reduce using rule 91 (COLOR_A -> COLOR_BLACK .)


state 193

    (92) COLOR_A -> COLOR_BLUE .

    CLOSE_PARENTHESIS reduce using rule 92 (COLOR_A -> COLOR_BLUE .)


state 194

    (93) COLOR_A -> COLOR_PURPLE .

    CLOSE_PARENTHESIS reduce using rule 93 (COLOR_A -> COLOR_PURPLE .)


state 195

    (94) COLOR_A -> COLOR_GREEN .

    CLOSE_PARENTHESIS reduce using rule 94 (COLOR_A -> COLOR_GREEN .)


state 196

    (95) COLOR_A -> COLOR_ORANGE .

    CLOSE_PARENTHESIS reduce using rule 95 (COLOR_A -> COLOR_ORANGE .)


state 197

    (121) PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .

    ID              reduce using rule 121 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    IF              reduce using rule 121 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    FOR_KEYWORD     reduce using rule 121 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    WHILE_KEYWORD   reduce using rule 121 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    PRINT_KEYWORD   reduce using rule 121 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    INPUT_KEYWORD   reduce using rule 121 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)
    CLOSE_BRACKET   reduce using rule 121 (PLOT_B -> CREATEG OPEN_PARENTHESIS PLOT_C .)


state 198

    (129) PLOT_C -> PLOT_I . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 244


state 199

    (130) PLOT_I -> CTE_INTEGER . PLOT_D
    (132) PLOT_D -> . COMMA PLOT_I
    (133) PLOT_D -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 246
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)

    PLOT_D                         shift and go to state 245
    EMPTY                          shift and go to state 247

state 200

    (131) PLOT_I -> CTE_FLOAT . PLOT_D
    (132) PLOT_D -> . COMMA PLOT_I
    (133) PLOT_D -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 246
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)

    PLOT_D                         shift and go to state 248
    EMPTY                          shift and go to state 247

state 201

    (122) PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 122 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 122 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 122 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 122 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 122 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 122 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 122 (PLOT_B -> CREATEPC OPEN_PARENTHESIS PLOT_E .)


state 202

    (134) PLOT_E -> PLOT_F . SEMICOLON PLOT_G

    SEMICOLON       shift and go to state 249


state 203

    (135) PLOT_F -> CTE_INTEGER . PLOT_J
    (137) PLOT_J -> . COMMA PLOT_F
    (138) PLOT_J -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 251
    SEMICOLON       reduce using rule 166 (EMPTY -> .)

    PLOT_J                         shift and go to state 250
    EMPTY                          shift and go to state 252

state 204

    (136) PLOT_F -> CTE_FLOAT . PLOT_J
    (137) PLOT_J -> . COMMA PLOT_F
    (138) PLOT_J -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 251
    SEMICOLON       reduce using rule 166 (EMPTY -> .)

    PLOT_J                         shift and go to state 253
    EMPTY                          shift and go to state 252

state 205

    (123) PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 123 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 123 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 123 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 123 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 123 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 123 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 123 (PLOT_B -> CREATEGB OPEN_PARENTHESIS PLOT_E .)


state 206

    (124) PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 124 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 124 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 124 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 124 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 124 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 124 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 124 (PLOT_B -> CREATEGBH OPEN_PARENTHESIS PLOT_E .)


state 207

    (125) PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 125 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 125 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 125 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 125 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 125 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 125 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 125 (PLOT_B -> CREATED OPEN_PARENTHESIS PLOT_E .)


state 208

    (126) PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 126 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 126 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 126 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 126 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 126 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 126 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 126 (PLOT_B -> CREATER OPEN_PARENTHESIS PLOT_E .)


state 209

    (127) PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET . PLOT_M
    (143) PLOT_M -> . PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (144) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 256

    PLOT_M                         shift and go to state 254
    PLOT_N                         shift and go to state 255

state 210

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER . COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 257


state 211

    (108) VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .

    TIMES           reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    DIVIDE          reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PLUS            reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    MINS            reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    COMMA           reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    RELOP           reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    AND             reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    OR              reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_SQUARE_BRACKET reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_INTEGER     reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_FLOAT       reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    BOOLEAN         reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    ID              reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    SEMICOLON       reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    IF              reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    FOR_KEYWORD     reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    WHILE_KEYWORD   reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PRINT_KEYWORD   reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    INPUT_KEYWORD   reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_BRACKET   reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    NOT             reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    OPEN_PARENTHESIS reduce using rule 108 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)


state 212

    (111) VARS_CTE_B -> EXP . VARS_CTE_C CLOSE_PARENTHESIS
    (112) VARS_CTE_C -> . COMMA VARS_CTE_B
    (113) VARS_CTE_C -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 259
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)

    VARS_CTE_C                     shift and go to state 258
    EMPTY                          shift and go to state 260

state 213

    (109) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET VARS_CTE_D

    CLOSE_SQUARE_BRACKET shift and go to state 261


state 214

    (97) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .

    TIMES           reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    MINS            reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    AND             reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    OR              reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    ID              reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    IF              reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    NOT             reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    OPEN_PARENTHESIS reduce using rule 97 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)


state 215

    (102) FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .

    CLOSE_PARENTHESIS reduce using rule 102 (FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .)


state 216

    (53) LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 262


state 217

    (51) LLAMADAMODULO_A -> COMMA LLAMADAMODULO_C .

    CLOSE_PARENTHESIS reduce using rule 51 (LLAMADAMODULO_A -> COMMA LLAMADAMODULO_C .)


state 218

    (80) EXP -> TERMINO EXP_A pop_exp .

    COMMA           reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CLOSE_PARENTHESIS reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    RELOP           reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    AND             reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    OR              reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CLOSE_SQUARE_BRACKET reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CTE_INTEGER     reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CTE_FLOAT       reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    BOOLEAN         reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    ID              reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    SEMICOLON       reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    IF              reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    FOR_KEYWORD     reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    WHILE_KEYWORD   reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    PRINT_KEYWORD   reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    INPUT_KEYWORD   reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    CLOSE_BRACKET   reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    NOT             reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    OPEN_PARENTHESIS reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    PLUS            reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    MINS            reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    TIMES           reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)
    DIVIDE          reduce using rule 80 (EXP -> TERMINO EXP_A pop_exp .)


state 219

    (82) EXP_A -> PLUS EXP .

    COMMA           reduce using rule 82 (EXP_A -> PLUS EXP .)
    CLOSE_PARENTHESIS reduce using rule 82 (EXP_A -> PLUS EXP .)
    RELOP           reduce using rule 82 (EXP_A -> PLUS EXP .)
    AND             reduce using rule 82 (EXP_A -> PLUS EXP .)
    OR              reduce using rule 82 (EXP_A -> PLUS EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 82 (EXP_A -> PLUS EXP .)
    CTE_INTEGER     reduce using rule 82 (EXP_A -> PLUS EXP .)
    CTE_FLOAT       reduce using rule 82 (EXP_A -> PLUS EXP .)
    BOOLEAN         reduce using rule 82 (EXP_A -> PLUS EXP .)
    ID              reduce using rule 82 (EXP_A -> PLUS EXP .)
    SEMICOLON       reduce using rule 82 (EXP_A -> PLUS EXP .)
    IF              reduce using rule 82 (EXP_A -> PLUS EXP .)
    FOR_KEYWORD     reduce using rule 82 (EXP_A -> PLUS EXP .)
    WHILE_KEYWORD   reduce using rule 82 (EXP_A -> PLUS EXP .)
    PRINT_KEYWORD   reduce using rule 82 (EXP_A -> PLUS EXP .)
    INPUT_KEYWORD   reduce using rule 82 (EXP_A -> PLUS EXP .)
    CLOSE_BRACKET   reduce using rule 82 (EXP_A -> PLUS EXP .)
    NOT             reduce using rule 82 (EXP_A -> PLUS EXP .)
    OPEN_PARENTHESIS reduce using rule 82 (EXP_A -> PLUS EXP .)
    PLUS            reduce using rule 82 (EXP_A -> PLUS EXP .)
    MINS            reduce using rule 82 (EXP_A -> PLUS EXP .)
    TIMES           reduce using rule 82 (EXP_A -> PLUS EXP .)
    DIVIDE          reduce using rule 82 (EXP_A -> PLUS EXP .)


state 220

    (83) EXP_A -> MINS EXP .

    COMMA           reduce using rule 83 (EXP_A -> MINS EXP .)
    CLOSE_PARENTHESIS reduce using rule 83 (EXP_A -> MINS EXP .)
    RELOP           reduce using rule 83 (EXP_A -> MINS EXP .)
    AND             reduce using rule 83 (EXP_A -> MINS EXP .)
    OR              reduce using rule 83 (EXP_A -> MINS EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 83 (EXP_A -> MINS EXP .)
    CTE_INTEGER     reduce using rule 83 (EXP_A -> MINS EXP .)
    CTE_FLOAT       reduce using rule 83 (EXP_A -> MINS EXP .)
    BOOLEAN         reduce using rule 83 (EXP_A -> MINS EXP .)
    ID              reduce using rule 83 (EXP_A -> MINS EXP .)
    SEMICOLON       reduce using rule 83 (EXP_A -> MINS EXP .)
    IF              reduce using rule 83 (EXP_A -> MINS EXP .)
    FOR_KEYWORD     reduce using rule 83 (EXP_A -> MINS EXP .)
    WHILE_KEYWORD   reduce using rule 83 (EXP_A -> MINS EXP .)
    PRINT_KEYWORD   reduce using rule 83 (EXP_A -> MINS EXP .)
    INPUT_KEYWORD   reduce using rule 83 (EXP_A -> MINS EXP .)
    CLOSE_BRACKET   reduce using rule 83 (EXP_A -> MINS EXP .)
    NOT             reduce using rule 83 (EXP_A -> MINS EXP .)
    OPEN_PARENTHESIS reduce using rule 83 (EXP_A -> MINS EXP .)
    PLUS            reduce using rule 83 (EXP_A -> MINS EXP .)
    MINS            reduce using rule 83 (EXP_A -> MINS EXP .)
    TIMES           reduce using rule 83 (EXP_A -> MINS EXP .)
    DIVIDE          reduce using rule 83 (EXP_A -> MINS EXP .)


state 221

    (86) TERMINO_A -> TIMES TERMINO .

    PLUS            reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    MINS            reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    COMMA           reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    RELOP           reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    AND             reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    OR              reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    CTE_INTEGER     reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    CTE_FLOAT       reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    BOOLEAN         reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    ID              reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    SEMICOLON       reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    IF              reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    FOR_KEYWORD     reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    WHILE_KEYWORD   reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    PRINT_KEYWORD   reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    INPUT_KEYWORD   reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    CLOSE_BRACKET   reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    NOT             reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    OPEN_PARENTHESIS reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    TIMES           reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)
    DIVIDE          reduce using rule 86 (TERMINO_A -> TIMES TERMINO .)


state 222

    (87) TERMINO_A -> DIVIDE TERMINO .

    PLUS            reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    MINS            reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    COMMA           reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    RELOP           reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    AND             reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    OR              reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    CTE_INTEGER     reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    CTE_FLOAT       reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    BOOLEAN         reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    ID              reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    SEMICOLON       reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    IF              reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    FOR_KEYWORD     reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    WHILE_KEYWORD   reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    PRINT_KEYWORD   reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    INPUT_KEYWORD   reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    CLOSE_BRACKET   reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    NOT             reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    OPEN_PARENTHESIS reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    TIMES           reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)
    DIVIDE          reduce using rule 87 (TERMINO_A -> DIVIDE TERMINO .)


state 223

    (69) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool . BLOQUE CONDICION_A fill_end
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 263

state 224

    (164) EXP_RELOP_A -> RELOP EXP .

    AND             reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    OR              reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    CLOSE_PARENTHESIS reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    CTE_INTEGER     reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    CTE_FLOAT       reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    BOOLEAN         reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    ID              reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    SEMICOLON       reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    IF              reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    FOR_KEYWORD     reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    WHILE_KEYWORD   reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    PRINT_KEYWORD   reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    INPUT_KEYWORD   reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    CLOSE_BRACKET   reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    NOT             reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    OPEN_PARENTHESIS reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    PLUS            reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    MINS            reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    RELOP           reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    TIMES           reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)
    DIVIDE          reduce using rule 164 (EXP_RELOP_A -> RELOP EXP .)


state 225

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while . SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    SEMICOLON       shift and go to state 264


state 226

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while . BLOQUE goto_while
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 265

state 227

    (151) PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 151 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 151 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 151 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 151 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 151 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 151 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 151 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS SEMICOLON .)


state 228

    (154) PRINT_C -> PLUS PRINT_B .

    CLOSE_PARENTHESIS reduce using rule 154 (PRINT_C -> PLUS PRINT_B .)


state 229

    (116) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .

    ID              reduce using rule 116 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    IF              reduce using rule 116 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    FOR_KEYWORD     reduce using rule 116 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 116 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 116 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 116 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 116 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID INPUT_A SEMICOLON .)


state 230

    (117) INPUT_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET INPUT_B

    CLOSE_SQUARE_BRACKET shift and go to state 266


state 231

    (49) MODULO_C -> TIPO_P ID MODULO_B . CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET

    CLOSE_PARENTHESIS shift and go to state 267


state 232

    (47) MODULO_B -> COMMA . MODULO_C
    (49) MODULO_C -> . TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET
    (31) TIPO_P -> . INT
    (32) TIPO_P -> . FLOAT
    (33) TIPO_P -> . BOOL
    (34) TIPO_P -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    CHAR            shift and go to state 21

    MODULO_C                       shift and go to state 268
    TIPO_P                         shift and go to state 122

state 233

    (48) MODULO_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 48 (MODULO_B -> EMPTY .)


state 234

    (12) VARS_F -> OPEN_SQUARE_BRACKET . CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C

    CTE_INTEGER     shift and go to state 269


state 235

    (10) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .

    SEMICOLON       reduce using rule 10 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .)
    COMMA           reduce using rule 10 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_F .)


state 236

    (13) VARS_F -> VARS_C .

    SEMICOLON       reduce using rule 13 (VARS_F -> VARS_C .)
    COMMA           reduce using rule 13 (VARS_F -> VARS_C .)


state 237

    (59) ASIGNACION_D -> SEMICOLON quad .

    ID              reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    IF              reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    FOR_KEYWORD     reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    WHILE_KEYWORD   reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    PRINT_KEYWORD   reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    INPUT_KEYWORD   reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    CLOSE_BRACKET   reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    NOT             reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    OPEN_PARENTHESIS reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    PLUS            reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    MINS            reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    CTE_INTEGER     reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    CTE_FLOAT       reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    BOOLEAN         reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    SEMICOLON       reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    AND             reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    OR              reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    RELOP           reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    TIMES           reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    DIVIDE          reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)
    CLOSE_PARENTHESIS reduce using rule 59 (ASIGNACION_D -> SEMICOLON quad .)


state 238

    (60) ASIGNACION_D -> EMPTY quad .

    ID              reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    IF              reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    FOR_KEYWORD     reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    WHILE_KEYWORD   reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    PRINT_KEYWORD   reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    INPUT_KEYWORD   reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    CLOSE_BRACKET   reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    NOT             reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    OPEN_PARENTHESIS reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    PLUS            reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    MINS            reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    CTE_INTEGER     reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    CTE_FLOAT       reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    BOOLEAN         reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    SEMICOLON       reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    AND             reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    OR              reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    RELOP           reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    TIMES           reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    DIVIDE          reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)
    CLOSE_PARENTHESIS reduce using rule 60 (ASIGNACION_D -> EMPTY quad .)


state 239

    (65) ASIGNACION_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 270
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 240

    (63) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B .

    EQUAL           reduce using rule 63 (ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ASIGNACION_B .)


state 241

    (66) ASIGNACION_B -> EMPTY .

    EQUAL           reduce using rule 66 (ASIGNACION_B -> EMPTY .)


state 242

    (54) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 271


state 243

    (89) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 272


state 244

    (129) PLOT_C -> PLOT_I CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 273


state 245

    (130) PLOT_I -> CTE_INTEGER PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 130 (PLOT_I -> CTE_INTEGER PLOT_D .)


state 246

    (132) PLOT_D -> COMMA . PLOT_I
    (130) PLOT_I -> . CTE_INTEGER PLOT_D
    (131) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 199
    CTE_FLOAT       shift and go to state 200

    PLOT_I                         shift and go to state 274

state 247

    (133) PLOT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 133 (PLOT_D -> EMPTY .)


state 248

    (131) PLOT_I -> CTE_FLOAT PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 131 (PLOT_I -> CTE_FLOAT PLOT_D .)


state 249

    (134) PLOT_E -> PLOT_F SEMICOLON . PLOT_G
    (139) PLOT_G -> . PLOT_K CLOSE_PARENTHESIS SEMICOLON
    (140) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 277

    PLOT_G                         shift and go to state 275
    PLOT_K                         shift and go to state 276

state 250

    (135) PLOT_F -> CTE_INTEGER PLOT_J .

    SEMICOLON       reduce using rule 135 (PLOT_F -> CTE_INTEGER PLOT_J .)


state 251

    (137) PLOT_J -> COMMA . PLOT_F
    (135) PLOT_F -> . CTE_INTEGER PLOT_J
    (136) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 203
    CTE_FLOAT       shift and go to state 204

    PLOT_F                         shift and go to state 278

state 252

    (138) PLOT_J -> EMPTY .

    SEMICOLON       reduce using rule 138 (PLOT_J -> EMPTY .)


state 253

    (136) PLOT_F -> CTE_FLOAT PLOT_J .

    SEMICOLON       reduce using rule 136 (PLOT_F -> CTE_FLOAT PLOT_J .)


state 254

    (127) PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .

    ID              reduce using rule 127 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    IF              reduce using rule 127 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    FOR_KEYWORD     reduce using rule 127 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    WHILE_KEYWORD   reduce using rule 127 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    PRINT_KEYWORD   reduce using rule 127 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    INPUT_KEYWORD   reduce using rule 127 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    CLOSE_BRACKET   reduce using rule 127 (PLOT_B -> CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)


state 255

    (143) PLOT_M -> PLOT_N . CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 279


state 256

    (144) PLOT_N -> CTE_STRING . PLOT_O
    (145) PLOT_O -> . COMMA PLOT_N
    (146) PLOT_O -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 281
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)

    PLOT_O                         shift and go to state 280
    EMPTY                          shift and go to state 282

state 257

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA . CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 283


state 258

    (111) VARS_CTE_B -> EXP VARS_CTE_C . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 284


state 259

    (112) VARS_CTE_C -> COMMA . VARS_CTE_B
    (111) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 285
    EXP                            shift and go to state 212
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 260

    (113) VARS_CTE_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 113 (VARS_CTE_C -> EMPTY .)


state 261

    (109) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . VARS_CTE_D
    (114) VARS_CTE_D -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (115) VARS_CTE_D -> . EMPTY
    (166) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 286
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    PLUS            reduce using rule 166 (EMPTY -> .)
    MINS            reduce using rule 166 (EMPTY -> .)
    COMMA           reduce using rule 166 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)
    RELOP           reduce using rule 166 (EMPTY -> .)
    AND             reduce using rule 166 (EMPTY -> .)
    OR              reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 166 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 166 (EMPTY -> .)
    BOOLEAN         reduce using rule 166 (EMPTY -> .)
    ID              reduce using rule 166 (EMPTY -> .)
    SEMICOLON       reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)
    NOT             reduce using rule 166 (EMPTY -> .)
    OPEN_PARENTHESIS reduce using rule 166 (EMPTY -> .)

    VARS_CTE_D                     shift and go to state 287
    EMPTY                          shift and go to state 288

state 262

    (53) LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 53 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 53 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 53 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 53 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 53 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 53 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 53 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_PARENTHESIS reduce using rule 53 (LLAMADAMODULO_C -> EXP LLAMADAMODULO_A CLOSE_PARENTHESIS SEMICOLON .)


state 263

    (69) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE . CONDICION_A fill_end
    (72) CONDICION_A -> . gotoElse ELSE BLOQUE
    (73) CONDICION_A -> . EMPTY
    (74) gotoElse -> .
    (166) EMPTY -> .

    ELSE            reduce using rule 74 (gotoElse -> .)
    ID              reduce using rule 166 (EMPTY -> .)
    IF              reduce using rule 166 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 166 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 166 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 166 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 166 (EMPTY -> .)

    CONDICION_A                    shift and go to state 289
    gotoElse                       shift and go to state 290
    EMPTY                          shift and go to state 291

state 264

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON . ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (58) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C ASIGNACION_D

    ID              shift and go to state 114

    ASIGNACION                     shift and go to state 292

state 265

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE . goto_while
    (78) goto_while -> .

    ID              reduce using rule 78 (goto_while -> .)
    IF              reduce using rule 78 (goto_while -> .)
    FOR_KEYWORD     reduce using rule 78 (goto_while -> .)
    WHILE_KEYWORD   reduce using rule 78 (goto_while -> .)
    PRINT_KEYWORD   reduce using rule 78 (goto_while -> .)
    INPUT_KEYWORD   reduce using rule 78 (goto_while -> .)
    CLOSE_BRACKET   reduce using rule 78 (goto_while -> .)

    goto_while                     shift and go to state 293

state 266

    (117) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . INPUT_B
    (119) INPUT_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET shift and go to state 294

    INPUT_B                        shift and go to state 295

state 267

    (49) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS . OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 296


state 268

    (47) MODULO_B -> COMMA MODULO_C .

    CLOSE_PARENTHESIS reduce using rule 47 (MODULO_B -> COMMA MODULO_C .)


state 269

    (12) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER . CLOSE_SQUARE_BRACKET VARS_C

    CLOSE_SQUARE_BRACKET shift and go to state 297


state 270

    (65) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 298


state 271

    (54) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 54 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 54 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 54 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 54 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 54 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 54 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 54 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 272

    (89) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 89 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 89 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 89 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 89 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 89 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 89 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 89 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)


state 273

    (129) PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 129 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 129 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 129 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 129 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 129 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 129 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 129 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)


state 274

    (132) PLOT_D -> COMMA PLOT_I .

    CLOSE_PARENTHESIS reduce using rule 132 (PLOT_D -> COMMA PLOT_I .)


state 275

    (134) PLOT_E -> PLOT_F SEMICOLON PLOT_G .

    ID              reduce using rule 134 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    IF              reduce using rule 134 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    FOR_KEYWORD     reduce using rule 134 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    WHILE_KEYWORD   reduce using rule 134 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    PRINT_KEYWORD   reduce using rule 134 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    INPUT_KEYWORD   reduce using rule 134 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    CLOSE_BRACKET   reduce using rule 134 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)


state 276

    (139) PLOT_G -> PLOT_K . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 299


state 277

    (140) PLOT_K -> CTE_STRING . PLOT_H
    (141) PLOT_H -> . COMMA PLOT_K
    (142) PLOT_H -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 301
    CLOSE_PARENTHESIS reduce using rule 166 (EMPTY -> .)

    PLOT_H                         shift and go to state 300
    EMPTY                          shift and go to state 302

state 278

    (137) PLOT_J -> COMMA PLOT_F .

    SEMICOLON       reduce using rule 137 (PLOT_J -> COMMA PLOT_F .)


state 279

    (143) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET . SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 303


state 280

    (144) PLOT_N -> CTE_STRING PLOT_O .

    CLOSE_SQUARE_BRACKET reduce using rule 144 (PLOT_N -> CTE_STRING PLOT_O .)


state 281

    (145) PLOT_O -> COMMA . PLOT_N
    (144) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 256

    PLOT_N                         shift and go to state 304

state 282

    (146) PLOT_O -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 146 (PLOT_O -> EMPTY .)


state 283

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER . COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 305


state 284

    (111) VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .

    TIMES           reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    MINS            reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    AND             reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    OR              reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    ID              reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    IF              reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    NOT             reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    OPEN_PARENTHESIS reduce using rule 111 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)


state 285

    (112) VARS_CTE_C -> COMMA VARS_CTE_B .

    CLOSE_PARENTHESIS reduce using rule 112 (VARS_CTE_C -> COMMA VARS_CTE_B .)


state 286

    (114) VARS_CTE_D -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 306
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 287

    (109) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .

    TIMES           reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    DIVIDE          reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PLUS            reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    MINS            reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    COMMA           reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_PARENTHESIS reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    RELOP           reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    AND             reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    OR              reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_SQUARE_BRACKET reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_INTEGER     reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_FLOAT       reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    BOOLEAN         reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    ID              reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    SEMICOLON       reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    IF              reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    FOR_KEYWORD     reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    WHILE_KEYWORD   reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PRINT_KEYWORD   reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    INPUT_KEYWORD   reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_BRACKET   reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    NOT             reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    OPEN_PARENTHESIS reduce using rule 109 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)


state 288

    (115) VARS_CTE_D -> EMPTY .

    TIMES           reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    DIVIDE          reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    PLUS            reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    MINS            reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    COMMA           reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    RELOP           reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    AND             reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    OR              reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    CTE_INTEGER     reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    CTE_FLOAT       reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    BOOLEAN         reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    ID              reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    SEMICOLON       reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    IF              reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    NOT             reduce using rule 115 (VARS_CTE_D -> EMPTY .)
    OPEN_PARENTHESIS reduce using rule 115 (VARS_CTE_D -> EMPTY .)


state 289

    (69) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A . fill_end
    (70) fill_end -> .

    ID              reduce using rule 70 (fill_end -> .)
    IF              reduce using rule 70 (fill_end -> .)
    FOR_KEYWORD     reduce using rule 70 (fill_end -> .)
    WHILE_KEYWORD   reduce using rule 70 (fill_end -> .)
    PRINT_KEYWORD   reduce using rule 70 (fill_end -> .)
    INPUT_KEYWORD   reduce using rule 70 (fill_end -> .)
    CLOSE_BRACKET   reduce using rule 70 (fill_end -> .)

    fill_end                       shift and go to state 307

state 290

    (72) CONDICION_A -> gotoElse . ELSE BLOQUE

    ELSE            shift and go to state 308


state 291

    (73) CONDICION_A -> EMPTY .

    ID              reduce using rule 73 (CONDICION_A -> EMPTY .)
    IF              reduce using rule 73 (CONDICION_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 73 (CONDICION_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 73 (CONDICION_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 73 (CONDICION_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 73 (CONDICION_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 73 (CONDICION_A -> EMPTY .)


state 292

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION . CLOSE_PARENTHESIS BLOQUE repeat_for

    CLOSE_PARENTHESIS shift and go to state 309


state 293

    (77) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .

    ID              reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    IF              reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    FOR_KEYWORD     reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    WHILE_KEYWORD   reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    PRINT_KEYWORD   reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    INPUT_KEYWORD   reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    CLOSE_BRACKET   reduce using rule 77 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)


state 294

    (119) INPUT_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (80) EXP -> . TERMINO EXP_A pop_exp
    (85) TERMINO -> . FACTOR TERMINO_A
    (96) FACTOR -> . FACTOR_A
    (97) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (98) FACTOR_A -> . PLUS FACTOR_C
    (99) FACTOR_A -> . MINS FACTOR_C
    (100) FACTOR_A -> . FACTOR_C
    (101) FACTOR_A -> . EMPTY
    (103) FACTOR_C -> . VARS_CTE
    (166) EMPTY -> .
    (104) VARS_CTE -> . CTE_INTEGER
    (105) VARS_CTE -> . CTE_FLOAT
    (106) VARS_CTE -> . BOOLEAN
    (107) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 93
    PLUS            shift and go to state 99
    MINS            shift and go to state 101
    TIMES           reduce using rule 166 (EMPTY -> .)
    DIVIDE          reduce using rule 166 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 104
    CTE_FLOAT       shift and go to state 105
    BOOLEAN         shift and go to state 106
    ID              shift and go to state 92

  ! PLUS            [ reduce using rule 166 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 166 (EMPTY -> .) ]

    EXP                            shift and go to state 310
    TERMINO                        shift and go to state 96
    FACTOR                         shift and go to state 97
    FACTOR_A                       shift and go to state 98
    FACTOR_C                       shift and go to state 100
    EMPTY                          shift and go to state 102
    VARS_CTE                       shift and go to state 103

state 295

    (117) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .

    SEMICOLON       reduce using rule 117 (INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .)


state 296

    (49) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET . VARS BLOQUE CLOSE_BRACKET
    (5) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 311

state 297

    (12) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET . VARS_C
    (14) VARS_C -> . SEMICOLON VARS_D
    (15) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 124
    COMMA           shift and go to state 125

    VARS_C                         shift and go to state 312

state 298

    (65) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    EQUAL           reduce using rule 65 (ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 299

    (139) PLOT_G -> PLOT_K CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 313


state 300

    (140) PLOT_K -> CTE_STRING PLOT_H .

    CLOSE_PARENTHESIS reduce using rule 140 (PLOT_K -> CTE_STRING PLOT_H .)


state 301

    (141) PLOT_H -> COMMA . PLOT_K
    (140) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 277

    PLOT_K                         shift and go to state 314

state 302

    (142) PLOT_H -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 142 (PLOT_H -> EMPTY .)


state 303

    (143) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON . OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    OPEN_SQUARE_BRACKET shift and go to state 315


state 304

    (145) PLOT_O -> COMMA PLOT_N .

    CLOSE_SQUARE_BRACKET reduce using rule 145 (PLOT_O -> COMMA PLOT_N .)


state 305

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA . CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 316


state 306

    (114) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 317


state 307

    (69) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .

    ID              reduce using rule 69 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    IF              reduce using rule 69 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    FOR_KEYWORD     reduce using rule 69 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    WHILE_KEYWORD   reduce using rule 69 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    PRINT_KEYWORD   reduce using rule 69 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    INPUT_KEYWORD   reduce using rule 69 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    CLOSE_BRACKET   reduce using rule 69 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)


state 308

    (72) CONDICION_A -> gotoElse ELSE . BLOQUE
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 318

state 309

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS . BLOQUE repeat_for
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 319

state 310

    (119) INPUT_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 320


state 311

    (49) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS . BLOQUE CLOSE_BRACKET
    (18) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 33

    BLOQUE                         shift and go to state 321

state 312

    (12) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .

    SEMICOLON       reduce using rule 12 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .)
    COMMA           reduce using rule 12 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER CLOSE_SQUARE_BRACKET VARS_C .)


state 313

    (139) PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 139 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 139 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 139 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 139 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 139 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 139 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 139 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)


state 314

    (141) PLOT_H -> COMMA PLOT_K .

    CLOSE_PARENTHESIS reduce using rule 141 (PLOT_H -> COMMA PLOT_K .)


state 315

    (143) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET . PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (147) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 323

    PLOT_P                         shift and go to state 322

state 316

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER . SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 324


state 317

    (114) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    TIMES           reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    DIVIDE          reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PLUS            reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    MINS            reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    RELOP           reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    AND             reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    OR              reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_SQUARE_BRACKET reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_INTEGER     reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_FLOAT       reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    BOOLEAN         reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    ID              reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    SEMICOLON       reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    IF              reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    FOR_KEYWORD     reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    NOT             reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    OPEN_PARENTHESIS reduce using rule 114 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 318

    (72) CONDICION_A -> gotoElse ELSE BLOQUE .

    ID              reduce using rule 72 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    IF              reduce using rule 72 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    FOR_KEYWORD     reduce using rule 72 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    WHILE_KEYWORD   reduce using rule 72 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    PRINT_KEYWORD   reduce using rule 72 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    INPUT_KEYWORD   reduce using rule 72 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    CLOSE_BRACKET   reduce using rule 72 (CONDICION_A -> gotoElse ELSE BLOQUE .)


state 319

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE . repeat_for
    (76) repeat_for -> .

    ID              reduce using rule 76 (repeat_for -> .)
    IF              reduce using rule 76 (repeat_for -> .)
    FOR_KEYWORD     reduce using rule 76 (repeat_for -> .)
    WHILE_KEYWORD   reduce using rule 76 (repeat_for -> .)
    PRINT_KEYWORD   reduce using rule 76 (repeat_for -> .)
    INPUT_KEYWORD   reduce using rule 76 (repeat_for -> .)
    CLOSE_BRACKET   reduce using rule 76 (repeat_for -> .)

    repeat_for                     shift and go to state 325

state 320

    (119) INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 119 (INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 321

    (49) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 326


state 322

    (143) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 327


state 323

    (147) PLOT_P -> CTE_STRING . PLOT_Q
    (148) PLOT_Q -> . COMMA PLOT_P
    (149) PLOT_Q -> . EMPTY
    (166) EMPTY -> .

    COMMA           shift and go to state 329
    CLOSE_SQUARE_BRACKET reduce using rule 166 (EMPTY -> .)

    PLOT_Q                         shift and go to state 328
    EMPTY                          shift and go to state 330

state 324

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON . CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 331


state 325

    (75) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .

    ID              reduce using rule 75 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    IF              reduce using rule 75 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    FOR_KEYWORD     reduce using rule 75 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    WHILE_KEYWORD   reduce using rule 75 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    PRINT_KEYWORD   reduce using rule 75 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    INPUT_KEYWORD   reduce using rule 75 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    CLOSE_BRACKET   reduce using rule 75 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_while SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)


state 326

    (49) MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET .

    MODULE          reduce using rule 49 (MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET .)
    MAIN            reduce using rule 49 (MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 49 (MODULO_C -> TIPO_P ID MODULO_B CLOSE_PARENTHESIS OPEN_BRACKET VARS BLOQUE CLOSE_BRACKET .)


state 327

    (143) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 332


state 328

    (147) PLOT_P -> CTE_STRING PLOT_Q .

    CLOSE_SQUARE_BRACKET reduce using rule 147 (PLOT_P -> CTE_STRING PLOT_Q .)


state 329

    (148) PLOT_Q -> COMMA . PLOT_P
    (147) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 323

    PLOT_P                         shift and go to state 333

state 330

    (149) PLOT_Q -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 149 (PLOT_Q -> EMPTY .)


state 331

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING . COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 334


state 332

    (143) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 335


state 333

    (148) PLOT_Q -> COMMA PLOT_P .

    CLOSE_SQUARE_BRACKET reduce using rule 148 (PLOT_Q -> COMMA PLOT_P .)


state 334

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 336


state 335

    (143) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 143 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 143 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 143 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 143 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 143 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 143 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 143 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)


state 336

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 337


state 337

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 338


state 338

    (128) PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 128 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 128 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 128 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 128 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 128 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 128 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 128 (PLOT_B -> CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINS in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINS in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINS in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINS in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINS in state 76 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARENTHESIS in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINS in state 93 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 93 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 93 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARENTHESIS in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINS in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 108 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 108 resolved as shift
WARNING: shift/reduce conflict for ID in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINS in state 113 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 127 resolved as shift
WARNING: shift/reduce conflict for NOT in state 128 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARENTHESIS in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 128 resolved as shift
WARNING: shift/reduce conflict for MINS in state 128 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 128 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 128 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 128 resolved as shift
WARNING: shift/reduce conflict for ID in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINS in state 141 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINS in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINS in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINS in state 150 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARENTHESIS in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 150 resolved as shift
WARNING: shift/reduce conflict for ID in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MINS in state 151 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARENTHESIS in state 151 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 151 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 151 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 151 resolved as shift
WARNING: shift/reduce conflict for ID in state 151 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MINS in state 154 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARENTHESIS in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 154 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 154 resolved as shift
WARNING: shift/reduce conflict for ID in state 154 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 155 resolved as shift
WARNING: shift/reduce conflict for MINS in state 155 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARENTHESIS in state 155 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 155 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 155 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINS in state 166 resolved as shift
WARNING: shift/reduce conflict for OPEN_PARENTHESIS in state 166 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 166 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 166 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 172 resolved as shift
WARNING: shift/reduce conflict for MINS in state 172 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 175 resolved as shift
WARNING: shift/reduce conflict for MINS in state 175 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 239 resolved as shift
WARNING: shift/reduce conflict for MINS in state 239 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 259 resolved as shift
WARNING: shift/reduce conflict for MINS in state 259 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 286 resolved as shift
WARNING: shift/reduce conflict for MINS in state 286 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 294 resolved as shift
WARNING: shift/reduce conflict for MINS in state 294 resolved as shift
WARNING: reduce/reduce conflict in state 112 resolved using rule (FACTOR_A -> EMPTY)
WARNING: rejected rule (EXP_RELOP -> EMPTY) in state 112
WARNING: Rule (EXP_RELOP -> EMPTY) is never reduced
