Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CREATE
    CTE_CHAR
    E
    FALSE
    PI
    QUOTE
    TRUE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
Rule 2     end_quad -> <empty>
Rule 3     add_count -> <empty>
Rule 4     addfunction -> <empty>
Rule 5     quad_main -> <empty>
Rule 6     PROGRAMA_A -> MODULO PROGRAMA_A
Rule 7     PROGRAMA_A -> EMPTY
Rule 8     VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A
Rule 9     VARS_A -> TIPO_P VARS_B
Rule 10    VARS_A -> TIPO_S VARS_B
Rule 11    VARS_B -> ID add_variable VARS_E VARS_C
Rule 12    add_variable -> <empty>
Rule 13    VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F
Rule 14    VARS_E -> EMPTY
Rule 15    add_s1 -> <empty>
Rule 16    VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET
Rule 17    VARS_F -> EMPTY
Rule 18    add_s2 -> <empty>
Rule 19    VARS_C -> SEMICOLON VARS_D
Rule 20    VARS_C -> COMMA VARS_B
Rule 21    VARS_D -> CLOSE_BRACKET
Rule 22    VARS_D -> VARS_A
Rule 23    BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET
Rule 24    ESTATUTO_A -> ESTATUTO ESTATUTO_A
Rule 25    ESTATUTO_A -> EMPTY
Rule 26    ESTATUTO -> ASIGNACION
Rule 27    ESTATUTO -> CONDICION
Rule 28    ESTATUTO -> NOMBRAR
Rule 29    ESTATUTO -> FOR
Rule 30    ESTATUTO -> WHILE
Rule 31    ESTATUTO -> PRINT
Rule 32    ESTATUTO -> PLOT
Rule 33    ESTATUTO -> LLAMADAMODULO
Rule 34    ESTATUTO -> INPUT
Rule 35    ESTATUTO -> COLOR
Rule 36    ESTATUTO -> RETURNOP
Rule 37    TIPO_P -> INT
Rule 38    TIPO_P -> FLOAT
Rule 39    TIPO_P -> BOOL
Rule 40    TIPO_P -> CHAR
Rule 41    TIPO_S -> TYPE_GRAPH
Rule 42    TIPO_S -> TYPE_PIECHART
Rule 43    TIPO_S -> TYPE_BARCHART
Rule 44    TIPO_S -> TYPE_HORBARCHART
Rule 45    TIPO_S -> TYPE_DONUTGRAPH
Rule 46    TIPO_S -> TYPE_NETWORK
Rule 47    TIPO_S -> TYPE_VENN
Rule 48    TIPO_S -> TYPE_RADARCHART
Rule 49    MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
Rule 50    RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON
Rule 51    return_quad -> <empty>
Rule 52    release_vars -> <empty>
Rule 53    endproc -> <empty>
Rule 54    change_scope -> <empty>
Rule 55    add_functionr -> <empty>
Rule 56    MODULO_A -> VOID
Rule 57    MODULO_A -> TIPO_P
Rule 58    MODULO_B -> COMMA MODULO_C
Rule 59    MODULO_B -> EMPTY
Rule 60    MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D
Rule 61    add_variable_m -> <empty>
Rule 62    MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
Rule 63    MODULO_D -> EMPTY
Rule 64    OPVARS -> VARS
Rule 65    OPVARS -> EMPTY
Rule 66    add_start -> <empty>
Rule 67    param_table -> <empty>
Rule 68    LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
Rule 69    gosub -> <empty>
Rule 70    era -> <empty>
Rule 71    LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C
Rule 72    LLAMADAMODULO_A -> EMPTY
Rule 73    incK -> <empty>
Rule 74    LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
Rule 75    check_types -> <empty>
Rule 76    LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON
Rule 77    LLAMADAMODULO_D -> EMPTY
Rule 78    NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 79    NOMBRAR_A -> NAME
Rule 80    NOMBRAR_A -> NAMEX
Rule 81    NOMBRAR_A -> NAMEY
Rule 82    ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
Rule 83    quad -> <empty>
Rule 84    addStackO -> <empty>
Rule 85    ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
Rule 86    ASIGNACION_A -> EMPTY
Rule 87    ver_arr -> <empty>
Rule 88    ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 89    ASIGNACION_B -> EMPTY
Rule 90    ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS
Rule 91    ASIGNACION_C -> EQUAL CTE_STRING
Rule 92    add_equal -> <empty>
Rule 93    CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
Rule 94    fill_end -> <empty>
Rule 95    check_bool -> <empty>
Rule 96    CONDICION_A -> gotoElse ELSE BLOQUE
Rule 97    CONDICION_A -> EMPTY
Rule 98    gotoElse -> <empty>
Rule 99    FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
Rule 100   repeat_for -> <empty>
Rule 101   bool_for -> <empty>
Rule 102   WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
Rule 103   goto_while -> <empty>
Rule 104   bool_while -> <empty>
Rule 105   EXP -> TERMINO pop_exp EXP_A
Rule 106   pop_exp -> <empty>
Rule 107   EXP_A -> PLUS append_operator EXP
Rule 108   EXP_A -> MINS append_operator EXP
Rule 109   EXP_A -> EMPTY
Rule 110   append_operator -> <empty>
Rule 111   TERMINO -> FACTOR pop_term TERMINO_A
Rule 112   pop_term -> <empty>
Rule 113   TERMINO_A -> TIMES add_operator TERMINO
Rule 114   TERMINO_A -> DIVIDE add_operator TERMINO
Rule 115   TERMINO_A -> EMPTY
Rule 116   add_operator -> <empty>
Rule 117   COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
Rule 118   COLOR_A -> COLOR_RED
Rule 119   COLOR_A -> COLOR_BLACK
Rule 120   COLOR_A -> COLOR_BLUE
Rule 121   COLOR_A -> COLOR_PURPLE
Rule 122   COLOR_A -> COLOR_GREEN
Rule 123   COLOR_A -> COLOR_ORANGE
Rule 124   FACTOR -> FACTOR_A
Rule 125   FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
Rule 126   FACTOR_A -> PLUS FACTOR_C
Rule 127   FACTOR_A -> MINS FACTOR_C
Rule 128   FACTOR_A -> FACTOR_C
Rule 129   FACTOR_A -> EMPTY
Rule 130   FACTOR_B -> EXPRESIONESVARIAS FACTOR_C
Rule 131   FACTOR_C -> VARS_CTE
Rule 132   VARS_CTE -> CTE_INTEGER
Rule 133   VARS_CTE -> CTE_FLOAT
Rule 134   VARS_CTE -> BOOLEAN
Rule 135   VARS_CTE -> ID VARS_CTE_A
Rule 136   VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B
Rule 137   VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
Rule 138   VARS_CTE_A -> EMPTY
Rule 139   VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS
Rule 140   VARS_CTE_C -> COMMA VARS_CTE_B
Rule 141   VARS_CTE_C -> EMPTY
Rule 142   VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 143   VARS_CTE_D -> EMPTY
Rule 144   INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
Rule 145   add_inputid -> <empty>
Rule 146   quad_input -> <empty>
Rule 147   INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
Rule 148   INPUT_A -> EMPTY
Rule 149   INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
Rule 150   PLOT -> PGraph
Rule 151   PLOT -> PPie
Rule 152   PLOT -> PGBarras
Rule 153   PLOT -> PGBarrasHor
Rule 154   PLOT -> PDona
Rule 155   PLOT -> PRadar
Rule 156   PLOT -> PVenn
Rule 157   PLOT -> PLOT_B
Rule 158   PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
Rule 159   PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
Rule 160   PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
Rule 161   PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
Rule 162   PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E
Rule 163   PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E
Rule 164   PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
Rule 165   PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
Rule 166   PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON
Rule 167   PLOT_I -> CTE_INTEGER PLOT_D
Rule 168   PLOT_I -> CTE_FLOAT PLOT_D
Rule 169   PLOT_D -> COMMA PLOT_I
Rule 170   PLOT_D -> EMPTY
Rule 171   PLOT_E -> PLOT_F SEMICOLON PLOT_G
Rule 172   PLOT_F -> CTE_INTEGER PLOT_J
Rule 173   PLOT_F -> CTE_FLOAT PLOT_J
Rule 174   PLOT_J -> COMMA PLOT_F
Rule 175   PLOT_J -> EMPTY
Rule 176   PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON
Rule 177   PLOT_K -> CTE_STRING PLOT_H
Rule 178   PLOT_H -> COMMA PLOT_K
Rule 179   PLOT_H -> EMPTY
Rule 180   PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
Rule 181   PLOT_N -> CTE_STRING PLOT_O
Rule 182   PLOT_O -> COMMA PLOT_N
Rule 183   PLOT_O -> EMPTY
Rule 184   PLOT_P -> CTE_STRING PLOT_Q
Rule 185   PLOT_Q -> COMMA PLOT_P
Rule 186   PLOT_Q -> EMPTY
Rule 187   PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
Rule 188   PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
Rule 189   PRINT_B -> CTE_STRING add_string PRINT_C
Rule 190   PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C
Rule 191   add_temp -> <empty>
Rule 192   add_string -> <empty>
Rule 193   print_quad -> <empty>
Rule 194   print_string -> <empty>
Rule 195   print_id -> <empty>
Rule 196   PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
Rule 197   PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D
Rule 198   PRINT_C -> EMPTY
Rule 199   add_exp -> <empty>
Rule 200   add_con -> <empty>
Rule 201   PRINT_D -> CONCATENATE add_sign PRINT_B
Rule 202   PRINT_D -> EMPTY
Rule 203   add_sign -> <empty>
Rule 204   EXPRESIONESVARIAS -> NOT EV_C
Rule 205   EXPRESIONESVARIAS -> EV_C
Rule 206   EV_C -> EXP_RELOP EV_B
Rule 207   EV_B -> AND add_ev EV_C
Rule 208   EV_B -> OR add_ev EV_C
Rule 209   EV_B -> EMPTY
Rule 210   add_ev -> <empty>
Rule 211   EXP_RELOP -> EXP EXP_RELOP_A
Rule 212   EXP_RELOP -> EMPTY
Rule 213   EXP_RELOP_A -> RELOP add_relop EXP
Rule 214   EXP_RELOP_A -> EMPTY
Rule 215   add_relop -> <empty>
Rule 216   EMPTY -> <empty>

Terminals, with rules where they appear

AND                  : 207
BOOL                 : 39
BOOLEAN              : 134
CHAR                 : 40
CLOSE_BRACKET        : 1 21 23 62
CLOSE_PARENTHESIS    : 62 76 78 93 99 102 117 125 139 164 166 176 180 188
CLOSE_SQUARE_BRACKET : 13 16 85 88 137 142 147 149 180 180
COLOR_BLACK          : 119
COLOR_BLUE           : 120
COLOR_GREEN          : 122
COLOR_KEYWORD        : 117
COLOR_ORANGE         : 123
COLOR_PURPLE         : 121
COLOR_RED            : 118
COMMA                : 20 58 71 140 164 164 164 169 174 178 182 185
CONCATENATE          : 196 197 201
CREATE               : 
CREATED              : 162
CREATEG              : 158
CREATEGB             : 160
CREATEGBH            : 161
CREATEN              : 165
CREATEPC             : 159
CREATER              : 163
CREATEV              : 164
CTE_CHAR             : 
CTE_FLOAT            : 133 168 173
CTE_INTEGER          : 13 16 132 164 164 164 167 172
CTE_STRING           : 78 91 164 164 177 181 184 189 197
DIVIDE               : 114
E                    : 
ELSE                 : 96
EQUAL                : 90 91
FALSE                : 
FLOAT                : 38
FOR_KEYWORD          : 99
ID                   : 1 11 49 60 68 78 82 117 135 144 158 159 160 161 162 163 164 165
IF                   : 93
INPUTSYMBOL          : 144
INPUT_KEYWORD        : 144
INT                  : 37
MAIN                 : 1
MINS                 : 108 127
MODULE               : 49
NAME                 : 79
NAMEX                : 80
NAMEY                : 81
NOT                  : 204
OPEN_BRACKET         : 1 8 23 62
OPEN_PARENTHESIS     : 49 68 78 93 99 102 117 125 136 158 159 160 161 162 163 164 165 187
OPEN_SQUARE_BRACKET  : 13 16 85 88 137 142 147 149 165 180
OR                   : 208
PI                   : 
PLUS                 : 107 126
POINT                : 78 117 158 159 160 161 162 163 164 165
PRINT_KEYWORD        : 187
PROGRAM              : 1
QUOTE                : 
RELOP                : 213
RETURN               : 50
SEMICOLON            : 19 50 76 78 82 99 117 144 164 164 166 171 176 180 180 188
TIMES                : 113
TRUE                 : 
TYPE_BARCHART        : 43
TYPE_DONUTGRAPH      : 45
TYPE_GRAPH           : 41
TYPE_HORBARCHART     : 44
TYPE_NETWORK         : 46
TYPE_PIECHART        : 42
TYPE_RADARCHART      : 48
TYPE_VENN            : 47
VARS_KEYWORD         : 8
VOID                 : 56
WHILE_KEYWORD        : 102
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 26 99 99
ASIGNACION_A         : 82
ASIGNACION_B         : 85
ASIGNACION_C         : 82
BLOQUE               : 1 62 93 96 99 102
COLOR                : 35
COLOR_A              : 117
CONDICION            : 27
CONDICION_A          : 93
EMPTY                : 7 14 17 25 59 63 65 72 77 86 89 97 109 115 129 138 141 143 148 170 175 179 183 186 198 202 209 212 214
ESTATUTO             : 24
ESTATUTO_A           : 23 24
EV_B                 : 206
EV_C                 : 204 205 207 208
EXP                  : 74 85 88 107 108 137 139 142 147 149 211 213
EXPRESIONESVARIAS    : 50 90 93 99 102 130 190 196
EXP_A                : 105
EXP_RELOP            : 206
EXP_RELOP_A          : 211
FACTOR               : 111
FACTOR_A             : 124
FACTOR_B             : 125
FACTOR_C             : 126 127 128 130
FOR                  : 29
INPUT                : 34
INPUT_A              : 144
INPUT_B              : 147
LLAMADAMODULO        : 33
LLAMADAMODULO_A      : 74
LLAMADAMODULO_C      : 68 71
LLAMADAMODULO_D      : 74
MODULO               : 6
MODULO_A             : 49
MODULO_B             : 60
MODULO_C             : 49 58
MODULO_D             : 60
NOMBRAR              : 28
NOMBRAR_A            : 78
OPVARS               : 62
PDona                : 154
PGBarras             : 152
PGBarrasHor          : 153
PGraph               : 150
PLOT                 : 32
PLOT_B               : 157
PLOT_C               : 158
PLOT_D               : 167 168
PLOT_E               : 159 160 161 162 163
PLOT_F               : 171 174
PLOT_G               : 171
PLOT_H               : 177
PLOT_I               : 166 169
PLOT_J               : 172 173
PLOT_K               : 176 178
PLOT_M               : 165
PLOT_N               : 180 182
PLOT_O               : 181
PLOT_P               : 180 185
PLOT_Q               : 184
PPie                 : 151
PRINT                : 31
PRINT_A              : 187
PRINT_B              : 188 201
PRINT_C              : 189 190
PRINT_D              : 196 197
PROGRAMA             : 0
PROGRAMA_A           : 1 6
PRadar               : 155
PVenn                : 156
RETURNOP             : 36
TERMINO              : 105 113 114
TERMINO_A            : 111
TIPO_P               : 9 57 60
TIPO_S               : 10
VARS                 : 1 64
VARS_A               : 8 22
VARS_B               : 9 10 20
VARS_C               : 11
VARS_CTE             : 131
VARS_CTE_A           : 135
VARS_CTE_B           : 136 140
VARS_CTE_C           : 139
VARS_CTE_D           : 137
VARS_D               : 19
VARS_E               : 11
VARS_F               : 13
WHILE                : 30
addStackO            : 82
add_con              : 196
add_count            : 1 62
add_equal            : 90
add_ev               : 207 208
add_exp              : 197
add_functionr        : 49
add_inputid          : 144
add_operator         : 113 114
add_relop            : 213
add_s1               : 13
add_s2               : 16
add_sign             : 201
add_start            : 62
add_string           : 189
add_temp             : 190
add_variable         : 11
add_variable_m       : 60
addfunction          : 1
append_operator      : 107 108
bool_for             : 99
bool_while           : 102
change_scope         : 49
check_bool           : 93
check_types          : 74
end_quad             : 1
endproc              : 49
era                  : 68
fill_end             : 93
gosub                : 68
gotoElse             : 96
goto_while           : 102
incK                 : 71
param_table          : 62
pop_exp              : 105
pop_term             : 111
print_id             : 
print_quad           : 188
print_string         : 
quad                 : 82
quad_input           : 144
quad_main            : 1
release_vars         : 49
repeat_for           : 99
return_quad          : 50
ver_arr              : 85

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (4) addfunction -> .

    OPEN_BRACKET    reduce using rule 4 (addfunction -> .)

    addfunction                    shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addfunction . OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    OPEN_BRACKET    shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET . VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A

    VARS_KEYWORD    shift and go to state 7

    VARS                           shift and go to state 6

state 6

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS . add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (3) add_count -> .

    MODULE          reduce using rule 3 (add_count -> .)
    MAIN            reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 8

state 7

    (8) VARS -> VARS_KEYWORD . OPEN_BRACKET VARS_A

    OPEN_BRACKET    shift and go to state 9


state 8

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count . PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (49) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (216) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 216 (EMPTY -> .)

    PROGRAMA_A                     shift and go to state 10
    MODULO                         shift and go to state 11
    EMPTY                          shift and go to state 12

state 9

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR
    (41) TIPO_S -> . TYPE_GRAPH
    (42) TIPO_S -> . TYPE_PIECHART
    (43) TIPO_S -> . TYPE_BARCHART
    (44) TIPO_S -> . TYPE_HORBARCHART
    (45) TIPO_S -> . TYPE_DONUTGRAPH
    (46) TIPO_S -> . TYPE_NETWORK
    (47) TIPO_S -> . TYPE_VENN
    (48) TIPO_S -> . TYPE_RADARCHART

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_A                         shift and go to state 14
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 10

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A . MAIN quad_main BLOQUE CLOSE_BRACKET end_quad

    MAIN            shift and go to state 29


state 11

    (6) PROGRAMA_A -> MODULO . PROGRAMA_A
    (6) PROGRAMA_A -> . MODULO PROGRAMA_A
    (7) PROGRAMA_A -> . EMPTY
    (49) MODULO -> . MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (216) EMPTY -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 216 (EMPTY -> .)

    MODULO                         shift and go to state 11
    PROGRAMA_A                     shift and go to state 30
    EMPTY                          shift and go to state 12

state 12

    (7) PROGRAMA_A -> EMPTY .

    MAIN            reduce using rule 7 (PROGRAMA_A -> EMPTY .)


state 13

    (49) MODULO -> MODULE . MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (56) MODULO_A -> . VOID
    (57) MODULO_A -> . TIPO_P
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    VOID            shift and go to state 32
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_A                       shift and go to state 31
    TIPO_P                         shift and go to state 33

state 14

    (8) VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .

    MODULE          reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    MAIN            reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)
    OPEN_BRACKET    reduce using rule 8 (VARS -> VARS_KEYWORD OPEN_BRACKET VARS_A .)


state 15

    (9) VARS_A -> TIPO_P . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 34

state 16

    (10) VARS_A -> TIPO_S . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 36

state 17

    (37) TIPO_P -> INT .

    ID              reduce using rule 37 (TIPO_P -> INT .)


state 18

    (38) TIPO_P -> FLOAT .

    ID              reduce using rule 38 (TIPO_P -> FLOAT .)


state 19

    (39) TIPO_P -> BOOL .

    ID              reduce using rule 39 (TIPO_P -> BOOL .)


state 20

    (40) TIPO_P -> CHAR .

    ID              reduce using rule 40 (TIPO_P -> CHAR .)


state 21

    (41) TIPO_S -> TYPE_GRAPH .

    ID              reduce using rule 41 (TIPO_S -> TYPE_GRAPH .)


state 22

    (42) TIPO_S -> TYPE_PIECHART .

    ID              reduce using rule 42 (TIPO_S -> TYPE_PIECHART .)


state 23

    (43) TIPO_S -> TYPE_BARCHART .

    ID              reduce using rule 43 (TIPO_S -> TYPE_BARCHART .)


state 24

    (44) TIPO_S -> TYPE_HORBARCHART .

    ID              reduce using rule 44 (TIPO_S -> TYPE_HORBARCHART .)


state 25

    (45) TIPO_S -> TYPE_DONUTGRAPH .

    ID              reduce using rule 45 (TIPO_S -> TYPE_DONUTGRAPH .)


state 26

    (46) TIPO_S -> TYPE_NETWORK .

    ID              reduce using rule 46 (TIPO_S -> TYPE_NETWORK .)


state 27

    (47) TIPO_S -> TYPE_VENN .

    ID              reduce using rule 47 (TIPO_S -> TYPE_VENN .)


state 28

    (48) TIPO_S -> TYPE_RADARCHART .

    ID              reduce using rule 48 (TIPO_S -> TYPE_RADARCHART .)


state 29

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN . quad_main BLOQUE CLOSE_BRACKET end_quad
    (5) quad_main -> .

    OPEN_BRACKET    reduce using rule 5 (quad_main -> .)

    quad_main                      shift and go to state 37

state 30

    (6) PROGRAMA_A -> MODULO PROGRAMA_A .

    MAIN            reduce using rule 6 (PROGRAMA_A -> MODULO PROGRAMA_A .)


state 31

    (49) MODULO -> MODULE MODULO_A . ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    ID              shift and go to state 38


state 32

    (56) MODULO_A -> VOID .

    ID              reduce using rule 56 (MODULO_A -> VOID .)


state 33

    (57) MODULO_A -> TIPO_P .

    ID              reduce using rule 57 (MODULO_A -> TIPO_P .)


state 34

    (9) VARS_A -> TIPO_P VARS_B .

    MODULE          reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    MAIN            reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)
    OPEN_BRACKET    reduce using rule 9 (VARS_A -> TIPO_P VARS_B .)


state 35

    (11) VARS_B -> ID . add_variable VARS_E VARS_C
    (12) add_variable -> .

    OPEN_SQUARE_BRACKET reduce using rule 12 (add_variable -> .)
    SEMICOLON       reduce using rule 12 (add_variable -> .)
    COMMA           reduce using rule 12 (add_variable -> .)

    add_variable                   shift and go to state 39

state 36

    (10) VARS_A -> TIPO_S VARS_B .

    MODULE          reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    MAIN            reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)
    OPEN_BRACKET    reduce using rule 10 (VARS_A -> TIPO_S VARS_B .)


state 37

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main . BLOQUE CLOSE_BRACKET end_quad
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 41

state 38

    (49) MODULO -> MODULE MODULO_A ID . add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc
    (55) add_functionr -> .

    OPEN_PARENTHESIS reduce using rule 55 (add_functionr -> .)

    add_functionr                  shift and go to state 42

state 39

    (11) VARS_B -> ID add_variable . VARS_E VARS_C
    (13) VARS_E -> . OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F
    (14) VARS_E -> . EMPTY
    (216) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 44
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)

    VARS_E                         shift and go to state 43
    EMPTY                          shift and go to state 45

state 40

    (23) BLOQUE -> OPEN_BRACKET . ESTATUTO_A CLOSE_BRACKET
    (24) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (25) ESTATUTO_A -> . EMPTY
    (26) ESTATUTO -> . ASIGNACION
    (27) ESTATUTO -> . CONDICION
    (28) ESTATUTO -> . NOMBRAR
    (29) ESTATUTO -> . FOR
    (30) ESTATUTO -> . WHILE
    (31) ESTATUTO -> . PRINT
    (32) ESTATUTO -> . PLOT
    (33) ESTATUTO -> . LLAMADAMODULO
    (34) ESTATUTO -> . INPUT
    (35) ESTATUTO -> . COLOR
    (36) ESTATUTO -> . RETURNOP
    (216) EMPTY -> .
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (93) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (78) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (99) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (102) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (187) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (150) PLOT -> . PGraph
    (151) PLOT -> . PPie
    (152) PLOT -> . PGBarras
    (153) PLOT -> . PGBarrasHor
    (154) PLOT -> . PDona
    (155) PLOT -> . PRadar
    (156) PLOT -> . PVenn
    (157) PLOT -> . PLOT_B
    (68) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (144) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (117) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (50) RETURNOP -> . RETURN EXPRESIONESVARIAS return_quad SEMICOLON
    (158) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (159) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (160) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (161) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (162) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (163) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (164) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (165) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO_A                     shift and go to state 46
    ESTATUTO                       shift and go to state 47
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 41

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE . CLOSE_BRACKET end_quad

    CLOSE_BRACKET   shift and go to state 75


state 42

    (49) MODULO -> MODULE MODULO_A ID add_functionr . OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc

    OPEN_PARENTHESIS shift and go to state 76


state 43

    (11) VARS_B -> ID add_variable VARS_E . VARS_C
    (19) VARS_C -> . SEMICOLON VARS_D
    (20) VARS_C -> . COMMA VARS_B

    SEMICOLON       shift and go to state 78
    COMMA           shift and go to state 79

    VARS_C                         shift and go to state 77

state 44

    (13) VARS_E -> OPEN_SQUARE_BRACKET . CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F

    CTE_INTEGER     shift and go to state 80


state 45

    (14) VARS_E -> EMPTY .

    SEMICOLON       reduce using rule 14 (VARS_E -> EMPTY .)
    COMMA           reduce using rule 14 (VARS_E -> EMPTY .)


state 46

    (23) BLOQUE -> OPEN_BRACKET ESTATUTO_A . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 81


state 47

    (24) ESTATUTO_A -> ESTATUTO . ESTATUTO_A
    (24) ESTATUTO_A -> . ESTATUTO ESTATUTO_A
    (25) ESTATUTO_A -> . EMPTY
    (26) ESTATUTO -> . ASIGNACION
    (27) ESTATUTO -> . CONDICION
    (28) ESTATUTO -> . NOMBRAR
    (29) ESTATUTO -> . FOR
    (30) ESTATUTO -> . WHILE
    (31) ESTATUTO -> . PRINT
    (32) ESTATUTO -> . PLOT
    (33) ESTATUTO -> . LLAMADAMODULO
    (34) ESTATUTO -> . INPUT
    (35) ESTATUTO -> . COLOR
    (36) ESTATUTO -> . RETURNOP
    (216) EMPTY -> .
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (93) CONDICION -> . IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (78) NOMBRAR -> . ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (99) FOR -> . FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (102) WHILE -> . WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (187) PRINT -> . PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A
    (150) PLOT -> . PGraph
    (151) PLOT -> . PPie
    (152) PLOT -> . PGBarras
    (153) PLOT -> . PGBarrasHor
    (154) PLOT -> . PDona
    (155) PLOT -> . PRadar
    (156) PLOT -> . PVenn
    (157) PLOT -> . PLOT_B
    (68) LLAMADAMODULO -> . ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (144) INPUT -> . INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input
    (117) COLOR -> . ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (50) RETURNOP -> . RETURN EXPRESIONESVARIAS return_quad SEMICOLON
    (158) PGraph -> . ID POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (159) PPie -> . ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (160) PGBarras -> . ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (161) PGBarrasHor -> . ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (162) PDona -> . ID POINT CREATED OPEN_PARENTHESIS PLOT_E
    (163) PRadar -> . ID POINT CREATER OPEN_PARENTHESIS PLOT_E
    (164) PVenn -> . ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (165) PLOT_B -> . ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)
    ID              shift and go to state 60
    IF              shift and go to state 61
    FOR_KEYWORD     shift and go to state 62
    WHILE_KEYWORD   shift and go to state 63
    PRINT_KEYWORD   shift and go to state 64
    INPUT_KEYWORD   shift and go to state 73
    RETURN          shift and go to state 74

    ESTATUTO                       shift and go to state 47
    ESTATUTO_A                     shift and go to state 82
    EMPTY                          shift and go to state 48
    ASIGNACION                     shift and go to state 49
    CONDICION                      shift and go to state 50
    NOMBRAR                        shift and go to state 51
    FOR                            shift and go to state 52
    WHILE                          shift and go to state 53
    PRINT                          shift and go to state 54
    PLOT                           shift and go to state 55
    LLAMADAMODULO                  shift and go to state 56
    INPUT                          shift and go to state 57
    COLOR                          shift and go to state 58
    RETURNOP                       shift and go to state 59
    PGraph                         shift and go to state 65
    PPie                           shift and go to state 66
    PGBarras                       shift and go to state 67
    PGBarrasHor                    shift and go to state 68
    PDona                          shift and go to state 69
    PRadar                         shift and go to state 70
    PVenn                          shift and go to state 71
    PLOT_B                         shift and go to state 72

state 48

    (25) ESTATUTO_A -> EMPTY .

    CLOSE_BRACKET   reduce using rule 25 (ESTATUTO_A -> EMPTY .)


state 49

    (26) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    FOR_KEYWORD     reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    WHILE_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    PRINT_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    INPUT_KEYWORD   reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 26 (ESTATUTO -> ASIGNACION .)
    CLOSE_BRACKET   reduce using rule 26 (ESTATUTO -> ASIGNACION .)


state 50

    (27) ESTATUTO -> CONDICION .

    ID              reduce using rule 27 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 27 (ESTATUTO -> CONDICION .)
    FOR_KEYWORD     reduce using rule 27 (ESTATUTO -> CONDICION .)
    WHILE_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    PRINT_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    INPUT_KEYWORD   reduce using rule 27 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 27 (ESTATUTO -> CONDICION .)
    CLOSE_BRACKET   reduce using rule 27 (ESTATUTO -> CONDICION .)


state 51

    (28) ESTATUTO -> NOMBRAR .

    ID              reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    IF              reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    FOR_KEYWORD     reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    WHILE_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    PRINT_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    INPUT_KEYWORD   reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    RETURN          reduce using rule 28 (ESTATUTO -> NOMBRAR .)
    CLOSE_BRACKET   reduce using rule 28 (ESTATUTO -> NOMBRAR .)


state 52

    (29) ESTATUTO -> FOR .

    ID              reduce using rule 29 (ESTATUTO -> FOR .)
    IF              reduce using rule 29 (ESTATUTO -> FOR .)
    FOR_KEYWORD     reduce using rule 29 (ESTATUTO -> FOR .)
    WHILE_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    PRINT_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    INPUT_KEYWORD   reduce using rule 29 (ESTATUTO -> FOR .)
    RETURN          reduce using rule 29 (ESTATUTO -> FOR .)
    CLOSE_BRACKET   reduce using rule 29 (ESTATUTO -> FOR .)


state 53

    (30) ESTATUTO -> WHILE .

    ID              reduce using rule 30 (ESTATUTO -> WHILE .)
    IF              reduce using rule 30 (ESTATUTO -> WHILE .)
    FOR_KEYWORD     reduce using rule 30 (ESTATUTO -> WHILE .)
    WHILE_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    PRINT_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    INPUT_KEYWORD   reduce using rule 30 (ESTATUTO -> WHILE .)
    RETURN          reduce using rule 30 (ESTATUTO -> WHILE .)
    CLOSE_BRACKET   reduce using rule 30 (ESTATUTO -> WHILE .)


state 54

    (31) ESTATUTO -> PRINT .

    ID              reduce using rule 31 (ESTATUTO -> PRINT .)
    IF              reduce using rule 31 (ESTATUTO -> PRINT .)
    FOR_KEYWORD     reduce using rule 31 (ESTATUTO -> PRINT .)
    WHILE_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    PRINT_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    INPUT_KEYWORD   reduce using rule 31 (ESTATUTO -> PRINT .)
    RETURN          reduce using rule 31 (ESTATUTO -> PRINT .)
    CLOSE_BRACKET   reduce using rule 31 (ESTATUTO -> PRINT .)


state 55

    (32) ESTATUTO -> PLOT .

    ID              reduce using rule 32 (ESTATUTO -> PLOT .)
    IF              reduce using rule 32 (ESTATUTO -> PLOT .)
    FOR_KEYWORD     reduce using rule 32 (ESTATUTO -> PLOT .)
    WHILE_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    PRINT_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    INPUT_KEYWORD   reduce using rule 32 (ESTATUTO -> PLOT .)
    RETURN          reduce using rule 32 (ESTATUTO -> PLOT .)
    CLOSE_BRACKET   reduce using rule 32 (ESTATUTO -> PLOT .)


state 56

    (33) ESTATUTO -> LLAMADAMODULO .

    ID              reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    IF              reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    FOR_KEYWORD     reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    WHILE_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    PRINT_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    INPUT_KEYWORD   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    RETURN          reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)
    CLOSE_BRACKET   reduce using rule 33 (ESTATUTO -> LLAMADAMODULO .)


state 57

    (34) ESTATUTO -> INPUT .

    ID              reduce using rule 34 (ESTATUTO -> INPUT .)
    IF              reduce using rule 34 (ESTATUTO -> INPUT .)
    FOR_KEYWORD     reduce using rule 34 (ESTATUTO -> INPUT .)
    WHILE_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    PRINT_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    INPUT_KEYWORD   reduce using rule 34 (ESTATUTO -> INPUT .)
    RETURN          reduce using rule 34 (ESTATUTO -> INPUT .)
    CLOSE_BRACKET   reduce using rule 34 (ESTATUTO -> INPUT .)


state 58

    (35) ESTATUTO -> COLOR .

    ID              reduce using rule 35 (ESTATUTO -> COLOR .)
    IF              reduce using rule 35 (ESTATUTO -> COLOR .)
    FOR_KEYWORD     reduce using rule 35 (ESTATUTO -> COLOR .)
    WHILE_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    PRINT_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    INPUT_KEYWORD   reduce using rule 35 (ESTATUTO -> COLOR .)
    RETURN          reduce using rule 35 (ESTATUTO -> COLOR .)
    CLOSE_BRACKET   reduce using rule 35 (ESTATUTO -> COLOR .)


state 59

    (36) ESTATUTO -> RETURNOP .

    ID              reduce using rule 36 (ESTATUTO -> RETURNOP .)
    IF              reduce using rule 36 (ESTATUTO -> RETURNOP .)
    FOR_KEYWORD     reduce using rule 36 (ESTATUTO -> RETURNOP .)
    WHILE_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    PRINT_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    INPUT_KEYWORD   reduce using rule 36 (ESTATUTO -> RETURNOP .)
    RETURN          reduce using rule 36 (ESTATUTO -> RETURNOP .)
    CLOSE_BRACKET   reduce using rule 36 (ESTATUTO -> RETURNOP .)


state 60

    (82) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (78) NOMBRAR -> ID . POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (68) LLAMADAMODULO -> ID . era OPEN_PARENTHESIS LLAMADAMODULO_C gosub
    (117) COLOR -> ID . POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (158) PGraph -> ID . POINT CREATEG OPEN_PARENTHESIS PLOT_C
    (159) PPie -> ID . POINT CREATEPC OPEN_PARENTHESIS PLOT_E
    (160) PGBarras -> ID . POINT CREATEGB OPEN_PARENTHESIS PLOT_E
    (161) PGBarrasHor -> ID . POINT CREATEGBH OPEN_PARENTHESIS PLOT_E
    (162) PDona -> ID . POINT CREATED OPEN_PARENTHESIS PLOT_E
    (163) PRadar -> ID . POINT CREATER OPEN_PARENTHESIS PLOT_E
    (164) PVenn -> ID . POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (165) PLOT_B -> ID . POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (84) addStackO -> .
    (70) era -> .

    POINT           shift and go to state 84
    OPEN_SQUARE_BRACKET reduce using rule 84 (addStackO -> .)
    EQUAL           reduce using rule 84 (addStackO -> .)
    OPEN_PARENTHESIS reduce using rule 70 (era -> .)

    addStackO                      shift and go to state 83
    era                            shift and go to state 85

state 61

    (93) CONDICION -> IF . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    OPEN_PARENTHESIS shift and go to state 86


state 62

    (99) FOR -> FOR_KEYWORD . OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    OPEN_PARENTHESIS shift and go to state 87


state 63

    (102) WHILE -> WHILE_KEYWORD . OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    OPEN_PARENTHESIS shift and go to state 88


state 64

    (187) PRINT -> PRINT_KEYWORD . OPEN_PARENTHESIS PRINT_A

    OPEN_PARENTHESIS shift and go to state 89


state 65

    (150) PLOT -> PGraph .

    ID              reduce using rule 150 (PLOT -> PGraph .)
    IF              reduce using rule 150 (PLOT -> PGraph .)
    FOR_KEYWORD     reduce using rule 150 (PLOT -> PGraph .)
    WHILE_KEYWORD   reduce using rule 150 (PLOT -> PGraph .)
    PRINT_KEYWORD   reduce using rule 150 (PLOT -> PGraph .)
    INPUT_KEYWORD   reduce using rule 150 (PLOT -> PGraph .)
    RETURN          reduce using rule 150 (PLOT -> PGraph .)
    CLOSE_BRACKET   reduce using rule 150 (PLOT -> PGraph .)


state 66

    (151) PLOT -> PPie .

    ID              reduce using rule 151 (PLOT -> PPie .)
    IF              reduce using rule 151 (PLOT -> PPie .)
    FOR_KEYWORD     reduce using rule 151 (PLOT -> PPie .)
    WHILE_KEYWORD   reduce using rule 151 (PLOT -> PPie .)
    PRINT_KEYWORD   reduce using rule 151 (PLOT -> PPie .)
    INPUT_KEYWORD   reduce using rule 151 (PLOT -> PPie .)
    RETURN          reduce using rule 151 (PLOT -> PPie .)
    CLOSE_BRACKET   reduce using rule 151 (PLOT -> PPie .)


state 67

    (152) PLOT -> PGBarras .

    ID              reduce using rule 152 (PLOT -> PGBarras .)
    IF              reduce using rule 152 (PLOT -> PGBarras .)
    FOR_KEYWORD     reduce using rule 152 (PLOT -> PGBarras .)
    WHILE_KEYWORD   reduce using rule 152 (PLOT -> PGBarras .)
    PRINT_KEYWORD   reduce using rule 152 (PLOT -> PGBarras .)
    INPUT_KEYWORD   reduce using rule 152 (PLOT -> PGBarras .)
    RETURN          reduce using rule 152 (PLOT -> PGBarras .)
    CLOSE_BRACKET   reduce using rule 152 (PLOT -> PGBarras .)


state 68

    (153) PLOT -> PGBarrasHor .

    ID              reduce using rule 153 (PLOT -> PGBarrasHor .)
    IF              reduce using rule 153 (PLOT -> PGBarrasHor .)
    FOR_KEYWORD     reduce using rule 153 (PLOT -> PGBarrasHor .)
    WHILE_KEYWORD   reduce using rule 153 (PLOT -> PGBarrasHor .)
    PRINT_KEYWORD   reduce using rule 153 (PLOT -> PGBarrasHor .)
    INPUT_KEYWORD   reduce using rule 153 (PLOT -> PGBarrasHor .)
    RETURN          reduce using rule 153 (PLOT -> PGBarrasHor .)
    CLOSE_BRACKET   reduce using rule 153 (PLOT -> PGBarrasHor .)


state 69

    (154) PLOT -> PDona .

    ID              reduce using rule 154 (PLOT -> PDona .)
    IF              reduce using rule 154 (PLOT -> PDona .)
    FOR_KEYWORD     reduce using rule 154 (PLOT -> PDona .)
    WHILE_KEYWORD   reduce using rule 154 (PLOT -> PDona .)
    PRINT_KEYWORD   reduce using rule 154 (PLOT -> PDona .)
    INPUT_KEYWORD   reduce using rule 154 (PLOT -> PDona .)
    RETURN          reduce using rule 154 (PLOT -> PDona .)
    CLOSE_BRACKET   reduce using rule 154 (PLOT -> PDona .)


state 70

    (155) PLOT -> PRadar .

    ID              reduce using rule 155 (PLOT -> PRadar .)
    IF              reduce using rule 155 (PLOT -> PRadar .)
    FOR_KEYWORD     reduce using rule 155 (PLOT -> PRadar .)
    WHILE_KEYWORD   reduce using rule 155 (PLOT -> PRadar .)
    PRINT_KEYWORD   reduce using rule 155 (PLOT -> PRadar .)
    INPUT_KEYWORD   reduce using rule 155 (PLOT -> PRadar .)
    RETURN          reduce using rule 155 (PLOT -> PRadar .)
    CLOSE_BRACKET   reduce using rule 155 (PLOT -> PRadar .)


state 71

    (156) PLOT -> PVenn .

    ID              reduce using rule 156 (PLOT -> PVenn .)
    IF              reduce using rule 156 (PLOT -> PVenn .)
    FOR_KEYWORD     reduce using rule 156 (PLOT -> PVenn .)
    WHILE_KEYWORD   reduce using rule 156 (PLOT -> PVenn .)
    PRINT_KEYWORD   reduce using rule 156 (PLOT -> PVenn .)
    INPUT_KEYWORD   reduce using rule 156 (PLOT -> PVenn .)
    RETURN          reduce using rule 156 (PLOT -> PVenn .)
    CLOSE_BRACKET   reduce using rule 156 (PLOT -> PVenn .)


state 72

    (157) PLOT -> PLOT_B .

    ID              reduce using rule 157 (PLOT -> PLOT_B .)
    IF              reduce using rule 157 (PLOT -> PLOT_B .)
    FOR_KEYWORD     reduce using rule 157 (PLOT -> PLOT_B .)
    WHILE_KEYWORD   reduce using rule 157 (PLOT -> PLOT_B .)
    PRINT_KEYWORD   reduce using rule 157 (PLOT -> PLOT_B .)
    INPUT_KEYWORD   reduce using rule 157 (PLOT -> PLOT_B .)
    RETURN          reduce using rule 157 (PLOT -> PLOT_B .)
    CLOSE_BRACKET   reduce using rule 157 (PLOT -> PLOT_B .)


state 73

    (144) INPUT -> INPUT_KEYWORD . INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input

    INPUTSYMBOL     shift and go to state 90


state 74

    (50) RETURNOP -> RETURN . EXPRESIONESVARIAS return_quad SEMICOLON
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 91
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 75

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET . end_quad
    (2) end_quad -> .

    $end            reduce using rule 2 (end_quad -> .)

    end_quad                       shift and go to state 109

state 76

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS . MODULO_C release_vars change_scope endproc
    (60) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 110
    TIPO_P                         shift and go to state 111

state 77

    (11) VARS_B -> ID add_variable VARS_E VARS_C .

    MODULE          reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    MAIN            reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)
    OPEN_BRACKET    reduce using rule 11 (VARS_B -> ID add_variable VARS_E VARS_C .)


state 78

    (19) VARS_C -> SEMICOLON . VARS_D
    (21) VARS_D -> . CLOSE_BRACKET
    (22) VARS_D -> . VARS_A
    (9) VARS_A -> . TIPO_P VARS_B
    (10) VARS_A -> . TIPO_S VARS_B
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR
    (41) TIPO_S -> . TYPE_GRAPH
    (42) TIPO_S -> . TYPE_PIECHART
    (43) TIPO_S -> . TYPE_BARCHART
    (44) TIPO_S -> . TYPE_HORBARCHART
    (45) TIPO_S -> . TYPE_DONUTGRAPH
    (46) TIPO_S -> . TYPE_NETWORK
    (47) TIPO_S -> . TYPE_VENN
    (48) TIPO_S -> . TYPE_RADARCHART

    CLOSE_BRACKET   shift and go to state 113
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    TYPE_GRAPH      shift and go to state 21
    TYPE_PIECHART   shift and go to state 22
    TYPE_BARCHART   shift and go to state 23
    TYPE_HORBARCHART shift and go to state 24
    TYPE_DONUTGRAPH shift and go to state 25
    TYPE_NETWORK    shift and go to state 26
    TYPE_VENN       shift and go to state 27
    TYPE_RADARCHART shift and go to state 28

    VARS_D                         shift and go to state 112
    VARS_A                         shift and go to state 114
    TIPO_P                         shift and go to state 15
    TIPO_S                         shift and go to state 16

state 79

    (20) VARS_C -> COMMA . VARS_B
    (11) VARS_B -> . ID add_variable VARS_E VARS_C

    ID              shift and go to state 35

    VARS_B                         shift and go to state 115

state 80

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER . add_s1 CLOSE_SQUARE_BRACKET VARS_F
    (15) add_s1 -> .

    CLOSE_SQUARE_BRACKET reduce using rule 15 (add_s1 -> .)

    add_s1                         shift and go to state 116

state 81

    (23) BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .

    CLOSE_BRACKET   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ELSE            reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    ID              reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    IF              reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    FOR_KEYWORD     reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)
    RETURN          reduce using rule 23 (BLOQUE -> OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET .)


state 82

    (24) ESTATUTO_A -> ESTATUTO ESTATUTO_A .

    CLOSE_BRACKET   reduce using rule 24 (ESTATUTO_A -> ESTATUTO ESTATUTO_A .)


state 83

    (82) ASIGNACION -> ID addStackO . ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (85) ASIGNACION_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
    (86) ASIGNACION_A -> . EMPTY
    (216) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 118
    EQUAL           reduce using rule 216 (EMPTY -> .)

    ASIGNACION_A                   shift and go to state 117
    EMPTY                          shift and go to state 119

state 84

    (78) NOMBRAR -> ID POINT . NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (117) COLOR -> ID POINT . COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (158) PGraph -> ID POINT . CREATEG OPEN_PARENTHESIS PLOT_C
    (159) PPie -> ID POINT . CREATEPC OPEN_PARENTHESIS PLOT_E
    (160) PGBarras -> ID POINT . CREATEGB OPEN_PARENTHESIS PLOT_E
    (161) PGBarrasHor -> ID POINT . CREATEGBH OPEN_PARENTHESIS PLOT_E
    (162) PDona -> ID POINT . CREATED OPEN_PARENTHESIS PLOT_E
    (163) PRadar -> ID POINT . CREATER OPEN_PARENTHESIS PLOT_E
    (164) PVenn -> ID POINT . CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON
    (165) PLOT_B -> ID POINT . CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M
    (79) NOMBRAR_A -> . NAME
    (80) NOMBRAR_A -> . NAMEX
    (81) NOMBRAR_A -> . NAMEY

    COLOR_KEYWORD   shift and go to state 121
    CREATEG         shift and go to state 122
    CREATEPC        shift and go to state 123
    CREATEGB        shift and go to state 124
    CREATEGBH       shift and go to state 125
    CREATED         shift and go to state 126
    CREATER         shift and go to state 127
    CREATEV         shift and go to state 128
    CREATEN         shift and go to state 129
    NAME            shift and go to state 130
    NAMEX           shift and go to state 131
    NAMEY           shift and go to state 132

    NOMBRAR_A                      shift and go to state 120

state 85

    (68) LLAMADAMODULO -> ID era . OPEN_PARENTHESIS LLAMADAMODULO_C gosub

    OPEN_PARENTHESIS shift and go to state 133


state 86

    (93) CONDICION -> IF OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 134
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 87

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS . ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 136

    ASIGNACION                     shift and go to state 135

state 88

    (102) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS . EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 137
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 89

    (187) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS . PRINT_A
    (188) PRINT_A -> . PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON
    (189) PRINT_B -> . CTE_STRING add_string PRINT_C
    (190) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 140
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    PRINT_A                        shift and go to state 138
    PRINT_B                        shift and go to state 139
    EXPRESIONESVARIAS              shift and go to state 141
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 90

    (144) INPUT -> INPUT_KEYWORD INPUTSYMBOL . ID add_inputid INPUT_A SEMICOLON quad_input

    ID              shift and go to state 142


state 91

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS . return_quad SEMICOLON
    (51) return_quad -> .

    SEMICOLON       reduce using rule 51 (return_quad -> .)

    return_quad                    shift and go to state 143

state 92

    (204) EXPRESIONESVARIAS -> NOT . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EV_C                           shift and go to state 144
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 93

    (205) EXPRESIONESVARIAS -> EV_C .

    SEMICOLON       reduce using rule 205 (EXPRESIONESVARIAS -> EV_C .)
    CLOSE_PARENTHESIS reduce using rule 205 (EXPRESIONESVARIAS -> EV_C .)
    CONCATENATE     reduce using rule 205 (EXPRESIONESVARIAS -> EV_C .)
    CTE_INTEGER     reduce using rule 205 (EXPRESIONESVARIAS -> EV_C .)
    CTE_FLOAT       reduce using rule 205 (EXPRESIONESVARIAS -> EV_C .)
    BOOLEAN         reduce using rule 205 (EXPRESIONESVARIAS -> EV_C .)
    ID              reduce using rule 205 (EXPRESIONESVARIAS -> EV_C .)


state 94

    (206) EV_C -> EXP_RELOP . EV_B
    (207) EV_B -> . AND add_ev EV_C
    (208) EV_B -> . OR add_ev EV_C
    (209) EV_B -> . EMPTY
    (216) EMPTY -> .

    AND             shift and go to state 146
    OR              shift and go to state 147
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 216 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 216 (EMPTY -> .)
    BOOLEAN         reduce using rule 216 (EMPTY -> .)
    ID              reduce using rule 216 (EMPTY -> .)

    EV_B                           shift and go to state 145
    EMPTY                          shift and go to state 148

state 95

    (211) EXP_RELOP -> EXP . EXP_RELOP_A
    (213) EXP_RELOP_A -> . RELOP add_relop EXP
    (214) EXP_RELOP_A -> . EMPTY
    (216) EMPTY -> .

    RELOP           shift and go to state 150
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 216 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 216 (EMPTY -> .)
    BOOLEAN         reduce using rule 216 (EMPTY -> .)
    ID              reduce using rule 216 (EMPTY -> .)

    EXP_RELOP_A                    shift and go to state 149
    EMPTY                          shift and go to state 151

state 96

    (212) EXP_RELOP -> EMPTY .
    (129) FACTOR_A -> EMPTY .

  ! reduce/reduce conflict for AND resolved using rule 129 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for OR resolved using rule 129 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 129 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 129 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CONCATENATE resolved using rule 129 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_INTEGER resolved using rule 129 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for CTE_FLOAT resolved using rule 129 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 129 (FACTOR_A -> EMPTY .)
  ! reduce/reduce conflict for ID resolved using rule 129 (FACTOR_A -> EMPTY .)
    TIMES           reduce using rule 129 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 129 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 129 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 129 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 129 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 129 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 129 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 129 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 129 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 129 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 129 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 129 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 129 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 129 (FACTOR_A -> EMPTY .)

  ! AND             [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]
  ! OR              [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]
  ! SEMICOLON       [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]
  ! CONCATENATE     [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]
  ! CTE_INTEGER     [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]
  ! CTE_FLOAT       [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]
  ! BOOLEAN         [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]
  ! ID              [ reduce using rule 212 (EXP_RELOP -> EMPTY .) ]


state 97

    (105) EXP -> TERMINO . pop_exp EXP_A
    (106) pop_exp -> .

    PLUS            reduce using rule 106 (pop_exp -> .)
    MINS            reduce using rule 106 (pop_exp -> .)
    RELOP           reduce using rule 106 (pop_exp -> .)
    AND             reduce using rule 106 (pop_exp -> .)
    OR              reduce using rule 106 (pop_exp -> .)
    SEMICOLON       reduce using rule 106 (pop_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 106 (pop_exp -> .)
    CONCATENATE     reduce using rule 106 (pop_exp -> .)
    CTE_INTEGER     reduce using rule 106 (pop_exp -> .)
    CTE_FLOAT       reduce using rule 106 (pop_exp -> .)
    BOOLEAN         reduce using rule 106 (pop_exp -> .)
    ID              reduce using rule 106 (pop_exp -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 106 (pop_exp -> .)
    COMMA           reduce using rule 106 (pop_exp -> .)
    IF              reduce using rule 106 (pop_exp -> .)
    FOR_KEYWORD     reduce using rule 106 (pop_exp -> .)
    WHILE_KEYWORD   reduce using rule 106 (pop_exp -> .)
    PRINT_KEYWORD   reduce using rule 106 (pop_exp -> .)
    INPUT_KEYWORD   reduce using rule 106 (pop_exp -> .)
    RETURN          reduce using rule 106 (pop_exp -> .)
    CLOSE_BRACKET   reduce using rule 106 (pop_exp -> .)

    pop_exp                        shift and go to state 152

state 98

    (111) TERMINO -> FACTOR . pop_term TERMINO_A
    (112) pop_term -> .

    TIMES           reduce using rule 112 (pop_term -> .)
    DIVIDE          reduce using rule 112 (pop_term -> .)
    PLUS            reduce using rule 112 (pop_term -> .)
    MINS            reduce using rule 112 (pop_term -> .)
    RELOP           reduce using rule 112 (pop_term -> .)
    AND             reduce using rule 112 (pop_term -> .)
    OR              reduce using rule 112 (pop_term -> .)
    SEMICOLON       reduce using rule 112 (pop_term -> .)
    CLOSE_PARENTHESIS reduce using rule 112 (pop_term -> .)
    CONCATENATE     reduce using rule 112 (pop_term -> .)
    CTE_INTEGER     reduce using rule 112 (pop_term -> .)
    CTE_FLOAT       reduce using rule 112 (pop_term -> .)
    BOOLEAN         reduce using rule 112 (pop_term -> .)
    ID              reduce using rule 112 (pop_term -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 112 (pop_term -> .)
    COMMA           reduce using rule 112 (pop_term -> .)
    IF              reduce using rule 112 (pop_term -> .)
    FOR_KEYWORD     reduce using rule 112 (pop_term -> .)
    WHILE_KEYWORD   reduce using rule 112 (pop_term -> .)
    PRINT_KEYWORD   reduce using rule 112 (pop_term -> .)
    INPUT_KEYWORD   reduce using rule 112 (pop_term -> .)
    RETURN          reduce using rule 112 (pop_term -> .)
    CLOSE_BRACKET   reduce using rule 112 (pop_term -> .)

    pop_term                       shift and go to state 153

state 99

    (124) FACTOR -> FACTOR_A .

    TIMES           reduce using rule 124 (FACTOR -> FACTOR_A .)
    DIVIDE          reduce using rule 124 (FACTOR -> FACTOR_A .)
    PLUS            reduce using rule 124 (FACTOR -> FACTOR_A .)
    MINS            reduce using rule 124 (FACTOR -> FACTOR_A .)
    RELOP           reduce using rule 124 (FACTOR -> FACTOR_A .)
    AND             reduce using rule 124 (FACTOR -> FACTOR_A .)
    OR              reduce using rule 124 (FACTOR -> FACTOR_A .)
    SEMICOLON       reduce using rule 124 (FACTOR -> FACTOR_A .)
    CLOSE_PARENTHESIS reduce using rule 124 (FACTOR -> FACTOR_A .)
    CONCATENATE     reduce using rule 124 (FACTOR -> FACTOR_A .)
    CTE_INTEGER     reduce using rule 124 (FACTOR -> FACTOR_A .)
    CTE_FLOAT       reduce using rule 124 (FACTOR -> FACTOR_A .)
    BOOLEAN         reduce using rule 124 (FACTOR -> FACTOR_A .)
    ID              reduce using rule 124 (FACTOR -> FACTOR_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 124 (FACTOR -> FACTOR_A .)
    COMMA           reduce using rule 124 (FACTOR -> FACTOR_A .)
    IF              reduce using rule 124 (FACTOR -> FACTOR_A .)
    FOR_KEYWORD     reduce using rule 124 (FACTOR -> FACTOR_A .)
    WHILE_KEYWORD   reduce using rule 124 (FACTOR -> FACTOR_A .)
    PRINT_KEYWORD   reduce using rule 124 (FACTOR -> FACTOR_A .)
    INPUT_KEYWORD   reduce using rule 124 (FACTOR -> FACTOR_A .)
    RETURN          reduce using rule 124 (FACTOR -> FACTOR_A .)
    CLOSE_BRACKET   reduce using rule 124 (FACTOR -> FACTOR_A .)


state 100

    (125) FACTOR_A -> OPEN_PARENTHESIS . FACTOR_B CLOSE_PARENTHESIS
    (130) FACTOR_B -> . EXPRESIONESVARIAS FACTOR_C
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    FACTOR_B                       shift and go to state 154
    EXPRESIONESVARIAS              shift and go to state 155
    FACTOR_C                       shift and go to state 102
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    VARS_CTE                       shift and go to state 104

state 101

    (126) FACTOR_A -> PLUS . FACTOR_C
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

    FACTOR_C                       shift and go to state 156
    VARS_CTE                       shift and go to state 104

state 102

    (128) FACTOR_A -> FACTOR_C .

    TIMES           reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    DIVIDE          reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    PLUS            reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    MINS            reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    RELOP           reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    AND             reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    OR              reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    SEMICOLON       reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    CONCATENATE     reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    CTE_INTEGER     reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    CTE_FLOAT       reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    BOOLEAN         reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    ID              reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    COMMA           reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    IF              reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    FOR_KEYWORD     reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    RETURN          reduce using rule 128 (FACTOR_A -> FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 128 (FACTOR_A -> FACTOR_C .)


state 103

    (127) FACTOR_A -> MINS . FACTOR_C
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

    FACTOR_C                       shift and go to state 157
    VARS_CTE                       shift and go to state 104

state 104

    (131) FACTOR_C -> VARS_CTE .

    TIMES           reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    DIVIDE          reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    PLUS            reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    MINS            reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    RELOP           reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    AND             reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    OR              reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    SEMICOLON       reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    CLOSE_PARENTHESIS reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    CONCATENATE     reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    CTE_INTEGER     reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    CTE_FLOAT       reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    BOOLEAN         reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    ID              reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    CLOSE_SQUARE_BRACKET reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    COMMA           reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    IF              reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    FOR_KEYWORD     reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    WHILE_KEYWORD   reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    PRINT_KEYWORD   reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    INPUT_KEYWORD   reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    RETURN          reduce using rule 131 (FACTOR_C -> VARS_CTE .)
    CLOSE_BRACKET   reduce using rule 131 (FACTOR_C -> VARS_CTE .)


state 105

    (132) VARS_CTE -> CTE_INTEGER .

    TIMES           reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    DIVIDE          reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    PLUS            reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    MINS            reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    RELOP           reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    AND             reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    OR              reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    SEMICOLON       reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_PARENTHESIS reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    CONCATENATE     reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    CTE_INTEGER     reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    CTE_FLOAT       reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    BOOLEAN         reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    ID              reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_SQUARE_BRACKET reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    COMMA           reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    IF              reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    FOR_KEYWORD     reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    WHILE_KEYWORD   reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    PRINT_KEYWORD   reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    INPUT_KEYWORD   reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    RETURN          reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)
    CLOSE_BRACKET   reduce using rule 132 (VARS_CTE -> CTE_INTEGER .)


state 106

    (133) VARS_CTE -> CTE_FLOAT .

    TIMES           reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    DIVIDE          reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    MINS            reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    RELOP           reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    AND             reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    OR              reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_PARENTHESIS reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    CONCATENATE     reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    CTE_INTEGER     reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    CTE_FLOAT       reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    BOOLEAN         reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    ID              reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_SQUARE_BRACKET reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    IF              reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    FOR_KEYWORD     reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    WHILE_KEYWORD   reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    PRINT_KEYWORD   reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    INPUT_KEYWORD   reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    RETURN          reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)
    CLOSE_BRACKET   reduce using rule 133 (VARS_CTE -> CTE_FLOAT .)


state 107

    (134) VARS_CTE -> BOOLEAN .

    TIMES           reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    DIVIDE          reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    PLUS            reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    MINS            reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    RELOP           reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    AND             reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    OR              reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    SEMICOLON       reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    CLOSE_PARENTHESIS reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    CONCATENATE     reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    CTE_INTEGER     reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    CTE_FLOAT       reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    BOOLEAN         reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    ID              reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    CLOSE_SQUARE_BRACKET reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    COMMA           reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    IF              reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    FOR_KEYWORD     reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    WHILE_KEYWORD   reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    PRINT_KEYWORD   reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    INPUT_KEYWORD   reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    RETURN          reduce using rule 134 (VARS_CTE -> BOOLEAN .)
    CLOSE_BRACKET   reduce using rule 134 (VARS_CTE -> BOOLEAN .)


state 108

    (135) VARS_CTE -> ID . VARS_CTE_A
    (136) VARS_CTE_A -> . OPEN_PARENTHESIS VARS_CTE_B
    (137) VARS_CTE_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (138) VARS_CTE_A -> . EMPTY
    (216) EMPTY -> .

    OPEN_PARENTHESIS shift and go to state 159
    OPEN_SQUARE_BRACKET shift and go to state 160
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    PLUS            reduce using rule 216 (EMPTY -> .)
    MINS            reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 216 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 216 (EMPTY -> .)
    BOOLEAN         reduce using rule 216 (EMPTY -> .)
    ID              reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)

    VARS_CTE_A                     shift and go to state 158
    EMPTY                          shift and go to state 161

state 109

    (1) PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addfunction OPEN_BRACKET VARS add_count PROGRAMA_A MAIN quad_main BLOQUE CLOSE_BRACKET end_quad .)


state 110

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C . release_vars change_scope endproc
    (52) release_vars -> .

    MODULE          reduce using rule 52 (release_vars -> .)
    MAIN            reduce using rule 52 (release_vars -> .)

    release_vars                   shift and go to state 162

state 111

    (60) MODULO_C -> TIPO_P . ID add_variable_m MODULO_B MODULO_D

    ID              shift and go to state 163


state 112

    (19) VARS_C -> SEMICOLON VARS_D .

    MODULE          reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)
    MAIN            reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)
    OPEN_BRACKET    reduce using rule 19 (VARS_C -> SEMICOLON VARS_D .)


state 113

    (21) VARS_D -> CLOSE_BRACKET .

    MODULE          reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)
    MAIN            reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 21 (VARS_D -> CLOSE_BRACKET .)


state 114

    (22) VARS_D -> VARS_A .

    MODULE          reduce using rule 22 (VARS_D -> VARS_A .)
    MAIN            reduce using rule 22 (VARS_D -> VARS_A .)
    OPEN_BRACKET    reduce using rule 22 (VARS_D -> VARS_A .)


state 115

    (20) VARS_C -> COMMA VARS_B .

    MODULE          reduce using rule 20 (VARS_C -> COMMA VARS_B .)
    MAIN            reduce using rule 20 (VARS_C -> COMMA VARS_B .)
    OPEN_BRACKET    reduce using rule 20 (VARS_C -> COMMA VARS_B .)


state 116

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 . CLOSE_SQUARE_BRACKET VARS_F

    CLOSE_SQUARE_BRACKET shift and go to state 164


state 117

    (82) ASIGNACION -> ID addStackO ASIGNACION_A . ASIGNACION_C SEMICOLON quad
    (90) ASIGNACION_C -> . EQUAL add_equal EXPRESIONESVARIAS
    (91) ASIGNACION_C -> . EQUAL CTE_STRING

    EQUAL           shift and go to state 166

    ASIGNACION_C                   shift and go to state 165

state 118

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 167
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 119

    (86) ASIGNACION_A -> EMPTY .

    EQUAL           reduce using rule 86 (ASIGNACION_A -> EMPTY .)


state 120

    (78) NOMBRAR -> ID POINT NOMBRAR_A . OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 169


state 121

    (117) COLOR -> ID POINT COLOR_KEYWORD . OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 170


state 122

    (158) PGraph -> ID POINT CREATEG . OPEN_PARENTHESIS PLOT_C

    OPEN_PARENTHESIS shift and go to state 171


state 123

    (159) PPie -> ID POINT CREATEPC . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 172


state 124

    (160) PGBarras -> ID POINT CREATEGB . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 173


state 125

    (161) PGBarrasHor -> ID POINT CREATEGBH . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 174


state 126

    (162) PDona -> ID POINT CREATED . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 175


state 127

    (163) PRadar -> ID POINT CREATER . OPEN_PARENTHESIS PLOT_E

    OPEN_PARENTHESIS shift and go to state 176


state 128

    (164) PVenn -> ID POINT CREATEV . OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 177


state 129

    (165) PLOT_B -> ID POINT CREATEN . OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M

    OPEN_PARENTHESIS shift and go to state 178


state 130

    (79) NOMBRAR_A -> NAME .

    OPEN_PARENTHESIS reduce using rule 79 (NOMBRAR_A -> NAME .)


state 131

    (80) NOMBRAR_A -> NAMEX .

    OPEN_PARENTHESIS reduce using rule 80 (NOMBRAR_A -> NAMEX .)


state 132

    (81) NOMBRAR_A -> NAMEY .

    OPEN_PARENTHESIS reduce using rule 81 (NOMBRAR_A -> NAMEY .)


state 133

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS . LLAMADAMODULO_C gosub
    (74) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 179
    EXP                            shift and go to state 180
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 134

    (93) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end

    CLOSE_PARENTHESIS shift and go to state 181


state 135

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION . EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 182
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 136

    (82) ASIGNACION -> ID . addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad
    (84) addStackO -> .

    OPEN_SQUARE_BRACKET reduce using rule 84 (addStackO -> .)
    EQUAL           reduce using rule 84 (addStackO -> .)

    addStackO                      shift and go to state 83

state 137

    (102) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS . CLOSE_PARENTHESIS bool_while BLOQUE goto_while

    CLOSE_PARENTHESIS shift and go to state 183


state 138

    (187) PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .

    ID              reduce using rule 187 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    IF              reduce using rule 187 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    FOR_KEYWORD     reduce using rule 187 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    WHILE_KEYWORD   reduce using rule 187 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    PRINT_KEYWORD   reduce using rule 187 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    INPUT_KEYWORD   reduce using rule 187 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    RETURN          reduce using rule 187 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)
    CLOSE_BRACKET   reduce using rule 187 (PRINT -> PRINT_KEYWORD OPEN_PARENTHESIS PRINT_A .)


state 139

    (188) PRINT_A -> PRINT_B . CLOSE_PARENTHESIS print_quad SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 184


state 140

    (189) PRINT_B -> CTE_STRING . add_string PRINT_C
    (192) add_string -> .

    CONCATENATE     reduce using rule 192 (add_string -> .)
    CLOSE_PARENTHESIS reduce using rule 192 (add_string -> .)

    add_string                     shift and go to state 185

state 141

    (190) PRINT_B -> EXPRESIONESVARIAS . add_temp PRINT_C
    (191) add_temp -> .

    CONCATENATE     reduce using rule 191 (add_temp -> .)
    CLOSE_PARENTHESIS reduce using rule 191 (add_temp -> .)

    add_temp                       shift and go to state 186

state 142

    (144) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID . add_inputid INPUT_A SEMICOLON quad_input
    (145) add_inputid -> .

    OPEN_SQUARE_BRACKET reduce using rule 145 (add_inputid -> .)
    SEMICOLON       reduce using rule 145 (add_inputid -> .)

    add_inputid                    shift and go to state 187

state 143

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS return_quad . SEMICOLON

    SEMICOLON       shift and go to state 188


state 144

    (204) EXPRESIONESVARIAS -> NOT EV_C .

    SEMICOLON       reduce using rule 204 (EXPRESIONESVARIAS -> NOT EV_C .)
    CLOSE_PARENTHESIS reduce using rule 204 (EXPRESIONESVARIAS -> NOT EV_C .)
    CONCATENATE     reduce using rule 204 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_INTEGER     reduce using rule 204 (EXPRESIONESVARIAS -> NOT EV_C .)
    CTE_FLOAT       reduce using rule 204 (EXPRESIONESVARIAS -> NOT EV_C .)
    BOOLEAN         reduce using rule 204 (EXPRESIONESVARIAS -> NOT EV_C .)
    ID              reduce using rule 204 (EXPRESIONESVARIAS -> NOT EV_C .)


state 145

    (206) EV_C -> EXP_RELOP EV_B .

    SEMICOLON       reduce using rule 206 (EV_C -> EXP_RELOP EV_B .)
    CLOSE_PARENTHESIS reduce using rule 206 (EV_C -> EXP_RELOP EV_B .)
    CONCATENATE     reduce using rule 206 (EV_C -> EXP_RELOP EV_B .)
    CTE_INTEGER     reduce using rule 206 (EV_C -> EXP_RELOP EV_B .)
    CTE_FLOAT       reduce using rule 206 (EV_C -> EXP_RELOP EV_B .)
    BOOLEAN         reduce using rule 206 (EV_C -> EXP_RELOP EV_B .)
    ID              reduce using rule 206 (EV_C -> EXP_RELOP EV_B .)


state 146

    (207) EV_B -> AND . add_ev EV_C
    (210) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 210 (add_ev -> .)
    PLUS            reduce using rule 210 (add_ev -> .)
    MINS            reduce using rule 210 (add_ev -> .)
    CTE_INTEGER     reduce using rule 210 (add_ev -> .)
    CTE_FLOAT       reduce using rule 210 (add_ev -> .)
    BOOLEAN         reduce using rule 210 (add_ev -> .)
    ID              reduce using rule 210 (add_ev -> .)
    AND             reduce using rule 210 (add_ev -> .)
    OR              reduce using rule 210 (add_ev -> .)
    RELOP           reduce using rule 210 (add_ev -> .)
    TIMES           reduce using rule 210 (add_ev -> .)
    DIVIDE          reduce using rule 210 (add_ev -> .)
    SEMICOLON       reduce using rule 210 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 210 (add_ev -> .)
    CONCATENATE     reduce using rule 210 (add_ev -> .)

    add_ev                         shift and go to state 189

state 147

    (208) EV_B -> OR . add_ev EV_C
    (210) add_ev -> .

    OPEN_PARENTHESIS reduce using rule 210 (add_ev -> .)
    PLUS            reduce using rule 210 (add_ev -> .)
    MINS            reduce using rule 210 (add_ev -> .)
    CTE_INTEGER     reduce using rule 210 (add_ev -> .)
    CTE_FLOAT       reduce using rule 210 (add_ev -> .)
    BOOLEAN         reduce using rule 210 (add_ev -> .)
    ID              reduce using rule 210 (add_ev -> .)
    AND             reduce using rule 210 (add_ev -> .)
    OR              reduce using rule 210 (add_ev -> .)
    RELOP           reduce using rule 210 (add_ev -> .)
    TIMES           reduce using rule 210 (add_ev -> .)
    DIVIDE          reduce using rule 210 (add_ev -> .)
    SEMICOLON       reduce using rule 210 (add_ev -> .)
    CLOSE_PARENTHESIS reduce using rule 210 (add_ev -> .)
    CONCATENATE     reduce using rule 210 (add_ev -> .)

    add_ev                         shift and go to state 190

state 148

    (209) EV_B -> EMPTY .

    SEMICOLON       reduce using rule 209 (EV_B -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 209 (EV_B -> EMPTY .)
    CONCATENATE     reduce using rule 209 (EV_B -> EMPTY .)
    CTE_INTEGER     reduce using rule 209 (EV_B -> EMPTY .)
    CTE_FLOAT       reduce using rule 209 (EV_B -> EMPTY .)
    BOOLEAN         reduce using rule 209 (EV_B -> EMPTY .)
    ID              reduce using rule 209 (EV_B -> EMPTY .)


state 149

    (211) EXP_RELOP -> EXP EXP_RELOP_A .

    AND             reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)
    OR              reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)
    SEMICOLON       reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CLOSE_PARENTHESIS reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CONCATENATE     reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_INTEGER     reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)
    CTE_FLOAT       reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)
    BOOLEAN         reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)
    ID              reduce using rule 211 (EXP_RELOP -> EXP EXP_RELOP_A .)


state 150

    (213) EXP_RELOP_A -> RELOP . add_relop EXP
    (215) add_relop -> .

    OPEN_PARENTHESIS reduce using rule 215 (add_relop -> .)
    PLUS            reduce using rule 215 (add_relop -> .)
    MINS            reduce using rule 215 (add_relop -> .)
    CTE_INTEGER     reduce using rule 215 (add_relop -> .)
    CTE_FLOAT       reduce using rule 215 (add_relop -> .)
    BOOLEAN         reduce using rule 215 (add_relop -> .)
    ID              reduce using rule 215 (add_relop -> .)
    TIMES           reduce using rule 215 (add_relop -> .)
    DIVIDE          reduce using rule 215 (add_relop -> .)
    AND             reduce using rule 215 (add_relop -> .)
    OR              reduce using rule 215 (add_relop -> .)
    SEMICOLON       reduce using rule 215 (add_relop -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (add_relop -> .)
    CONCATENATE     reduce using rule 215 (add_relop -> .)

    add_relop                      shift and go to state 191

state 151

    (214) EXP_RELOP_A -> EMPTY .

    AND             reduce using rule 214 (EXP_RELOP_A -> EMPTY .)
    OR              reduce using rule 214 (EXP_RELOP_A -> EMPTY .)
    SEMICOLON       reduce using rule 214 (EXP_RELOP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 214 (EXP_RELOP_A -> EMPTY .)
    CONCATENATE     reduce using rule 214 (EXP_RELOP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 214 (EXP_RELOP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 214 (EXP_RELOP_A -> EMPTY .)
    BOOLEAN         reduce using rule 214 (EXP_RELOP_A -> EMPTY .)
    ID              reduce using rule 214 (EXP_RELOP_A -> EMPTY .)


state 152

    (105) EXP -> TERMINO pop_exp . EXP_A
    (107) EXP_A -> . PLUS append_operator EXP
    (108) EXP_A -> . MINS append_operator EXP
    (109) EXP_A -> . EMPTY
    (216) EMPTY -> .

    PLUS            shift and go to state 193
    MINS            shift and go to state 194
    RELOP           reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 216 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 216 (EMPTY -> .)
    BOOLEAN         reduce using rule 216 (EMPTY -> .)
    ID              reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)

    EXP_A                          shift and go to state 192
    EMPTY                          shift and go to state 195

state 153

    (111) TERMINO -> FACTOR pop_term . TERMINO_A
    (113) TERMINO_A -> . TIMES add_operator TERMINO
    (114) TERMINO_A -> . DIVIDE add_operator TERMINO
    (115) TERMINO_A -> . EMPTY
    (216) EMPTY -> .

    TIMES           shift and go to state 197
    DIVIDE          shift and go to state 198
    PLUS            reduce using rule 216 (EMPTY -> .)
    MINS            reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 216 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 216 (EMPTY -> .)
    BOOLEAN         reduce using rule 216 (EMPTY -> .)
    ID              reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)

    TERMINO_A                      shift and go to state 196
    EMPTY                          shift and go to state 199

state 154

    (125) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 200


state 155

    (130) FACTOR_B -> EXPRESIONESVARIAS . FACTOR_C
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

    FACTOR_C                       shift and go to state 201
    VARS_CTE                       shift and go to state 104

state 156

    (126) FACTOR_A -> PLUS FACTOR_C .

    TIMES           reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    DIVIDE          reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    PLUS            reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    MINS            reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    RELOP           reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    AND             reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    OR              reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    SEMICOLON       reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    CONCATENATE     reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_INTEGER     reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    CTE_FLOAT       reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    BOOLEAN         reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    ID              reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    COMMA           reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    IF              reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    RETURN          reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 126 (FACTOR_A -> PLUS FACTOR_C .)


state 157

    (127) FACTOR_A -> MINS FACTOR_C .

    TIMES           reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    DIVIDE          reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    PLUS            reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    MINS            reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    RELOP           reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    AND             reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    OR              reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    SEMICOLON       reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_PARENTHESIS reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    CONCATENATE     reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    CTE_INTEGER     reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    CTE_FLOAT       reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    BOOLEAN         reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    ID              reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_SQUARE_BRACKET reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    COMMA           reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    IF              reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    FOR_KEYWORD     reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    WHILE_KEYWORD   reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    PRINT_KEYWORD   reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    INPUT_KEYWORD   reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    RETURN          reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)
    CLOSE_BRACKET   reduce using rule 127 (FACTOR_A -> MINS FACTOR_C .)


state 158

    (135) VARS_CTE -> ID VARS_CTE_A .

    TIMES           reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    DIVIDE          reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    PLUS            reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    MINS            reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    RELOP           reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    AND             reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    OR              reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    SEMICOLON       reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_PARENTHESIS reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    CONCATENATE     reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_INTEGER     reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    CTE_FLOAT       reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    BOOLEAN         reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    ID              reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    COMMA           reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    IF              reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    FOR_KEYWORD     reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    WHILE_KEYWORD   reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    PRINT_KEYWORD   reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    INPUT_KEYWORD   reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    RETURN          reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)
    CLOSE_BRACKET   reduce using rule 135 (VARS_CTE -> ID VARS_CTE_A .)


state 159

    (136) VARS_CTE_A -> OPEN_PARENTHESIS . VARS_CTE_B
    (139) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 202
    EXP                            shift and go to state 203
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 160

    (137) VARS_CTE_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET VARS_CTE_D
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 204
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 161

    (138) VARS_CTE_A -> EMPTY .

    TIMES           reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    DIVIDE          reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    PLUS            reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    MINS            reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    RELOP           reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    AND             reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    OR              reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    SEMICOLON       reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    CONCATENATE     reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    BOOLEAN         reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    ID              reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    COMMA           reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    IF              reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    RETURN          reduce using rule 138 (VARS_CTE_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 138 (VARS_CTE_A -> EMPTY .)


state 162

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars . change_scope endproc
    (54) change_scope -> .

    MODULE          reduce using rule 54 (change_scope -> .)
    MAIN            reduce using rule 54 (change_scope -> .)

    change_scope                   shift and go to state 205

state 163

    (60) MODULO_C -> TIPO_P ID . add_variable_m MODULO_B MODULO_D
    (61) add_variable_m -> .

    COMMA           reduce using rule 61 (add_variable_m -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (add_variable_m -> .)
    MODULE          reduce using rule 61 (add_variable_m -> .)
    MAIN            reduce using rule 61 (add_variable_m -> .)

    add_variable_m                 shift and go to state 206

state 164

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET . VARS_F
    (16) VARS_F -> . OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET
    (17) VARS_F -> . EMPTY
    (216) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 207
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)

    VARS_F                         shift and go to state 208
    EMPTY                          shift and go to state 209

state 165

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C . SEMICOLON quad

    SEMICOLON       shift and go to state 210


state 166

    (90) ASIGNACION_C -> EQUAL . add_equal EXPRESIONESVARIAS
    (91) ASIGNACION_C -> EQUAL . CTE_STRING
    (92) add_equal -> .

    CTE_STRING      shift and go to state 212
    NOT             reduce using rule 92 (add_equal -> .)
    OPEN_PARENTHESIS reduce using rule 92 (add_equal -> .)
    PLUS            reduce using rule 92 (add_equal -> .)
    MINS            reduce using rule 92 (add_equal -> .)
    CTE_INTEGER     reduce using rule 92 (add_equal -> .)
    CTE_FLOAT       reduce using rule 92 (add_equal -> .)
    BOOLEAN         reduce using rule 92 (add_equal -> .)
    ID              reduce using rule 92 (add_equal -> .)
    AND             reduce using rule 92 (add_equal -> .)
    OR              reduce using rule 92 (add_equal -> .)
    RELOP           reduce using rule 92 (add_equal -> .)
    TIMES           reduce using rule 92 (add_equal -> .)
    DIVIDE          reduce using rule 92 (add_equal -> .)
    SEMICOLON       reduce using rule 92 (add_equal -> .)

    add_equal                      shift and go to state 211

state 167

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B

    CLOSE_SQUARE_BRACKET shift and go to state 213


state 168

    (129) FACTOR_A -> EMPTY .

    TIMES           reduce using rule 129 (FACTOR_A -> EMPTY .)
    DIVIDE          reduce using rule 129 (FACTOR_A -> EMPTY .)
    PLUS            reduce using rule 129 (FACTOR_A -> EMPTY .)
    MINS            reduce using rule 129 (FACTOR_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 129 (FACTOR_A -> EMPTY .)
    COMMA           reduce using rule 129 (FACTOR_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 129 (FACTOR_A -> EMPTY .)
    ID              reduce using rule 129 (FACTOR_A -> EMPTY .)
    IF              reduce using rule 129 (FACTOR_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 129 (FACTOR_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 129 (FACTOR_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 129 (FACTOR_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 129 (FACTOR_A -> EMPTY .)
    RETURN          reduce using rule 129 (FACTOR_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 129 (FACTOR_A -> EMPTY .)
    AND             reduce using rule 129 (FACTOR_A -> EMPTY .)
    OR              reduce using rule 129 (FACTOR_A -> EMPTY .)
    SEMICOLON       reduce using rule 129 (FACTOR_A -> EMPTY .)
    CONCATENATE     reduce using rule 129 (FACTOR_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 129 (FACTOR_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 129 (FACTOR_A -> EMPTY .)
    BOOLEAN         reduce using rule 129 (FACTOR_A -> EMPTY .)
    RELOP           reduce using rule 129 (FACTOR_A -> EMPTY .)


state 169

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 214


state 170

    (117) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS . COLOR_A CLOSE_PARENTHESIS SEMICOLON
    (118) COLOR_A -> . COLOR_RED
    (119) COLOR_A -> . COLOR_BLACK
    (120) COLOR_A -> . COLOR_BLUE
    (121) COLOR_A -> . COLOR_PURPLE
    (122) COLOR_A -> . COLOR_GREEN
    (123) COLOR_A -> . COLOR_ORANGE

    COLOR_RED       shift and go to state 216
    COLOR_BLACK     shift and go to state 217
    COLOR_BLUE      shift and go to state 218
    COLOR_PURPLE    shift and go to state 219
    COLOR_GREEN     shift and go to state 220
    COLOR_ORANGE    shift and go to state 221

    COLOR_A                        shift and go to state 215

state 171

    (158) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS . PLOT_C
    (166) PLOT_C -> . PLOT_I CLOSE_PARENTHESIS SEMICOLON
    (167) PLOT_I -> . CTE_INTEGER PLOT_D
    (168) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 224
    CTE_FLOAT       shift and go to state 225

    PLOT_C                         shift and go to state 222
    PLOT_I                         shift and go to state 223

state 172

    (159) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS . PLOT_E
    (171) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (172) PLOT_F -> . CTE_INTEGER PLOT_J
    (173) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 226
    PLOT_F                         shift and go to state 227

state 173

    (160) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS . PLOT_E
    (171) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (172) PLOT_F -> . CTE_INTEGER PLOT_J
    (173) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 230
    PLOT_F                         shift and go to state 227

state 174

    (161) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS . PLOT_E
    (171) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (172) PLOT_F -> . CTE_INTEGER PLOT_J
    (173) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 231
    PLOT_F                         shift and go to state 227

state 175

    (162) PDona -> ID POINT CREATED OPEN_PARENTHESIS . PLOT_E
    (171) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (172) PLOT_F -> . CTE_INTEGER PLOT_J
    (173) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 232
    PLOT_F                         shift and go to state 227

state 176

    (163) PRadar -> ID POINT CREATER OPEN_PARENTHESIS . PLOT_E
    (171) PLOT_E -> . PLOT_F SEMICOLON PLOT_G
    (172) PLOT_F -> . CTE_INTEGER PLOT_J
    (173) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_E                         shift and go to state 233
    PLOT_F                         shift and go to state 227

state 177

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS . CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 234


state 178

    (165) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS . OPEN_SQUARE_BRACKET PLOT_M

    OPEN_SQUARE_BRACKET shift and go to state 235


state 179

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C . gosub
    (69) gosub -> .

    ID              reduce using rule 69 (gosub -> .)
    IF              reduce using rule 69 (gosub -> .)
    FOR_KEYWORD     reduce using rule 69 (gosub -> .)
    WHILE_KEYWORD   reduce using rule 69 (gosub -> .)
    PRINT_KEYWORD   reduce using rule 69 (gosub -> .)
    INPUT_KEYWORD   reduce using rule 69 (gosub -> .)
    RETURN          reduce using rule 69 (gosub -> .)
    CLOSE_BRACKET   reduce using rule 69 (gosub -> .)

    gosub                          shift and go to state 236

state 180

    (74) LLAMADAMODULO_C -> EXP . check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (75) check_types -> .

    COMMA           reduce using rule 75 (check_types -> .)
    CLOSE_PARENTHESIS reduce using rule 75 (check_types -> .)
    ID              reduce using rule 75 (check_types -> .)
    IF              reduce using rule 75 (check_types -> .)
    FOR_KEYWORD     reduce using rule 75 (check_types -> .)
    WHILE_KEYWORD   reduce using rule 75 (check_types -> .)
    PRINT_KEYWORD   reduce using rule 75 (check_types -> .)
    INPUT_KEYWORD   reduce using rule 75 (check_types -> .)
    RETURN          reduce using rule 75 (check_types -> .)
    CLOSE_BRACKET   reduce using rule 75 (check_types -> .)

    check_types                    shift and go to state 237

state 181

    (93) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . check_bool BLOQUE CONDICION_A fill_end
    (95) check_bool -> .

    OPEN_BRACKET    reduce using rule 95 (check_bool -> .)

    check_bool                     shift and go to state 238

state 182

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS . bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (101) bool_for -> .

    SEMICOLON       reduce using rule 101 (bool_for -> .)

    bool_for                       shift and go to state 239

state 183

    (102) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS . bool_while BLOQUE goto_while
    (104) bool_while -> .

    OPEN_BRACKET    reduce using rule 104 (bool_while -> .)

    bool_while                     shift and go to state 240

state 184

    (188) PRINT_A -> PRINT_B CLOSE_PARENTHESIS . print_quad SEMICOLON
    (193) print_quad -> .

    SEMICOLON       reduce using rule 193 (print_quad -> .)

    print_quad                     shift and go to state 241

state 185

    (189) PRINT_B -> CTE_STRING add_string . PRINT_C
    (196) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (197) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (198) PRINT_C -> . EMPTY
    (216) EMPTY -> .

    CONCATENATE     shift and go to state 243
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)

    PRINT_C                        shift and go to state 242
    EMPTY                          shift and go to state 244

state 186

    (190) PRINT_B -> EXPRESIONESVARIAS add_temp . PRINT_C
    (196) PRINT_C -> . CONCATENATE EXPRESIONESVARIAS add_con PRINT_D
    (197) PRINT_C -> . CONCATENATE CTE_STRING add_exp PRINT_D
    (198) PRINT_C -> . EMPTY
    (216) EMPTY -> .

    CONCATENATE     shift and go to state 243
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)

    PRINT_C                        shift and go to state 245
    EMPTY                          shift and go to state 244

state 187

    (144) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid . INPUT_A SEMICOLON quad_input
    (147) INPUT_A -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B
    (148) INPUT_A -> . EMPTY
    (216) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 247
    SEMICOLON       reduce using rule 216 (EMPTY -> .)

    INPUT_A                        shift and go to state 246
    EMPTY                          shift and go to state 248

state 188

    (50) RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .

    ID              reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    IF              reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    RETURN          reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 50 (RETURNOP -> RETURN EXPRESIONESVARIAS return_quad SEMICOLON .)


state 189

    (207) EV_B -> AND add_ev . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EV_C                           shift and go to state 249
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 190

    (208) EV_B -> OR add_ev . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]
  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EV_C                           shift and go to state 250
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 191

    (213) EXP_RELOP_A -> RELOP add_relop . EXP
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 251
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 192

    (105) EXP -> TERMINO pop_exp EXP_A .

    RELOP           reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    AND             reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    OR              reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    SEMICOLON       reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_PARENTHESIS reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    CONCATENATE     reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    CTE_INTEGER     reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    CTE_FLOAT       reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    BOOLEAN         reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    ID              reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    COMMA           reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    IF              reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    FOR_KEYWORD     reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    WHILE_KEYWORD   reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    PRINT_KEYWORD   reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    INPUT_KEYWORD   reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    RETURN          reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)
    CLOSE_BRACKET   reduce using rule 105 (EXP -> TERMINO pop_exp EXP_A .)


state 193

    (107) EXP_A -> PLUS . append_operator EXP
    (110) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 110 (append_operator -> .)
    PLUS            reduce using rule 110 (append_operator -> .)
    MINS            reduce using rule 110 (append_operator -> .)
    CTE_INTEGER     reduce using rule 110 (append_operator -> .)
    CTE_FLOAT       reduce using rule 110 (append_operator -> .)
    BOOLEAN         reduce using rule 110 (append_operator -> .)
    ID              reduce using rule 110 (append_operator -> .)
    TIMES           reduce using rule 110 (append_operator -> .)
    DIVIDE          reduce using rule 110 (append_operator -> .)
    RELOP           reduce using rule 110 (append_operator -> .)
    AND             reduce using rule 110 (append_operator -> .)
    OR              reduce using rule 110 (append_operator -> .)
    SEMICOLON       reduce using rule 110 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 110 (append_operator -> .)
    CONCATENATE     reduce using rule 110 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 110 (append_operator -> .)
    COMMA           reduce using rule 110 (append_operator -> .)
    IF              reduce using rule 110 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 110 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 110 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 110 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 110 (append_operator -> .)
    RETURN          reduce using rule 110 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 110 (append_operator -> .)

    append_operator                shift and go to state 252

state 194

    (108) EXP_A -> MINS . append_operator EXP
    (110) append_operator -> .

    OPEN_PARENTHESIS reduce using rule 110 (append_operator -> .)
    PLUS            reduce using rule 110 (append_operator -> .)
    MINS            reduce using rule 110 (append_operator -> .)
    CTE_INTEGER     reduce using rule 110 (append_operator -> .)
    CTE_FLOAT       reduce using rule 110 (append_operator -> .)
    BOOLEAN         reduce using rule 110 (append_operator -> .)
    ID              reduce using rule 110 (append_operator -> .)
    TIMES           reduce using rule 110 (append_operator -> .)
    DIVIDE          reduce using rule 110 (append_operator -> .)
    RELOP           reduce using rule 110 (append_operator -> .)
    AND             reduce using rule 110 (append_operator -> .)
    OR              reduce using rule 110 (append_operator -> .)
    SEMICOLON       reduce using rule 110 (append_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 110 (append_operator -> .)
    CONCATENATE     reduce using rule 110 (append_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 110 (append_operator -> .)
    COMMA           reduce using rule 110 (append_operator -> .)
    IF              reduce using rule 110 (append_operator -> .)
    FOR_KEYWORD     reduce using rule 110 (append_operator -> .)
    WHILE_KEYWORD   reduce using rule 110 (append_operator -> .)
    PRINT_KEYWORD   reduce using rule 110 (append_operator -> .)
    INPUT_KEYWORD   reduce using rule 110 (append_operator -> .)
    RETURN          reduce using rule 110 (append_operator -> .)
    CLOSE_BRACKET   reduce using rule 110 (append_operator -> .)

    append_operator                shift and go to state 253

state 195

    (109) EXP_A -> EMPTY .

    RELOP           reduce using rule 109 (EXP_A -> EMPTY .)
    AND             reduce using rule 109 (EXP_A -> EMPTY .)
    OR              reduce using rule 109 (EXP_A -> EMPTY .)
    SEMICOLON       reduce using rule 109 (EXP_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 109 (EXP_A -> EMPTY .)
    CONCATENATE     reduce using rule 109 (EXP_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 109 (EXP_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 109 (EXP_A -> EMPTY .)
    BOOLEAN         reduce using rule 109 (EXP_A -> EMPTY .)
    ID              reduce using rule 109 (EXP_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 109 (EXP_A -> EMPTY .)
    COMMA           reduce using rule 109 (EXP_A -> EMPTY .)
    IF              reduce using rule 109 (EXP_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 109 (EXP_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 109 (EXP_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 109 (EXP_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 109 (EXP_A -> EMPTY .)
    RETURN          reduce using rule 109 (EXP_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 109 (EXP_A -> EMPTY .)


state 196

    (111) TERMINO -> FACTOR pop_term TERMINO_A .

    PLUS            reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    MINS            reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RELOP           reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    AND             reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    OR              reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    SEMICOLON       reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_PARENTHESIS reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CONCATENATE     reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CTE_INTEGER     reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CTE_FLOAT       reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    BOOLEAN         reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    ID              reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_SQUARE_BRACKET reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    COMMA           reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    IF              reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    FOR_KEYWORD     reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    WHILE_KEYWORD   reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    PRINT_KEYWORD   reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    INPUT_KEYWORD   reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    RETURN          reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)
    CLOSE_BRACKET   reduce using rule 111 (TERMINO -> FACTOR pop_term TERMINO_A .)


state 197

    (113) TERMINO_A -> TIMES . add_operator TERMINO
    (116) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 116 (add_operator -> .)
    PLUS            reduce using rule 116 (add_operator -> .)
    MINS            reduce using rule 116 (add_operator -> .)
    CTE_INTEGER     reduce using rule 116 (add_operator -> .)
    CTE_FLOAT       reduce using rule 116 (add_operator -> .)
    BOOLEAN         reduce using rule 116 (add_operator -> .)
    ID              reduce using rule 116 (add_operator -> .)
    TIMES           reduce using rule 116 (add_operator -> .)
    DIVIDE          reduce using rule 116 (add_operator -> .)
    RELOP           reduce using rule 116 (add_operator -> .)
    AND             reduce using rule 116 (add_operator -> .)
    OR              reduce using rule 116 (add_operator -> .)
    SEMICOLON       reduce using rule 116 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 116 (add_operator -> .)
    CONCATENATE     reduce using rule 116 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 116 (add_operator -> .)
    COMMA           reduce using rule 116 (add_operator -> .)
    IF              reduce using rule 116 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 116 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 116 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 116 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 116 (add_operator -> .)
    RETURN          reduce using rule 116 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 116 (add_operator -> .)

    add_operator                   shift and go to state 254

state 198

    (114) TERMINO_A -> DIVIDE . add_operator TERMINO
    (116) add_operator -> .

    OPEN_PARENTHESIS reduce using rule 116 (add_operator -> .)
    PLUS            reduce using rule 116 (add_operator -> .)
    MINS            reduce using rule 116 (add_operator -> .)
    CTE_INTEGER     reduce using rule 116 (add_operator -> .)
    CTE_FLOAT       reduce using rule 116 (add_operator -> .)
    BOOLEAN         reduce using rule 116 (add_operator -> .)
    ID              reduce using rule 116 (add_operator -> .)
    TIMES           reduce using rule 116 (add_operator -> .)
    DIVIDE          reduce using rule 116 (add_operator -> .)
    RELOP           reduce using rule 116 (add_operator -> .)
    AND             reduce using rule 116 (add_operator -> .)
    OR              reduce using rule 116 (add_operator -> .)
    SEMICOLON       reduce using rule 116 (add_operator -> .)
    CLOSE_PARENTHESIS reduce using rule 116 (add_operator -> .)
    CONCATENATE     reduce using rule 116 (add_operator -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 116 (add_operator -> .)
    COMMA           reduce using rule 116 (add_operator -> .)
    IF              reduce using rule 116 (add_operator -> .)
    FOR_KEYWORD     reduce using rule 116 (add_operator -> .)
    WHILE_KEYWORD   reduce using rule 116 (add_operator -> .)
    PRINT_KEYWORD   reduce using rule 116 (add_operator -> .)
    INPUT_KEYWORD   reduce using rule 116 (add_operator -> .)
    RETURN          reduce using rule 116 (add_operator -> .)
    CLOSE_BRACKET   reduce using rule 116 (add_operator -> .)

    add_operator                   shift and go to state 255

state 199

    (115) TERMINO_A -> EMPTY .

    PLUS            reduce using rule 115 (TERMINO_A -> EMPTY .)
    MINS            reduce using rule 115 (TERMINO_A -> EMPTY .)
    RELOP           reduce using rule 115 (TERMINO_A -> EMPTY .)
    AND             reduce using rule 115 (TERMINO_A -> EMPTY .)
    OR              reduce using rule 115 (TERMINO_A -> EMPTY .)
    SEMICOLON       reduce using rule 115 (TERMINO_A -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 115 (TERMINO_A -> EMPTY .)
    CONCATENATE     reduce using rule 115 (TERMINO_A -> EMPTY .)
    CTE_INTEGER     reduce using rule 115 (TERMINO_A -> EMPTY .)
    CTE_FLOAT       reduce using rule 115 (TERMINO_A -> EMPTY .)
    BOOLEAN         reduce using rule 115 (TERMINO_A -> EMPTY .)
    ID              reduce using rule 115 (TERMINO_A -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 115 (TERMINO_A -> EMPTY .)
    COMMA           reduce using rule 115 (TERMINO_A -> EMPTY .)
    IF              reduce using rule 115 (TERMINO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 115 (TERMINO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 115 (TERMINO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 115 (TERMINO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 115 (TERMINO_A -> EMPTY .)
    RETURN          reduce using rule 115 (TERMINO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 115 (TERMINO_A -> EMPTY .)


state 200

    (125) FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .

    TIMES           reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    MINS            reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    AND             reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    OR              reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CONCATENATE     reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    ID              reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    IF              reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 125 (FACTOR_A -> OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS .)


state 201

    (130) FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .

    CLOSE_PARENTHESIS reduce using rule 130 (FACTOR_B -> EXPRESIONESVARIAS FACTOR_C .)


state 202

    (136) VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .

    TIMES           reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    DIVIDE          reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PLUS            reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    MINS            reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    RELOP           reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    AND             reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    OR              reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    SEMICOLON       reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CONCATENATE     reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_INTEGER     reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CTE_FLOAT       reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    BOOLEAN         reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    ID              reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_SQUARE_BRACKET reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    COMMA           reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    IF              reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    FOR_KEYWORD     reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    WHILE_KEYWORD   reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    PRINT_KEYWORD   reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    INPUT_KEYWORD   reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    RETURN          reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)
    CLOSE_BRACKET   reduce using rule 136 (VARS_CTE_A -> OPEN_PARENTHESIS VARS_CTE_B .)


state 203

    (139) VARS_CTE_B -> EXP . VARS_CTE_C CLOSE_PARENTHESIS
    (140) VARS_CTE_C -> . COMMA VARS_CTE_B
    (141) VARS_CTE_C -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 257
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)

    VARS_CTE_C                     shift and go to state 256
    EMPTY                          shift and go to state 258

state 204

    (137) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET VARS_CTE_D

    CLOSE_SQUARE_BRACKET shift and go to state 259


state 205

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope . endproc
    (53) endproc -> .

    MODULE          reduce using rule 53 (endproc -> .)
    MAIN            reduce using rule 53 (endproc -> .)

    endproc                        shift and go to state 260

state 206

    (60) MODULO_C -> TIPO_P ID add_variable_m . MODULO_B MODULO_D
    (58) MODULO_B -> . COMMA MODULO_C
    (59) MODULO_B -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 262
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    MODULE          reduce using rule 216 (EMPTY -> .)
    MAIN            reduce using rule 216 (EMPTY -> .)

    MODULO_B                       shift and go to state 261
    EMPTY                          shift and go to state 263

state 207

    (16) VARS_F -> OPEN_SQUARE_BRACKET . CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET

    CTE_INTEGER     shift and go to state 264


state 208

    (13) VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .

    SEMICOLON       reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .)
    COMMA           reduce using rule 13 (VARS_E -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s1 CLOSE_SQUARE_BRACKET VARS_F .)


state 209

    (17) VARS_F -> EMPTY .

    SEMICOLON       reduce using rule 17 (VARS_F -> EMPTY .)
    COMMA           reduce using rule 17 (VARS_F -> EMPTY .)


state 210

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON . quad
    (83) quad -> .

    ID              reduce using rule 83 (quad -> .)
    IF              reduce using rule 83 (quad -> .)
    FOR_KEYWORD     reduce using rule 83 (quad -> .)
    WHILE_KEYWORD   reduce using rule 83 (quad -> .)
    PRINT_KEYWORD   reduce using rule 83 (quad -> .)
    INPUT_KEYWORD   reduce using rule 83 (quad -> .)
    RETURN          reduce using rule 83 (quad -> .)
    CLOSE_BRACKET   reduce using rule 83 (quad -> .)
    NOT             reduce using rule 83 (quad -> .)
    OPEN_PARENTHESIS reduce using rule 83 (quad -> .)
    PLUS            reduce using rule 83 (quad -> .)
    MINS            reduce using rule 83 (quad -> .)
    CTE_INTEGER     reduce using rule 83 (quad -> .)
    CTE_FLOAT       reduce using rule 83 (quad -> .)
    BOOLEAN         reduce using rule 83 (quad -> .)
    SEMICOLON       reduce using rule 83 (quad -> .)
    AND             reduce using rule 83 (quad -> .)
    OR              reduce using rule 83 (quad -> .)
    RELOP           reduce using rule 83 (quad -> .)
    TIMES           reduce using rule 83 (quad -> .)
    DIVIDE          reduce using rule 83 (quad -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (quad -> .)

    quad                           shift and go to state 265

state 211

    (90) ASIGNACION_C -> EQUAL add_equal . EXPRESIONESVARIAS
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 266
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 212

    (91) ASIGNACION_C -> EQUAL CTE_STRING .

    SEMICOLON       reduce using rule 91 (ASIGNACION_C -> EQUAL CTE_STRING .)


state 213

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . ver_arr ASIGNACION_B
    (87) ver_arr -> .

    OPEN_SQUARE_BRACKET reduce using rule 87 (ver_arr -> .)
    EQUAL           reduce using rule 87 (ver_arr -> .)

    ver_arr                        shift and go to state 267

state 214

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 268


state 215

    (117) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 269


state 216

    (118) COLOR_A -> COLOR_RED .

    CLOSE_PARENTHESIS reduce using rule 118 (COLOR_A -> COLOR_RED .)


state 217

    (119) COLOR_A -> COLOR_BLACK .

    CLOSE_PARENTHESIS reduce using rule 119 (COLOR_A -> COLOR_BLACK .)


state 218

    (120) COLOR_A -> COLOR_BLUE .

    CLOSE_PARENTHESIS reduce using rule 120 (COLOR_A -> COLOR_BLUE .)


state 219

    (121) COLOR_A -> COLOR_PURPLE .

    CLOSE_PARENTHESIS reduce using rule 121 (COLOR_A -> COLOR_PURPLE .)


state 220

    (122) COLOR_A -> COLOR_GREEN .

    CLOSE_PARENTHESIS reduce using rule 122 (COLOR_A -> COLOR_GREEN .)


state 221

    (123) COLOR_A -> COLOR_ORANGE .

    CLOSE_PARENTHESIS reduce using rule 123 (COLOR_A -> COLOR_ORANGE .)


state 222

    (158) PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .

    ID              reduce using rule 158 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    IF              reduce using rule 158 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    FOR_KEYWORD     reduce using rule 158 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    WHILE_KEYWORD   reduce using rule 158 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    PRINT_KEYWORD   reduce using rule 158 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    INPUT_KEYWORD   reduce using rule 158 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    RETURN          reduce using rule 158 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)
    CLOSE_BRACKET   reduce using rule 158 (PGraph -> ID POINT CREATEG OPEN_PARENTHESIS PLOT_C .)


state 223

    (166) PLOT_C -> PLOT_I . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 270


state 224

    (167) PLOT_I -> CTE_INTEGER . PLOT_D
    (169) PLOT_D -> . COMMA PLOT_I
    (170) PLOT_D -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 272
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)

    PLOT_D                         shift and go to state 271
    EMPTY                          shift and go to state 273

state 225

    (168) PLOT_I -> CTE_FLOAT . PLOT_D
    (169) PLOT_D -> . COMMA PLOT_I
    (170) PLOT_D -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 272
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)

    PLOT_D                         shift and go to state 274
    EMPTY                          shift and go to state 273

state 226

    (159) PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 159 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 159 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 159 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 159 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 159 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 159 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 159 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 159 (PPie -> ID POINT CREATEPC OPEN_PARENTHESIS PLOT_E .)


state 227

    (171) PLOT_E -> PLOT_F . SEMICOLON PLOT_G

    SEMICOLON       shift and go to state 275


state 228

    (172) PLOT_F -> CTE_INTEGER . PLOT_J
    (174) PLOT_J -> . COMMA PLOT_F
    (175) PLOT_J -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 277
    SEMICOLON       reduce using rule 216 (EMPTY -> .)

    PLOT_J                         shift and go to state 276
    EMPTY                          shift and go to state 278

state 229

    (173) PLOT_F -> CTE_FLOAT . PLOT_J
    (174) PLOT_J -> . COMMA PLOT_F
    (175) PLOT_J -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 277
    SEMICOLON       reduce using rule 216 (EMPTY -> .)

    PLOT_J                         shift and go to state 279
    EMPTY                          shift and go to state 278

state 230

    (160) PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 160 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 160 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 160 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 160 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 160 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 160 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 160 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 160 (PGBarras -> ID POINT CREATEGB OPEN_PARENTHESIS PLOT_E .)


state 231

    (161) PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 161 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 161 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 161 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 161 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 161 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 161 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 161 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 161 (PGBarrasHor -> ID POINT CREATEGBH OPEN_PARENTHESIS PLOT_E .)


state 232

    (162) PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 162 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 162 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 162 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 162 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 162 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 162 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 162 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 162 (PDona -> ID POINT CREATED OPEN_PARENTHESIS PLOT_E .)


state 233

    (163) PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .

    ID              reduce using rule 163 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    IF              reduce using rule 163 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    FOR_KEYWORD     reduce using rule 163 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    WHILE_KEYWORD   reduce using rule 163 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    PRINT_KEYWORD   reduce using rule 163 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    INPUT_KEYWORD   reduce using rule 163 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    RETURN          reduce using rule 163 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)
    CLOSE_BRACKET   reduce using rule 163 (PRadar -> ID POINT CREATER OPEN_PARENTHESIS PLOT_E .)


state 234

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER . COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 280


state 235

    (165) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET . PLOT_M
    (180) PLOT_M -> . PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (181) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 283

    PLOT_M                         shift and go to state 281
    PLOT_N                         shift and go to state 282

state 236

    (68) LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .

    ID              reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    IF              reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    FOR_KEYWORD     reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    WHILE_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    PRINT_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    INPUT_KEYWORD   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    RETURN          reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)
    CLOSE_BRACKET   reduce using rule 68 (LLAMADAMODULO -> ID era OPEN_PARENTHESIS LLAMADAMODULO_C gosub .)


state 237

    (74) LLAMADAMODULO_C -> EXP check_types . LLAMADAMODULO_A LLAMADAMODULO_D
    (71) LLAMADAMODULO_A -> . COMMA incK LLAMADAMODULO_C
    (72) LLAMADAMODULO_A -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 285
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    ID              reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)

    LLAMADAMODULO_A                shift and go to state 284
    EMPTY                          shift and go to state 286

state 238

    (93) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool . BLOQUE CONDICION_A fill_end
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 287

state 239

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for . SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for

    SEMICOLON       shift and go to state 288


state 240

    (102) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while . BLOQUE goto_while
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 289

state 241

    (188) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad . SEMICOLON

    SEMICOLON       shift and go to state 290


state 242

    (189) PRINT_B -> CTE_STRING add_string PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 189 (PRINT_B -> CTE_STRING add_string PRINT_C .)


state 243

    (196) PRINT_C -> CONCATENATE . EXPRESIONESVARIAS add_con PRINT_D
    (197) PRINT_C -> CONCATENATE . CTE_STRING add_exp PRINT_D
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 292
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXPRESIONESVARIAS              shift and go to state 291
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 244

    (198) PRINT_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 198 (PRINT_C -> EMPTY .)


state 245

    (190) PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .

    CLOSE_PARENTHESIS reduce using rule 190 (PRINT_B -> EXPRESIONESVARIAS add_temp PRINT_C .)


state 246

    (144) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A . SEMICOLON quad_input

    SEMICOLON       shift and go to state 293


state 247

    (147) INPUT_A -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET INPUT_B
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 294
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 248

    (148) INPUT_A -> EMPTY .

    SEMICOLON       reduce using rule 148 (INPUT_A -> EMPTY .)


state 249

    (207) EV_B -> AND add_ev EV_C .

    SEMICOLON       reduce using rule 207 (EV_B -> AND add_ev EV_C .)
    CLOSE_PARENTHESIS reduce using rule 207 (EV_B -> AND add_ev EV_C .)
    CONCATENATE     reduce using rule 207 (EV_B -> AND add_ev EV_C .)
    CTE_INTEGER     reduce using rule 207 (EV_B -> AND add_ev EV_C .)
    CTE_FLOAT       reduce using rule 207 (EV_B -> AND add_ev EV_C .)
    BOOLEAN         reduce using rule 207 (EV_B -> AND add_ev EV_C .)
    ID              reduce using rule 207 (EV_B -> AND add_ev EV_C .)


state 250

    (208) EV_B -> OR add_ev EV_C .

    SEMICOLON       reduce using rule 208 (EV_B -> OR add_ev EV_C .)
    CLOSE_PARENTHESIS reduce using rule 208 (EV_B -> OR add_ev EV_C .)
    CONCATENATE     reduce using rule 208 (EV_B -> OR add_ev EV_C .)
    CTE_INTEGER     reduce using rule 208 (EV_B -> OR add_ev EV_C .)
    CTE_FLOAT       reduce using rule 208 (EV_B -> OR add_ev EV_C .)
    BOOLEAN         reduce using rule 208 (EV_B -> OR add_ev EV_C .)
    ID              reduce using rule 208 (EV_B -> OR add_ev EV_C .)


state 251

    (213) EXP_RELOP_A -> RELOP add_relop EXP .

    AND             reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)
    OR              reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)
    SEMICOLON       reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CLOSE_PARENTHESIS reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CONCATENATE     reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CTE_INTEGER     reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)
    CTE_FLOAT       reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)
    BOOLEAN         reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)
    ID              reduce using rule 213 (EXP_RELOP_A -> RELOP add_relop EXP .)


state 252

    (107) EXP_A -> PLUS append_operator . EXP
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 295
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 253

    (108) EXP_A -> MINS append_operator . EXP
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 296
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 254

    (113) TERMINO_A -> TIMES add_operator . TERMINO
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]

    TERMINO                        shift and go to state 297
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 255

    (114) TERMINO_A -> DIVIDE add_operator . TERMINO
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for CTE_INTEGER resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_INTEGER     [ reduce using rule 216 (EMPTY -> .) ]
  ! CTE_FLOAT       [ reduce using rule 216 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]

    TERMINO                        shift and go to state 298
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 256

    (139) VARS_CTE_B -> EXP VARS_CTE_C . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 299


state 257

    (140) VARS_CTE_C -> COMMA . VARS_CTE_B
    (139) VARS_CTE_B -> . EXP VARS_CTE_C CLOSE_PARENTHESIS
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    VARS_CTE_B                     shift and go to state 300
    EXP                            shift and go to state 203
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 258

    (141) VARS_CTE_C -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 141 (VARS_CTE_C -> EMPTY .)


state 259

    (137) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . VARS_CTE_D
    (142) VARS_CTE_D -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (143) VARS_CTE_D -> . EMPTY
    (216) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 301
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    PLUS            reduce using rule 216 (EMPTY -> .)
    MINS            reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    SEMICOLON       reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     reduce using rule 216 (EMPTY -> .)
    CTE_FLOAT       reduce using rule 216 (EMPTY -> .)
    BOOLEAN         reduce using rule 216 (EMPTY -> .)
    ID              reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)

    VARS_CTE_D                     shift and go to state 302
    EMPTY                          shift and go to state 303

state 260

    (49) MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .

    MODULE          reduce using rule 49 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)
    MAIN            reduce using rule 49 (MODULO -> MODULE MODULO_A ID add_functionr OPEN_PARENTHESIS MODULO_C release_vars change_scope endproc .)


state 261

    (60) MODULO_C -> TIPO_P ID add_variable_m MODULO_B . MODULO_D
    (62) MODULO_D -> . CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (63) MODULO_D -> . EMPTY
    (216) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 305
    MODULE          reduce using rule 216 (EMPTY -> .)
    MAIN            reduce using rule 216 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 216 (EMPTY -> .) ]

    MODULO_D                       shift and go to state 304
    EMPTY                          shift and go to state 306

state 262

    (58) MODULO_B -> COMMA . MODULO_C
    (60) MODULO_C -> . TIPO_P ID add_variable_m MODULO_B MODULO_D
    (37) TIPO_P -> . INT
    (38) TIPO_P -> . FLOAT
    (39) TIPO_P -> . BOOL
    (40) TIPO_P -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20

    MODULO_C                       shift and go to state 307
    TIPO_P                         shift and go to state 111

state 263

    (59) MODULO_B -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 59 (MODULO_B -> EMPTY .)
    MODULE          reduce using rule 59 (MODULO_B -> EMPTY .)
    MAIN            reduce using rule 59 (MODULO_B -> EMPTY .)


state 264

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER . add_s2 CLOSE_SQUARE_BRACKET
    (18) add_s2 -> .

    CLOSE_SQUARE_BRACKET reduce using rule 18 (add_s2 -> .)

    add_s2                         shift and go to state 308

state 265

    (82) ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .

    ID              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    IF              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    FOR_KEYWORD     reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    WHILE_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PRINT_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    INPUT_KEYWORD   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RETURN          reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_BRACKET   reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    NOT             reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OPEN_PARENTHESIS reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    PLUS            reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    MINS            reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_INTEGER     reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CTE_FLOAT       reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    BOOLEAN         reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    SEMICOLON       reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    AND             reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    OR              reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    RELOP           reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    TIMES           reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    DIVIDE          reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)
    CLOSE_PARENTHESIS reduce using rule 82 (ASIGNACION -> ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad .)


state 266

    (90) ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .

    SEMICOLON       reduce using rule 90 (ASIGNACION_C -> EQUAL add_equal EXPRESIONESVARIAS .)


state 267

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr . ASIGNACION_B
    (88) ASIGNACION_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET
    (89) ASIGNACION_B -> . EMPTY
    (216) EMPTY -> .

    OPEN_SQUARE_BRACKET shift and go to state 309
    EQUAL           reduce using rule 216 (EMPTY -> .)

    ASIGNACION_B                   shift and go to state 310
    EMPTY                          shift and go to state 311

state 268

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 312


state 269

    (117) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 313


state 270

    (166) PLOT_C -> PLOT_I CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 314


state 271

    (167) PLOT_I -> CTE_INTEGER PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 167 (PLOT_I -> CTE_INTEGER PLOT_D .)


state 272

    (169) PLOT_D -> COMMA . PLOT_I
    (167) PLOT_I -> . CTE_INTEGER PLOT_D
    (168) PLOT_I -> . CTE_FLOAT PLOT_D

    CTE_INTEGER     shift and go to state 224
    CTE_FLOAT       shift and go to state 225

    PLOT_I                         shift and go to state 315

state 273

    (170) PLOT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 170 (PLOT_D -> EMPTY .)


state 274

    (168) PLOT_I -> CTE_FLOAT PLOT_D .

    CLOSE_PARENTHESIS reduce using rule 168 (PLOT_I -> CTE_FLOAT PLOT_D .)


state 275

    (171) PLOT_E -> PLOT_F SEMICOLON . PLOT_G
    (176) PLOT_G -> . PLOT_K CLOSE_PARENTHESIS SEMICOLON
    (177) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 318

    PLOT_G                         shift and go to state 316
    PLOT_K                         shift and go to state 317

state 276

    (172) PLOT_F -> CTE_INTEGER PLOT_J .

    SEMICOLON       reduce using rule 172 (PLOT_F -> CTE_INTEGER PLOT_J .)


state 277

    (174) PLOT_J -> COMMA . PLOT_F
    (172) PLOT_F -> . CTE_INTEGER PLOT_J
    (173) PLOT_F -> . CTE_FLOAT PLOT_J

    CTE_INTEGER     shift and go to state 228
    CTE_FLOAT       shift and go to state 229

    PLOT_F                         shift and go to state 319

state 278

    (175) PLOT_J -> EMPTY .

    SEMICOLON       reduce using rule 175 (PLOT_J -> EMPTY .)


state 279

    (173) PLOT_F -> CTE_FLOAT PLOT_J .

    SEMICOLON       reduce using rule 173 (PLOT_F -> CTE_FLOAT PLOT_J .)


state 280

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA . CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 320


state 281

    (165) PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .

    ID              reduce using rule 165 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    IF              reduce using rule 165 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    FOR_KEYWORD     reduce using rule 165 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    WHILE_KEYWORD   reduce using rule 165 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    PRINT_KEYWORD   reduce using rule 165 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    INPUT_KEYWORD   reduce using rule 165 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    RETURN          reduce using rule 165 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)
    CLOSE_BRACKET   reduce using rule 165 (PLOT_B -> ID POINT CREATEN OPEN_PARENTHESIS OPEN_SQUARE_BRACKET PLOT_M .)


state 282

    (180) PLOT_M -> PLOT_N . CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 321


state 283

    (181) PLOT_N -> CTE_STRING . PLOT_O
    (182) PLOT_O -> . COMMA PLOT_N
    (183) PLOT_O -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 323
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)

    PLOT_O                         shift and go to state 322
    EMPTY                          shift and go to state 324

state 284

    (74) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A . LLAMADAMODULO_D
    (76) LLAMADAMODULO_D -> . CLOSE_PARENTHESIS SEMICOLON
    (77) LLAMADAMODULO_D -> . EMPTY
    (216) EMPTY -> .

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 326
    ID              reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)

  ! CLOSE_PARENTHESIS [ reduce using rule 216 (EMPTY -> .) ]

    LLAMADAMODULO_D                shift and go to state 325
    EMPTY                          shift and go to state 327

state 285

    (71) LLAMADAMODULO_A -> COMMA . incK LLAMADAMODULO_C
    (73) incK -> .

    OPEN_PARENTHESIS reduce using rule 73 (incK -> .)
    PLUS            reduce using rule 73 (incK -> .)
    MINS            reduce using rule 73 (incK -> .)
    CTE_INTEGER     reduce using rule 73 (incK -> .)
    CTE_FLOAT       reduce using rule 73 (incK -> .)
    BOOLEAN         reduce using rule 73 (incK -> .)
    ID              reduce using rule 73 (incK -> .)
    COMMA           reduce using rule 73 (incK -> .)
    CLOSE_PARENTHESIS reduce using rule 73 (incK -> .)
    TIMES           reduce using rule 73 (incK -> .)
    DIVIDE          reduce using rule 73 (incK -> .)
    IF              reduce using rule 73 (incK -> .)
    FOR_KEYWORD     reduce using rule 73 (incK -> .)
    WHILE_KEYWORD   reduce using rule 73 (incK -> .)
    PRINT_KEYWORD   reduce using rule 73 (incK -> .)
    INPUT_KEYWORD   reduce using rule 73 (incK -> .)
    RETURN          reduce using rule 73 (incK -> .)
    CLOSE_BRACKET   reduce using rule 73 (incK -> .)

    incK                           shift and go to state 328

state 286

    (72) LLAMADAMODULO_A -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    ID              reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    IF              reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    RETURN          reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 72 (LLAMADAMODULO_A -> EMPTY .)


state 287

    (93) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE . CONDICION_A fill_end
    (96) CONDICION_A -> . gotoElse ELSE BLOQUE
    (97) CONDICION_A -> . EMPTY
    (98) gotoElse -> .
    (216) EMPTY -> .

    ELSE            reduce using rule 98 (gotoElse -> .)
    ID              reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)

    CONDICION_A                    shift and go to state 329
    gotoElse                       shift and go to state 330
    EMPTY                          shift and go to state 331

state 288

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON . ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for
    (82) ASIGNACION -> . ID addStackO ASIGNACION_A ASIGNACION_C SEMICOLON quad

    ID              shift and go to state 136

    ASIGNACION                     shift and go to state 332

state 289

    (102) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE . goto_while
    (103) goto_while -> .

    ID              reduce using rule 103 (goto_while -> .)
    IF              reduce using rule 103 (goto_while -> .)
    FOR_KEYWORD     reduce using rule 103 (goto_while -> .)
    WHILE_KEYWORD   reduce using rule 103 (goto_while -> .)
    PRINT_KEYWORD   reduce using rule 103 (goto_while -> .)
    INPUT_KEYWORD   reduce using rule 103 (goto_while -> .)
    RETURN          reduce using rule 103 (goto_while -> .)
    CLOSE_BRACKET   reduce using rule 103 (goto_while -> .)

    goto_while                     shift and go to state 333

state 290

    (188) PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .

    ID              reduce using rule 188 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    IF              reduce using rule 188 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    FOR_KEYWORD     reduce using rule 188 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 188 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 188 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 188 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    RETURN          reduce using rule 188 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 188 (PRINT_A -> PRINT_B CLOSE_PARENTHESIS print_quad SEMICOLON .)


state 291

    (196) PRINT_C -> CONCATENATE EXPRESIONESVARIAS . add_con PRINT_D
    (200) add_con -> .

    CONCATENATE     reduce using rule 200 (add_con -> .)
    CLOSE_PARENTHESIS reduce using rule 200 (add_con -> .)

    add_con                        shift and go to state 334

state 292

    (197) PRINT_C -> CONCATENATE CTE_STRING . add_exp PRINT_D
    (199) add_exp -> .

    CONCATENATE     reduce using rule 199 (add_exp -> .)
    CLOSE_PARENTHESIS reduce using rule 199 (add_exp -> .)

    add_exp                        shift and go to state 335

state 293

    (144) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON . quad_input
    (146) quad_input -> .

    ID              reduce using rule 146 (quad_input -> .)
    IF              reduce using rule 146 (quad_input -> .)
    FOR_KEYWORD     reduce using rule 146 (quad_input -> .)
    WHILE_KEYWORD   reduce using rule 146 (quad_input -> .)
    PRINT_KEYWORD   reduce using rule 146 (quad_input -> .)
    INPUT_KEYWORD   reduce using rule 146 (quad_input -> .)
    RETURN          reduce using rule 146 (quad_input -> .)
    CLOSE_BRACKET   reduce using rule 146 (quad_input -> .)

    quad_input                     shift and go to state 336

state 294

    (147) INPUT_A -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET INPUT_B

    CLOSE_SQUARE_BRACKET shift and go to state 337


state 295

    (107) EXP_A -> PLUS append_operator EXP .

    RELOP           reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    AND             reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    OR              reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    SEMICOLON       reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    CONCATENATE     reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    CTE_INTEGER     reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    CTE_FLOAT       reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    BOOLEAN         reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    ID              reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    COMMA           reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    IF              reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    RETURN          reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 107 (EXP_A -> PLUS append_operator EXP .)


state 296

    (108) EXP_A -> MINS append_operator EXP .

    RELOP           reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    AND             reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    OR              reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    SEMICOLON       reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    CLOSE_PARENTHESIS reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    CONCATENATE     reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    CTE_INTEGER     reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    CTE_FLOAT       reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    BOOLEAN         reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    ID              reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    CLOSE_SQUARE_BRACKET reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    COMMA           reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    IF              reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    FOR_KEYWORD     reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    WHILE_KEYWORD   reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    PRINT_KEYWORD   reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    INPUT_KEYWORD   reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    RETURN          reduce using rule 108 (EXP_A -> MINS append_operator EXP .)
    CLOSE_BRACKET   reduce using rule 108 (EXP_A -> MINS append_operator EXP .)


state 297

    (113) TERMINO_A -> TIMES add_operator TERMINO .

    PLUS            reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    MINS            reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    RELOP           reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    AND             reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    OR              reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    SEMICOLON       reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    CONCATENATE     reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    CTE_INTEGER     reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    CTE_FLOAT       reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    BOOLEAN         reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    ID              reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    COMMA           reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    IF              reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    RETURN          reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 113 (TERMINO_A -> TIMES add_operator TERMINO .)


state 298

    (114) TERMINO_A -> DIVIDE add_operator TERMINO .

    PLUS            reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    MINS            reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RELOP           reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    AND             reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    OR              reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    SEMICOLON       reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_PARENTHESIS reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CONCATENATE     reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CTE_INTEGER     reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CTE_FLOAT       reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    BOOLEAN         reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    ID              reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_SQUARE_BRACKET reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    COMMA           reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    IF              reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    FOR_KEYWORD     reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    WHILE_KEYWORD   reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    PRINT_KEYWORD   reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    INPUT_KEYWORD   reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    RETURN          reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)
    CLOSE_BRACKET   reduce using rule 114 (TERMINO_A -> DIVIDE add_operator TERMINO .)


state 299

    (139) VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .

    TIMES           reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    MINS            reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RELOP           reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    AND             reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    OR              reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CONCATENATE     reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_INTEGER     reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CTE_FLOAT       reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    BOOLEAN         reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    ID              reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_SQUARE_BRACKET reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    IF              reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    FOR_KEYWORD     reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    WHILE_KEYWORD   reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    PRINT_KEYWORD   reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    INPUT_KEYWORD   reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 139 (VARS_CTE_B -> EXP VARS_CTE_C CLOSE_PARENTHESIS .)


state 300

    (140) VARS_CTE_C -> COMMA VARS_CTE_B .

    CLOSE_PARENTHESIS reduce using rule 140 (VARS_CTE_C -> COMMA VARS_CTE_B .)


state 301

    (142) VARS_CTE_D -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 338
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 302

    (137) VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .

    TIMES           reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    DIVIDE          reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PLUS            reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    MINS            reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    RELOP           reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    AND             reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    OR              reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    SEMICOLON       reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_PARENTHESIS reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CONCATENATE     reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_INTEGER     reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CTE_FLOAT       reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    BOOLEAN         reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    ID              reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_SQUARE_BRACKET reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    COMMA           reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    IF              reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    FOR_KEYWORD     reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    WHILE_KEYWORD   reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    PRINT_KEYWORD   reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    INPUT_KEYWORD   reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    RETURN          reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)
    CLOSE_BRACKET   reduce using rule 137 (VARS_CTE_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET VARS_CTE_D .)


state 303

    (143) VARS_CTE_D -> EMPTY .

    TIMES           reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    DIVIDE          reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    PLUS            reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    MINS            reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    RELOP           reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    AND             reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    OR              reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    SEMICOLON       reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    CONCATENATE     reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    CTE_INTEGER     reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    CTE_FLOAT       reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    BOOLEAN         reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    ID              reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    CLOSE_SQUARE_BRACKET reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    COMMA           reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    IF              reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    RETURN          reduce using rule 143 (VARS_CTE_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 143 (VARS_CTE_D -> EMPTY .)


state 304

    (60) MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .

    MODULE          reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    MAIN            reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 60 (MODULO_C -> TIPO_P ID add_variable_m MODULO_B MODULO_D .)


state 305

    (62) MODULO_D -> CLOSE_PARENTHESIS . param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (67) param_table -> .

    OPEN_BRACKET    reduce using rule 67 (param_table -> .)

    param_table                    shift and go to state 339

state 306

    (63) MODULO_D -> EMPTY .

    MODULE          reduce using rule 63 (MODULO_D -> EMPTY .)
    MAIN            reduce using rule 63 (MODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 63 (MODULO_D -> EMPTY .)


state 307

    (58) MODULO_B -> COMMA MODULO_C .

    CLOSE_PARENTHESIS reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)
    MODULE          reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)
    MAIN            reduce using rule 58 (MODULO_B -> COMMA MODULO_C .)


state 308

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 340


state 309

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 341
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 310

    (85) ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B .

    EQUAL           reduce using rule 85 (ASIGNACION_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET ver_arr ASIGNACION_B .)


state 311

    (89) ASIGNACION_B -> EMPTY .

    EQUAL           reduce using rule 89 (ASIGNACION_B -> EMPTY .)


state 312

    (78) NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 78 (NOMBRAR -> ID POINT NOMBRAR_A OPEN_PARENTHESIS CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)


state 313

    (117) COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 117 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 117 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 117 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 117 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 117 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 117 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 117 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 117 (COLOR -> ID POINT COLOR_KEYWORD OPEN_PARENTHESIS COLOR_A CLOSE_PARENTHESIS SEMICOLON .)


state 314

    (166) PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 166 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 166 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 166 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 166 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 166 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 166 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 166 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 166 (PLOT_C -> PLOT_I CLOSE_PARENTHESIS SEMICOLON .)


state 315

    (169) PLOT_D -> COMMA PLOT_I .

    CLOSE_PARENTHESIS reduce using rule 169 (PLOT_D -> COMMA PLOT_I .)


state 316

    (171) PLOT_E -> PLOT_F SEMICOLON PLOT_G .

    ID              reduce using rule 171 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    IF              reduce using rule 171 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    FOR_KEYWORD     reduce using rule 171 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    WHILE_KEYWORD   reduce using rule 171 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    PRINT_KEYWORD   reduce using rule 171 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    INPUT_KEYWORD   reduce using rule 171 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    RETURN          reduce using rule 171 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)
    CLOSE_BRACKET   reduce using rule 171 (PLOT_E -> PLOT_F SEMICOLON PLOT_G .)


state 317

    (176) PLOT_G -> PLOT_K . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 342


state 318

    (177) PLOT_K -> CTE_STRING . PLOT_H
    (178) PLOT_H -> . COMMA PLOT_K
    (179) PLOT_H -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 344
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)

    PLOT_H                         shift and go to state 343
    EMPTY                          shift and go to state 345

state 319

    (174) PLOT_J -> COMMA PLOT_F .

    SEMICOLON       reduce using rule 174 (PLOT_J -> COMMA PLOT_F .)


state 320

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER . COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 346


state 321

    (180) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET . SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 347


state 322

    (181) PLOT_N -> CTE_STRING PLOT_O .

    CLOSE_SQUARE_BRACKET reduce using rule 181 (PLOT_N -> CTE_STRING PLOT_O .)


state 323

    (182) PLOT_O -> COMMA . PLOT_N
    (181) PLOT_N -> . CTE_STRING PLOT_O

    CTE_STRING      shift and go to state 283

    PLOT_N                         shift and go to state 348

state 324

    (183) PLOT_O -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 183 (PLOT_O -> EMPTY .)


state 325

    (74) LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .

    ID              reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    IF              reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    FOR_KEYWORD     reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    WHILE_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    PRINT_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    INPUT_KEYWORD   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    RETURN          reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_BRACKET   reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)
    CLOSE_PARENTHESIS reduce using rule 74 (LLAMADAMODULO_C -> EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D .)


state 326

    (76) LLAMADAMODULO_D -> CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 349


state 327

    (77) LLAMADAMODULO_D -> EMPTY .

    ID              reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    IF              reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    FOR_KEYWORD     reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    RETURN          reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)
    CLOSE_PARENTHESIS reduce using rule 77 (LLAMADAMODULO_D -> EMPTY .)


state 328

    (71) LLAMADAMODULO_A -> COMMA incK . LLAMADAMODULO_C
    (74) LLAMADAMODULO_C -> . EXP check_types LLAMADAMODULO_A LLAMADAMODULO_D
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    COMMA           reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    IF              reduce using rule 216 (EMPTY -> .)
    FOR_KEYWORD     reduce using rule 216 (EMPTY -> .)
    WHILE_KEYWORD   reduce using rule 216 (EMPTY -> .)
    PRINT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    INPUT_KEYWORD   reduce using rule 216 (EMPTY -> .)
    RETURN          reduce using rule 216 (EMPTY -> .)
    CLOSE_BRACKET   reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]
  ! ID              [ reduce using rule 216 (EMPTY -> .) ]

    LLAMADAMODULO_C                shift and go to state 350
    EXP                            shift and go to state 180
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 329

    (93) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A . fill_end
    (94) fill_end -> .

    ID              reduce using rule 94 (fill_end -> .)
    IF              reduce using rule 94 (fill_end -> .)
    FOR_KEYWORD     reduce using rule 94 (fill_end -> .)
    WHILE_KEYWORD   reduce using rule 94 (fill_end -> .)
    PRINT_KEYWORD   reduce using rule 94 (fill_end -> .)
    INPUT_KEYWORD   reduce using rule 94 (fill_end -> .)
    RETURN          reduce using rule 94 (fill_end -> .)
    CLOSE_BRACKET   reduce using rule 94 (fill_end -> .)

    fill_end                       shift and go to state 351

state 330

    (96) CONDICION_A -> gotoElse . ELSE BLOQUE

    ELSE            shift and go to state 352


state 331

    (97) CONDICION_A -> EMPTY .

    ID              reduce using rule 97 (CONDICION_A -> EMPTY .)
    IF              reduce using rule 97 (CONDICION_A -> EMPTY .)
    FOR_KEYWORD     reduce using rule 97 (CONDICION_A -> EMPTY .)
    WHILE_KEYWORD   reduce using rule 97 (CONDICION_A -> EMPTY .)
    PRINT_KEYWORD   reduce using rule 97 (CONDICION_A -> EMPTY .)
    INPUT_KEYWORD   reduce using rule 97 (CONDICION_A -> EMPTY .)
    RETURN          reduce using rule 97 (CONDICION_A -> EMPTY .)
    CLOSE_BRACKET   reduce using rule 97 (CONDICION_A -> EMPTY .)


state 332

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION . CLOSE_PARENTHESIS BLOQUE repeat_for

    CLOSE_PARENTHESIS shift and go to state 353


state 333

    (102) WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .

    ID              reduce using rule 102 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    IF              reduce using rule 102 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    FOR_KEYWORD     reduce using rule 102 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    WHILE_KEYWORD   reduce using rule 102 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    PRINT_KEYWORD   reduce using rule 102 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    INPUT_KEYWORD   reduce using rule 102 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    RETURN          reduce using rule 102 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)
    CLOSE_BRACKET   reduce using rule 102 (WHILE -> WHILE_KEYWORD OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS bool_while BLOQUE goto_while .)


state 334

    (196) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con . PRINT_D
    (201) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (202) PRINT_D -> . EMPTY
    (216) EMPTY -> .

    CONCATENATE     shift and go to state 354
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)

    PRINT_D                        shift and go to state 355
    EMPTY                          shift and go to state 356

state 335

    (197) PRINT_C -> CONCATENATE CTE_STRING add_exp . PRINT_D
    (201) PRINT_D -> . CONCATENATE add_sign PRINT_B
    (202) PRINT_D -> . EMPTY
    (216) EMPTY -> .

    CONCATENATE     shift and go to state 354
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)

    PRINT_D                        shift and go to state 357
    EMPTY                          shift and go to state 356

state 336

    (144) INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .

    ID              reduce using rule 144 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    IF              reduce using rule 144 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    FOR_KEYWORD     reduce using rule 144 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    WHILE_KEYWORD   reduce using rule 144 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    PRINT_KEYWORD   reduce using rule 144 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    INPUT_KEYWORD   reduce using rule 144 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    RETURN          reduce using rule 144 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)
    CLOSE_BRACKET   reduce using rule 144 (INPUT -> INPUT_KEYWORD INPUTSYMBOL ID add_inputid INPUT_A SEMICOLON quad_input .)


state 337

    (147) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET . INPUT_B
    (149) INPUT_B -> . OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET shift and go to state 358

    INPUT_B                        shift and go to state 359

state 338

    (142) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 360


state 339

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table . OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 361


state 340

    (16) VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 16 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 16 (VARS_F -> OPEN_SQUARE_BRACKET CTE_INTEGER add_s2 CLOSE_SQUARE_BRACKET .)


state 341

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 362


state 342

    (176) PLOT_G -> PLOT_K CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 363


state 343

    (177) PLOT_K -> CTE_STRING PLOT_H .

    CLOSE_PARENTHESIS reduce using rule 177 (PLOT_K -> CTE_STRING PLOT_H .)


state 344

    (178) PLOT_H -> COMMA . PLOT_K
    (177) PLOT_K -> . CTE_STRING PLOT_H

    CTE_STRING      shift and go to state 318

    PLOT_K                         shift and go to state 364

state 345

    (179) PLOT_H -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 179 (PLOT_H -> EMPTY .)


state 346

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA . CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_INTEGER     shift and go to state 365


state 347

    (180) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON . OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    OPEN_SQUARE_BRACKET shift and go to state 366


state 348

    (182) PLOT_O -> COMMA PLOT_N .

    CLOSE_SQUARE_BRACKET reduce using rule 182 (PLOT_O -> COMMA PLOT_N .)


state 349

    (76) LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_PARENTHESIS reduce using rule 76 (LLAMADAMODULO_D -> CLOSE_PARENTHESIS SEMICOLON .)


state 350

    (71) LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .

    CLOSE_PARENTHESIS reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    ID              reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    IF              reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    FOR_KEYWORD     reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    WHILE_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    PRINT_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    INPUT_KEYWORD   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    RETURN          reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)
    CLOSE_BRACKET   reduce using rule 71 (LLAMADAMODULO_A -> COMMA incK LLAMADAMODULO_C .)


state 351

    (93) CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .

    ID              reduce using rule 93 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    IF              reduce using rule 93 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    FOR_KEYWORD     reduce using rule 93 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    WHILE_KEYWORD   reduce using rule 93 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    PRINT_KEYWORD   reduce using rule 93 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    INPUT_KEYWORD   reduce using rule 93 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    RETURN          reduce using rule 93 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)
    CLOSE_BRACKET   reduce using rule 93 (CONDICION -> IF OPEN_PARENTHESIS EXPRESIONESVARIAS CLOSE_PARENTHESIS check_bool BLOQUE CONDICION_A fill_end .)


state 352

    (96) CONDICION_A -> gotoElse ELSE . BLOQUE
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 367

state 353

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS . BLOQUE repeat_for
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 368

state 354

    (201) PRINT_D -> CONCATENATE . add_sign PRINT_B
    (203) add_sign -> .

    CTE_STRING      reduce using rule 203 (add_sign -> .)
    NOT             reduce using rule 203 (add_sign -> .)
    OPEN_PARENTHESIS reduce using rule 203 (add_sign -> .)
    PLUS            reduce using rule 203 (add_sign -> .)
    MINS            reduce using rule 203 (add_sign -> .)
    CTE_INTEGER     reduce using rule 203 (add_sign -> .)
    CTE_FLOAT       reduce using rule 203 (add_sign -> .)
    BOOLEAN         reduce using rule 203 (add_sign -> .)
    ID              reduce using rule 203 (add_sign -> .)
    CONCATENATE     reduce using rule 203 (add_sign -> .)
    AND             reduce using rule 203 (add_sign -> .)
    OR              reduce using rule 203 (add_sign -> .)
    RELOP           reduce using rule 203 (add_sign -> .)
    TIMES           reduce using rule 203 (add_sign -> .)
    DIVIDE          reduce using rule 203 (add_sign -> .)
    CLOSE_PARENTHESIS reduce using rule 203 (add_sign -> .)

    add_sign                       shift and go to state 369

state 355

    (196) PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 196 (PRINT_C -> CONCATENATE EXPRESIONESVARIAS add_con PRINT_D .)


state 356

    (202) PRINT_D -> EMPTY .

    CLOSE_PARENTHESIS reduce using rule 202 (PRINT_D -> EMPTY .)


state 357

    (197) PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .

    CLOSE_PARENTHESIS reduce using rule 197 (PRINT_C -> CONCATENATE CTE_STRING add_exp PRINT_D .)


state 358

    (149) INPUT_B -> OPEN_SQUARE_BRACKET . EXP CLOSE_SQUARE_BRACKET
    (105) EXP -> . TERMINO pop_exp EXP_A
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (216) EMPTY -> .
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    EXP                            shift and go to state 370
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    EMPTY                          shift and go to state 168
    VARS_CTE                       shift and go to state 104

state 359

    (147) INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .

    SEMICOLON       reduce using rule 147 (INPUT_A -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET INPUT_B .)


state 360

    (142) VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    TIMES           reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    DIVIDE          reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PLUS            reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    MINS            reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    RELOP           reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    AND             reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    OR              reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    SEMICOLON       reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CONCATENATE     reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_INTEGER     reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CTE_FLOAT       reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    BOOLEAN         reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    ID              reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_SQUARE_BRACKET reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    COMMA           reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    IF              reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    FOR_KEYWORD     reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    WHILE_KEYWORD   reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    PRINT_KEYWORD   reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    INPUT_KEYWORD   reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    RETURN          reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 142 (VARS_CTE_D -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 361

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET . OPVARS add_count add_start BLOQUE CLOSE_BRACKET
    (64) OPVARS -> . VARS
    (65) OPVARS -> . EMPTY
    (8) VARS -> . VARS_KEYWORD OPEN_BRACKET VARS_A
    (216) EMPTY -> .

    VARS_KEYWORD    shift and go to state 7
    OPEN_BRACKET    reduce using rule 216 (EMPTY -> .)

    OPVARS                         shift and go to state 371
    VARS                           shift and go to state 372
    EMPTY                          shift and go to state 373

state 362

    (88) ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    EQUAL           reduce using rule 88 (ASIGNACION_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 363

    (176) PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 176 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 176 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 176 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 176 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 176 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 176 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 176 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 176 (PLOT_G -> PLOT_K CLOSE_PARENTHESIS SEMICOLON .)


state 364

    (178) PLOT_H -> COMMA PLOT_K .

    CLOSE_PARENTHESIS reduce using rule 178 (PLOT_H -> COMMA PLOT_K .)


state 365

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER . SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    SEMICOLON       shift and go to state 374


state 366

    (180) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET . PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON
    (184) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 376

    PLOT_P                         shift and go to state 375

state 367

    (96) CONDICION_A -> gotoElse ELSE BLOQUE .

    ID              reduce using rule 96 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    IF              reduce using rule 96 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    FOR_KEYWORD     reduce using rule 96 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    WHILE_KEYWORD   reduce using rule 96 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    PRINT_KEYWORD   reduce using rule 96 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    INPUT_KEYWORD   reduce using rule 96 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    RETURN          reduce using rule 96 (CONDICION_A -> gotoElse ELSE BLOQUE .)
    CLOSE_BRACKET   reduce using rule 96 (CONDICION_A -> gotoElse ELSE BLOQUE .)


state 368

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE . repeat_for
    (100) repeat_for -> .

    ID              reduce using rule 100 (repeat_for -> .)
    IF              reduce using rule 100 (repeat_for -> .)
    FOR_KEYWORD     reduce using rule 100 (repeat_for -> .)
    WHILE_KEYWORD   reduce using rule 100 (repeat_for -> .)
    PRINT_KEYWORD   reduce using rule 100 (repeat_for -> .)
    INPUT_KEYWORD   reduce using rule 100 (repeat_for -> .)
    RETURN          reduce using rule 100 (repeat_for -> .)
    CLOSE_BRACKET   reduce using rule 100 (repeat_for -> .)

    repeat_for                     shift and go to state 377

state 369

    (201) PRINT_D -> CONCATENATE add_sign . PRINT_B
    (189) PRINT_B -> . CTE_STRING add_string PRINT_C
    (190) PRINT_B -> . EXPRESIONESVARIAS add_temp PRINT_C
    (204) EXPRESIONESVARIAS -> . NOT EV_C
    (205) EXPRESIONESVARIAS -> . EV_C
    (206) EV_C -> . EXP_RELOP EV_B
    (211) EXP_RELOP -> . EXP EXP_RELOP_A
    (212) EXP_RELOP -> . EMPTY
    (105) EXP -> . TERMINO pop_exp EXP_A
    (216) EMPTY -> .
    (111) TERMINO -> . FACTOR pop_term TERMINO_A
    (124) FACTOR -> . FACTOR_A
    (125) FACTOR_A -> . OPEN_PARENTHESIS FACTOR_B CLOSE_PARENTHESIS
    (126) FACTOR_A -> . PLUS FACTOR_C
    (127) FACTOR_A -> . MINS FACTOR_C
    (128) FACTOR_A -> . FACTOR_C
    (129) FACTOR_A -> . EMPTY
    (131) FACTOR_C -> . VARS_CTE
    (132) VARS_CTE -> . CTE_INTEGER
    (133) VARS_CTE -> . CTE_FLOAT
    (134) VARS_CTE -> . BOOLEAN
    (135) VARS_CTE -> . ID VARS_CTE_A

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINS resolved as shift
    CTE_STRING      shift and go to state 140
    NOT             shift and go to state 92
    AND             reduce using rule 216 (EMPTY -> .)
    OR              reduce using rule 216 (EMPTY -> .)
    CONCATENATE     reduce using rule 216 (EMPTY -> .)
    CLOSE_PARENTHESIS reduce using rule 216 (EMPTY -> .)
    TIMES           reduce using rule 216 (EMPTY -> .)
    DIVIDE          reduce using rule 216 (EMPTY -> .)
    RELOP           reduce using rule 216 (EMPTY -> .)
    OPEN_PARENTHESIS shift and go to state 100
    PLUS            shift and go to state 101
    MINS            shift and go to state 103
    CTE_INTEGER     shift and go to state 105
    CTE_FLOAT       shift and go to state 106
    BOOLEAN         shift and go to state 107
    ID              shift and go to state 108

  ! PLUS            [ reduce using rule 216 (EMPTY -> .) ]
  ! MINS            [ reduce using rule 216 (EMPTY -> .) ]

    PRINT_B                        shift and go to state 378
    EXPRESIONESVARIAS              shift and go to state 141
    EV_C                           shift and go to state 93
    EXP_RELOP                      shift and go to state 94
    EXP                            shift and go to state 95
    EMPTY                          shift and go to state 96
    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 98
    FACTOR_A                       shift and go to state 99
    FACTOR_C                       shift and go to state 102
    VARS_CTE                       shift and go to state 104

state 370

    (149) INPUT_B -> OPEN_SQUARE_BRACKET EXP . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 379


state 371

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS . add_count add_start BLOQUE CLOSE_BRACKET
    (3) add_count -> .

    OPEN_BRACKET    reduce using rule 3 (add_count -> .)

    add_count                      shift and go to state 380

state 372

    (64) OPVARS -> VARS .

    OPEN_BRACKET    reduce using rule 64 (OPVARS -> VARS .)


state 373

    (65) OPVARS -> EMPTY .

    OPEN_BRACKET    reduce using rule 65 (OPVARS -> EMPTY .)


state 374

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON . CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 381


state 375

    (180) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 382


state 376

    (184) PLOT_P -> CTE_STRING . PLOT_Q
    (185) PLOT_Q -> . COMMA PLOT_P
    (186) PLOT_Q -> . EMPTY
    (216) EMPTY -> .

    COMMA           shift and go to state 384
    CLOSE_SQUARE_BRACKET reduce using rule 216 (EMPTY -> .)

    PLOT_Q                         shift and go to state 383
    EMPTY                          shift and go to state 385

state 377

    (99) FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .

    ID              reduce using rule 99 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    IF              reduce using rule 99 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    FOR_KEYWORD     reduce using rule 99 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    WHILE_KEYWORD   reduce using rule 99 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    PRINT_KEYWORD   reduce using rule 99 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    INPUT_KEYWORD   reduce using rule 99 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    RETURN          reduce using rule 99 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)
    CLOSE_BRACKET   reduce using rule 99 (FOR -> FOR_KEYWORD OPEN_PARENTHESIS ASIGNACION EXPRESIONESVARIAS bool_for SEMICOLON ASIGNACION CLOSE_PARENTHESIS BLOQUE repeat_for .)


state 378

    (201) PRINT_D -> CONCATENATE add_sign PRINT_B .

    CLOSE_PARENTHESIS reduce using rule 201 (PRINT_D -> CONCATENATE add_sign PRINT_B .)


state 379

    (149) INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 149 (INPUT_B -> OPEN_SQUARE_BRACKET EXP CLOSE_SQUARE_BRACKET .)


state 380

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count . add_start BLOQUE CLOSE_BRACKET
    (66) add_start -> .

    OPEN_BRACKET    reduce using rule 66 (add_start -> .)

    add_start                      shift and go to state 386

state 381

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING . COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 387


state 382

    (180) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 388


state 383

    (184) PLOT_P -> CTE_STRING PLOT_Q .

    CLOSE_SQUARE_BRACKET reduce using rule 184 (PLOT_P -> CTE_STRING PLOT_Q .)


state 384

    (185) PLOT_Q -> COMMA . PLOT_P
    (184) PLOT_P -> . CTE_STRING PLOT_Q

    CTE_STRING      shift and go to state 376

    PLOT_P                         shift and go to state 389

state 385

    (186) PLOT_Q -> EMPTY .

    CLOSE_SQUARE_BRACKET reduce using rule 186 (PLOT_Q -> EMPTY .)


state 386

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start . BLOQUE CLOSE_BRACKET
    (23) BLOQUE -> . OPEN_BRACKET ESTATUTO_A CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 40

    BLOQUE                         shift and go to state 390

state 387

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA . CTE_STRING CLOSE_PARENTHESIS SEMICOLON

    CTE_STRING      shift and go to state 391


state 388

    (180) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 392


state 389

    (185) PLOT_Q -> COMMA PLOT_P .

    CLOSE_SQUARE_BRACKET reduce using rule 185 (PLOT_Q -> COMMA PLOT_P .)


state 390

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 393


state 391

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 394


state 392

    (180) PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 180 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 180 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 180 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 180 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 180 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 180 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 180 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 180 (PLOT_M -> PLOT_N CLOSE_SQUARE_BRACKET SEMICOLON OPEN_SQUARE_BRACKET PLOT_P CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMICOLON .)


state 393

    (62) MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .

    MODULE          reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)
    MAIN            reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 62 (MODULO_D -> CLOSE_PARENTHESIS param_table OPEN_BRACKET OPVARS add_count add_start BLOQUE CLOSE_BRACKET .)


state 394

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 395


state 395

    (164) PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .

    ID              reduce using rule 164 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 164 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    FOR_KEYWORD     reduce using rule 164 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    WHILE_KEYWORD   reduce using rule 164 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    PRINT_KEYWORD   reduce using rule 164 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    INPUT_KEYWORD   reduce using rule 164 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 164 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 164 (PVenn -> ID POINT CREATEV OPEN_PARENTHESIS CTE_INTEGER COMMA CTE_INTEGER COMMA CTE_INTEGER SEMICOLON CTE_STRING COMMA CTE_STRING CLOSE_PARENTHESIS SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINS in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINS in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINS in state 92 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 92 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 92 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINS in state 100 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 100 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 100 resolved as shift
WARNING: shift/reduce conflict for ID in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINS in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINS in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINS in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 159 resolved as shift
WARNING: shift/reduce conflict for MINS in state 159 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MINS in state 160 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 189 resolved as shift
WARNING: shift/reduce conflict for MINS in state 189 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 189 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 189 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 189 resolved as shift
WARNING: shift/reduce conflict for ID in state 189 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 190 resolved as shift
WARNING: shift/reduce conflict for MINS in state 190 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 190 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 190 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 190 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 191 resolved as shift
WARNING: shift/reduce conflict for MINS in state 191 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 191 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 191 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 211 resolved as shift
WARNING: shift/reduce conflict for MINS in state 211 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 243 resolved as shift
WARNING: shift/reduce conflict for MINS in state 243 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 247 resolved as shift
WARNING: shift/reduce conflict for MINS in state 247 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 252 resolved as shift
WARNING: shift/reduce conflict for MINS in state 252 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 252 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 252 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 252 resolved as shift
WARNING: shift/reduce conflict for ID in state 252 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 253 resolved as shift
WARNING: shift/reduce conflict for MINS in state 253 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 253 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 253 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 253 resolved as shift
WARNING: shift/reduce conflict for ID in state 253 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 254 resolved as shift
WARNING: shift/reduce conflict for MINS in state 254 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 254 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 254 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 254 resolved as shift
WARNING: shift/reduce conflict for ID in state 254 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 255 resolved as shift
WARNING: shift/reduce conflict for MINS in state 255 resolved as shift
WARNING: shift/reduce conflict for CTE_INTEGER in state 255 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 255 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 255 resolved as shift
WARNING: shift/reduce conflict for ID in state 255 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 257 resolved as shift
WARNING: shift/reduce conflict for MINS in state 257 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 261 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 284 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 301 resolved as shift
WARNING: shift/reduce conflict for MINS in state 301 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 309 resolved as shift
WARNING: shift/reduce conflict for MINS in state 309 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 328 resolved as shift
WARNING: shift/reduce conflict for MINS in state 328 resolved as shift
WARNING: shift/reduce conflict for ID in state 328 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 358 resolved as shift
WARNING: shift/reduce conflict for MINS in state 358 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 369 resolved as shift
WARNING: shift/reduce conflict for MINS in state 369 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (FACTOR_A -> EMPTY)
WARNING: rejected rule (EXP_RELOP -> EMPTY) in state 96
WARNING: Rule (EXP_RELOP -> EMPTY) is never reduced
